[{"F:\\do_an_frontend\\app\\src\\index.js":"1","F:\\do_an_frontend\\app\\src\\App.js":"2","F:\\do_an_frontend\\app\\src\\layout\\Layout.js":"3","F:\\do_an_frontend\\app\\src\\redux\\Store.js":"4","F:\\do_an_frontend\\app\\src\\components\\books\\BooksPage.js":"5","F:\\do_an_frontend\\app\\src\\layout\\layout-project\\LayoutProject.js":"6","F:\\do_an_frontend\\app\\src\\components\\user\\UserPage.js":"7","F:\\do_an_frontend\\app\\src\\components\\login\\Login.js":"8","F:\\do_an_frontend\\app\\src\\components\\manager\\ManagerPage.js":"9","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\create_voucher\\CreateVoucher.js":"10","F:\\do_an_frontend\\app\\src\\components\\manager\\manager_info\\ManagerInfoPage .js":"11","F:\\do_an_frontend\\app\\src\\common\\menu-project\\MenuProject.js":"12","F:\\do_an_frontend\\app\\src\\components\\voucher\\VoucherPage.js":"13","F:\\do_an_frontend\\app\\src\\redux\\slice\\LoginSlice.js":"14","F:\\do_an_frontend\\app\\src\\redux\\slice\\BooksSlice.js":"15","F:\\do_an_frontend\\app\\src\\components\\user\\components\\get_detail_user\\DetailUser.js":"16","F:\\do_an_frontend\\app\\src\\redux\\slice\\VoucherSlice.js":"17","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\detail_voucher\\DetailVoucher.js":"18","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\update_voucher\\UpdateVoucher.js":"19","F:\\do_an_frontend\\app\\src\\redux\\slice\\BookSlice.js":"20","F:\\do_an_frontend\\app\\src\\redux\\slice\\UserSlice.js":"21","F:\\do_an_frontend\\app\\src\\redux\\slice\\ManagerSlice.js":"22","F:\\do_an_frontend\\app\\src\\redux\\slice\\GroupsSlice.js":"23","F:\\do_an_frontend\\app\\src\\components\\books\\components\\detail_books\\DetailBooks.js":"24","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\toasts\\Toasts.js":"25","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\loading\\Loading.js":"26","F:\\do_an_frontend\\app\\src\\common\\const.js":"27","F:\\do_an_frontend\\app\\src\\common\\utils.js":"28","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\data-table\\DataTable.js":"29","F:\\do_an_frontend\\app\\src\\redux\\action\\BooksAction.js":"30","F:\\do_an_frontend\\app\\src\\redux\\action\\BookAction.js":"31","F:\\do_an_frontend\\app\\src\\redux\\action\\UserAction.js":"32","F:\\do_an_frontend\\app\\src\\redux\\action\\ManagerAction.js":"33","F:\\do_an_frontend\\app\\src\\redux\\action\\VoucherAction.js":"34","F:\\do_an_frontend\\app\\src\\components\\books\\components\\create_books\\CreateBooks.js":"35","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown-v2\\DropDown.js":"36","F:\\do_an_frontend\\app\\src\\redux\\action\\GroupsAction.js":"37","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\modal\\Modal.js":"38","F:\\do_an_frontend\\app\\src\\redux\\service\\LoginService.js":"39","F:\\do_an_frontend\\app\\src\\components\\user\\components\\create_user\\CreateUser.js":"40","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\confirm\\Confirm.js":"41","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\button\\Button.js":"42","F:\\do_an_frontend\\app\\src\\redux\\action\\LoginAction.js":"43","F:\\do_an_frontend\\app\\src\\components\\manager\\get-detail-manager\\DetailManager.js":"44","F:\\do_an_frontend\\app\\src\\components\\manager\\create-manager\\CreateManager.js":"45","F:\\do_an_frontend\\app\\src\\components\\books\\components\\update_books\\UpdateBooks.js":"46","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\user_voucher\\UserPageVoucher.js":"47","F:\\do_an_frontend\\app\\src\\redux\\service\\VoucherService.js":"48","F:\\do_an_frontend\\app\\src\\redux\\service\\BooksService.js":"49","F:\\do_an_frontend\\app\\src\\redux\\service\\GroupsService.js":"50","F:\\do_an_frontend\\app\\src\\redux\\service\\UserService.js":"51","F:\\do_an_frontend\\app\\src\\redux\\service\\commonService.js":"52","F:\\do_an_frontend\\app\\src\\redux\\service\\ManagerService.js":"53","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\pagination\\Pagination.js":"54","F:\\do_an_frontend\\app\\src\\common\\http-commons.js":"55","F:\\do_an_frontend\\app\\src\\redux\\service\\BookService.js":"56","F:\\do_an_frontend\\app\\src\\common\\constImage.js":"57","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown\\DropDown.js":"58","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\sidebar\\SideBar.js":"59","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\menu\\Menu.js":"60","F:\\do_an_frontend\\app\\src\\layout\\main-router\\MainRouter.js":"61"},{"size":158,"mtime":1675852453602,"results":"62","hashOfConfig":"63"},{"size":443,"mtime":1675270513434,"results":"64","hashOfConfig":"63"},{"size":3661,"mtime":1682269049694,"results":"65","hashOfConfig":"63"},{"size":831,"mtime":1677422064415,"results":"66","hashOfConfig":"63"},{"size":15795,"mtime":1676217769595,"results":"67","hashOfConfig":"63"},{"size":2766,"mtime":1682269071233,"results":"68","hashOfConfig":"63"},{"size":13252,"mtime":1676731673795,"results":"69","hashOfConfig":"63"},{"size":3606,"mtime":1675871485504,"results":"70","hashOfConfig":"63"},{"size":14327,"mtime":1677512607604,"results":"71","hashOfConfig":"63"},{"size":18273,"mtime":1682191459335,"results":"72","hashOfConfig":"63"},{"size":15930,"mtime":1681840628485,"results":"73","hashOfConfig":"63"},{"size":3685,"mtime":1682269466838,"results":"74","hashOfConfig":"63"},{"size":17773,"mtime":1682009074020,"results":"75","hashOfConfig":"63"},{"size":547,"mtime":1676995884098,"results":"76","hashOfConfig":"63"},{"size":1352,"mtime":1675959942362,"results":"77","hashOfConfig":"63"},{"size":11263,"mtime":1676390757880,"results":"78","hashOfConfig":"63"},{"size":1374,"mtime":1676658013173,"results":"79","hashOfConfig":"63"},{"size":13376,"mtime":1676827483000,"results":"80","hashOfConfig":"63"},{"size":19111,"mtime":1676908082039,"results":"81","hashOfConfig":"63"},{"size":1341,"mtime":1675960829509,"results":"82","hashOfConfig":"63"},{"size":1341,"mtime":1676217252318,"results":"83","hashOfConfig":"63"},{"size":1374,"mtime":1677421907318,"results":"84","hashOfConfig":"63"},{"size":1007,"mtime":1675609438166,"results":"85","hashOfConfig":"63"},{"size":16014,"mtime":1676652689320,"results":"86","hashOfConfig":"63"},{"size":2581,"mtime":1662523171668,"results":"87","hashOfConfig":"63"},{"size":495,"mtime":1675350796891,"results":"88","hashOfConfig":"63"},{"size":439,"mtime":1682269091423,"results":"89","hashOfConfig":"63"},{"size":7262,"mtime":1676307230797,"results":"90","hashOfConfig":"63"},{"size":7384,"mtime":1675618414731,"results":"91","hashOfConfig":"63"},{"size":5194,"mtime":1676995828447,"results":"92","hashOfConfig":"63"},{"size":3224,"mtime":1676647066379,"results":"93","hashOfConfig":"63"},{"size":4094,"mtime":1676824432248,"results":"94","hashOfConfig":"63"},{"size":6503,"mtime":1681840360753,"results":"95","hashOfConfig":"63"},{"size":5275,"mtime":1676997535044,"results":"96","hashOfConfig":"63"},{"size":15874,"mtime":1675867281174,"results":"97","hashOfConfig":"63"},{"size":2600,"mtime":1675051138368,"results":"98","hashOfConfig":"63"},{"size":1450,"mtime":1675618048971,"results":"99","hashOfConfig":"63"},{"size":1442,"mtime":1675051138370,"results":"100","hashOfConfig":"63"},{"size":1092,"mtime":1681840198240,"results":"101","hashOfConfig":"63"},{"size":15047,"mtime":1676732025447,"results":"102","hashOfConfig":"63"},{"size":1305,"mtime":1676207418749,"results":"103","hashOfConfig":"63"},{"size":439,"mtime":1676565527962,"results":"104","hashOfConfig":"63"},{"size":292,"mtime":1676913945690,"results":"105","hashOfConfig":"63"},{"size":5894,"mtime":1677427451030,"results":"106","hashOfConfig":"63"},{"size":15141,"mtime":1677434948106,"results":"107","hashOfConfig":"63"},{"size":15652,"mtime":1677691823408,"results":"108","hashOfConfig":"63"},{"size":10111,"mtime":1676568166565,"results":"109","hashOfConfig":"63"},{"size":3263,"mtime":1682188919548,"results":"110","hashOfConfig":"63"},{"size":3720,"mtime":1676819220663,"results":"111","hashOfConfig":"63"},{"size":464,"mtime":1675609799319,"results":"112","hashOfConfig":"63"},{"size":1507,"mtime":1676222363072,"results":"113","hashOfConfig":"63"},{"size":543,"mtime":1675610247675,"results":"114","hashOfConfig":"63"},{"size":3525,"mtime":1681838988855,"results":"115","hashOfConfig":"63"},{"size":8928,"mtime":1675048204544,"results":"116","hashOfConfig":"63"},{"size":1334,"mtime":1675439852952,"results":"117","hashOfConfig":"63"},{"size":1184,"mtime":1676212042952,"results":"118","hashOfConfig":"63"},{"size":368,"mtime":1669282370572,"results":"119","hashOfConfig":"63"},{"size":2459,"mtime":1670490531900,"results":"120","hashOfConfig":"63"},{"size":2084,"mtime":1662523171659,"results":"121","hashOfConfig":"63"},{"size":3551,"mtime":1663647612079,"results":"122","hashOfConfig":"63"},{"size":3454,"mtime":1682269057223,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"1fs13sb",{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"126"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"126"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"126"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"126"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"126"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"126"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"126"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"126"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"126"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"126"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"126"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"126"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"126"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"126"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"126"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"126"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"126"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"126"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"126"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"126"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"126"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"126"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"126"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"126"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"126"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"126"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\do_an_frontend\\app\\src\\index.js",[],["276","277"],"F:\\do_an_frontend\\app\\src\\App.js",[],"F:\\do_an_frontend\\app\\src\\layout\\Layout.js",["278","279"],"F:\\do_an_frontend\\app\\src\\redux\\Store.js",[],"F:\\do_an_frontend\\app\\src\\components\\books\\BooksPage.js",["280","281","282","283","284","285","286","287","288"],"import React, { useEffect, useState } from 'react';\r\nimport './BooksPage.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faFilter, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataTable from \"../../share/ecm-base/components/data-table/DataTable\";\r\nimport BooksAction from \"../../redux/action/BooksAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useSearchParams, Link } from 'react-router-dom';\r\nimport GroupsAction from \"../../redux/action/GroupsAction\";\r\nimport DropDown from '../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport Modal from '../../share/ecm-base/components/modal/Modal';\r\nimport Button from '../../share/ecm-base/components/button/Button';\r\nimport CreateBooks from './components/create_books/CreateBooks';\r\nimport { ListButton } from '../../common/utils';\r\nimport ConstAPI from '../../common/const';\r\nimport Confirm from '../../share/ecm-base/components/confirm/Confirm';\r\n\r\nconst BooksPage = ({ prefixPath }) => {\r\n\r\n\r\n    const columnBooks = [\r\n        {\r\n            title: \"Mã sách\",\r\n            dataIndex: \"code\",\r\n            render: (text) => {\r\n                return <Link to={`${prefixPath}/manager/books/${text}`}>{text}</Link>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên sách\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tác giả\",\r\n            dataIndex: \"author\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Tiêu đề\",\r\n            dataIndex: \"title\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thể loại\",\r\n            dataIndex: \"group_code\",\r\n            render: (text, index) => {\r\n                return <span>{index?.groups?.group_name}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Số lượng\",\r\n            dataIndex: \"total_books\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"code\",\r\n            render: (code) => {\r\n                return (\r\n                    <ListButton\r\n                        onRemoveAction={() => handleDeleteBooks(code)}\r\n                        removeButtonName=\"btnDeleteBooks\"\r\n                    ></ListButton>\r\n                );\r\n            },\r\n            width: \"15%\"\r\n        }\r\n    ]\r\n\r\n    let listOrder = [\r\n        {\r\n            title: \"Tăng dần\",\r\n            value: 1\r\n        },\r\n        {\r\n            title: \"Giảm dần\",\r\n            value: -1\r\n        },\r\n    ]\r\n\r\n    let listOrderBy = [\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            value: \"created_time\"\r\n        },\r\n        {\r\n            title: \"Thời gian sửa\",\r\n            value: \"modified_time\"\r\n        },\r\n    ]\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listBooks = useSelector(state => state.booksReducer.listBooks)\r\n    const filter = useSelector(state => state.booksReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.booksReducer.pagination)\r\n\r\n    const listGroups = useSelector(state => state.groupsReducer.listGroups)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n    const dispatch = useDispatch();\r\n\r\n    const [isHiddenModalCreateBooks, setIsHiddenModalCreateBooks] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let urlParams = { ...initPagingFilter }\r\n        if (searchParams.get('name')) {\r\n            urlParams[\"name\"] = searchParams.get('name')\r\n        }\r\n        if (searchParams.get('code')) {\r\n            urlParams[\"code\"] = searchParams.get('code')\r\n        }\r\n        if (searchParams.get('author')) {\r\n            urlParams[\"author\"] = searchParams.get('author')\r\n        }\r\n        if (searchParams.get('group_code')) {\r\n            urlParams[\"group_code\"] = searchParams.get('group_code')\r\n        }\r\n        if (searchParams.get('page')) {\r\n            urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        }\r\n        if (searchParams.get('size')) {\r\n            urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        }\r\n        if (searchParams.get('order_by')) {\r\n            urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        }\r\n        if (searchParams.get('order')) {\r\n            urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        }\r\n\r\n        setSearchParams(urlParams)\r\n        BooksAction.updateBooksFilterAction(dispatch, urlParams)\r\n        BooksAction.updateBooksPagination(dispatch, {\r\n            ...pagination,\r\n            page: urlParams.page,\r\n            size: urlParams.size\r\n        })\r\n        BooksAction.getListBooksAction(dispatch, urlParams)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        GroupsAction.getListGroupsAction(dispatch)\r\n    }, [])\r\n\r\n    let listDefault = [\r\n        {\r\n            title: \"Tất cả thể loại\",\r\n            value: \"ALL\"\r\n        }\r\n    ]\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState(listDefault)\r\n\r\n\r\n    useEffect(() => {\r\n        let listGrgoupsDropDown = listGroups.map((item) => {\r\n            return {\r\n                title: item?.group_name,\r\n                value: item?.group_code\r\n            }\r\n        })\r\n        setListDefaultDropDown([...listDefault, ...listGrgoupsDropDown])\r\n    }, [listGroups])\r\n\r\n    const onCancel = () => {\r\n        setIsHiddenModalCreateBooks(!isHiddenModalCreateBooks)\r\n    }\r\n\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter }\r\n        if (field === \"group_code\" && value === \"ALL\") {\r\n            delete newSearchFilter.group_code\r\n        } else {\r\n            newSearchFilter = { ...filter, [field]: value }\r\n        }\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        BooksAction.updateBooksFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        BooksAction.getListBooksAction(dispatch, filter)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        console.log(newSize);\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        BooksAction.updateBooksFilterAction(dispatch, newSearchFilter)\r\n        BooksAction.updateBooksPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        BooksAction.getListBooksAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        BooksAction.updateBooksFilterAction(dispatch, newSearchFilter)\r\n        BooksAction.updateBooksPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        BooksAction.getListBooksAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleOpenModalCreate = () => {\r\n        setIsHiddenModalCreateBooks(true)\r\n    }\r\n\r\n    const onSubmitFormCreate = () => {\r\n        document.getElementById(\"do-an-form-create-books-button\").click();\r\n    }\r\n\r\n    const [isOpenConfirmDialog, setIsOpenConfirmDialog] = useState(false);\r\n    const [codeBooksDelete, setCodeBooksDelete] = useState(null);\r\n\r\n    const handleDeleteBooks = (code) => {\r\n        setCodeBooksDelete(code)\r\n        setIsOpenConfirmDialog(true)\r\n    }\r\n\r\n    const handleCancelConfirmDialog = () => {\r\n        setCodeBooksDelete(null)\r\n        setIsOpenConfirmDialog(false)\r\n    }\r\n\r\n    const handleDeleteConfirmDialog = () => {\r\n        BooksAction.removeBooks(dispatch, codeBooksDelete, filter)\r\n        handleCancelConfirmDialog()\r\n    }\r\n\r\n    return (\r\n        <div className=\"do-an__books\">\r\n            <div className=\"do-an__books__image-cover\">\r\n                {/* <img className=\"image-cover\" src={imageCover}></img> */}\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh mục sách</h3>\r\n            </div>\r\n            <div className=\"do-an__books__group-search\">\r\n                <div className=\"do-an__books__group-search__filter\">\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Tên sách:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <input className=\"do-an__books__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"name\", event.target.value)}\r\n                                value={filter?.name || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Mã sách:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <input className=\"do-an__books__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"code\", event.target.value)}\r\n                                value={filter?.code || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Tác giả:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <input className=\"do-an__books__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"author\", event.target.value)}\r\n                                value={filter?.author || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"do-an__books__group-search__filter\">\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Thể loại:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__books__group-search__item__input\"\r\n                                listItem={listDefaultDropDown}\r\n                                selected={filter?.group_code || \"ALL\"}\r\n                                name=\"group_code\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Sắp xếp theo:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__books__group-search__item__input\"\r\n                                listItem={listOrderBy}\r\n                                selected={filter?.order_by || \"created_time\"}\r\n                                name=\"order_by\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Thứ tự:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__books__group-search__item__input\"\r\n                                listItem={listOrder}\r\n                                selected={filter?.order || -1}\r\n                                name=\"order\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__books__group-search__button-search\">\r\n                    <button className=\"button-search\" onClick={handleSearch}>Tìm kiếm</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"do-an__books__group-table\">\r\n                <div className=\"do-an__books__group-table__title\">\r\n                    <button className=\"button-create-new\" onClick={handleOpenModalCreate}>Thêm mới</button>\r\n                </div>\r\n                <div className=\"do-an__books__group-table__table-data\">\r\n                    <DataTable headerData={columnBooks}\r\n                        tableData={listBooks}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        pagination={pagination}\r\n                        onPageChange={handleNumberPagehange}\r\n                    >\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Tạo mới sách\"\r\n                width=\"70%\"\r\n                onCancel={onCancel}\r\n                visible={isHiddenModalCreateBooks}\r\n                footer={\r\n                    <div className='do-an__modal__footer'>\r\n                        <Button\r\n                            type={\"normal-green\"}\r\n                            onClick={onSubmitFormCreate}\r\n                        >\r\n                            Tạo mới\r\n                        </Button>\r\n                        <Button\r\n                            type={\"normal-gray\"}\r\n                            onClick={onCancel}\r\n                        >\r\n                            Hủy bỏ\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            >\r\n                {isHiddenModalCreateBooks && <CreateBooks onCloseModal={onCancel}></CreateBooks>}\r\n            </Modal>\r\n\r\n            <Confirm\r\n                title=\"Xoá sách\"\r\n                width=\"45%\"\r\n                visible={isOpenConfirmDialog}\r\n                onCancel={handleCancelConfirmDialog}\r\n                onOk={handleDeleteConfirmDialog}\r\n            >\r\n                <p>Nếu xóa {codeBooksDelete} thì dữ liệu sách sẽ mất hết, xác nhận xóa?</p>\r\n            </Confirm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BooksPage;","F:\\do_an_frontend\\app\\src\\layout\\layout-project\\LayoutProject.js",["289","290"],"F:\\do_an_frontend\\app\\src\\components\\user\\UserPage.js",["291","292","293","294","295","296","297","298"],"import React, { useEffect, useState } from 'react';\r\nimport './UserPage.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faFilter, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataTable from \"../../share/ecm-base/components/data-table/DataTable\";\r\nimport UserAction from \"../../redux/action/UserAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useSearchParams, Link } from 'react-router-dom';\r\nimport DropDown from '../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport Modal from '../../share/ecm-base/components/modal/Modal';\r\nimport Button from '../../share/ecm-base/components/button/Button';\r\nimport { ListButton, ListButtonUser } from '../../common/utils';\r\nimport ConstAPI from '../../common/const';\r\nimport Confirm from '../../share/ecm-base/components/confirm/Confirm';\r\nimport CreateUser from './components/create_user/CreateUser';\r\n\r\nconst UserPage = ({ prefixPath }) => {\r\n\r\n\r\n    const columnUser = [\r\n        {\r\n            title: \"Mã bạn đọc\",\r\n            dataIndex: \"code\",\r\n            render: (text) => {\r\n                return <Link to={`${prefixPath}/manager/user/${text}`}>{text}</Link>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên bạn đọc\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ngày sinh\",\r\n            dataIndex: \"date_of_birth\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Giới tính\",\r\n            dataIndex: \"gender\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Khóa\",\r\n            dataIndex: \"course\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            dataIndex: \"created_time\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"code\",\r\n            render: (code) => {\r\n                return (\r\n                    <ListButtonUser\r\n                        editDisable = {true}\r\n                        onRemoveAction={() => handleDeleteUser(code)}\r\n                        removeButtonName=\"btnDeleteUser\"\r\n                    ></ListButtonUser>\r\n                );\r\n            },\r\n            width: \"15%\"\r\n        }\r\n    ]\r\n\r\n    let listOrder = [\r\n        {\r\n            title: \"Tăng dần\",\r\n            value: 1\r\n        },\r\n        {\r\n            title: \"Giảm dần\",\r\n            value: -1\r\n        },\r\n    ]\r\n\r\n    let listOrderBy = [\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            value: \"created_time\"\r\n        },\r\n        {\r\n            title: \"Thời gian sửa\",\r\n            value: \"modified_time\"\r\n        },\r\n        {\r\n            title: \"Tên\",\r\n            value: \"name\"\r\n        },\r\n    ]\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listUser = useSelector(state => state.userReducer.listUser)\r\n    const filter = useSelector(state => state.userReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.userReducer.pagination)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n    const dispatch = useDispatch();\r\n\r\n    const [isHiddenModalCreateUser, setIsHiddenModalCreateUser] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let urlParams = { ...initPagingFilter }\r\n        if (searchParams.get('name')) {\r\n            urlParams[\"name\"] = searchParams.get('name')\r\n        }\r\n        if (searchParams.get('code')) {\r\n            urlParams[\"code\"] = searchParams.get('code')\r\n        }\r\n        if (searchParams.get('page')) {\r\n            urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        }\r\n        if (searchParams.get('size')) {\r\n            urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        }\r\n        if (searchParams.get('order_by')) {\r\n            urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        }\r\n        if (searchParams.get('order')) {\r\n            urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        }\r\n\r\n        setSearchParams(urlParams)\r\n        UserAction.updateUserFilterAction(dispatch, urlParams)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            page: urlParams.page,\r\n            size: urlParams.size\r\n        })\r\n        UserAction.getListUserAction(dispatch, urlParams)\r\n    }, [])\r\n\r\n    const onCancel = () => {\r\n        setIsHiddenModalCreateUser(!isHiddenModalCreateUser)\r\n    }\r\n\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter ,[field]: value }\r\n        console.log(newSearchFilter);\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        UserAction.getListUserAction(dispatch, filter)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        console.log(newSize);\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        UserAction.getListUserAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        UserAction.getListUserAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleOpenModalCreate = () => {\r\n        setIsHiddenModalCreateUser(true)\r\n    }\r\n\r\n    const onSubmitFormCreate = () => {\r\n        document.getElementById(\"do-an-form-create-user-button\").click();\r\n    }\r\n\r\n    const [isOpenConfirmDialog, setIsOpenConfirmDialog] = useState(false);\r\n    const [codeUserDelete, setCodeUserDelete] = useState(null);\r\n\r\n    const handleDeleteUser = (code) => {\r\n        setCodeUserDelete(code)\r\n        setIsOpenConfirmDialog(true)\r\n    }\r\n\r\n    const handleCancelConfirmDialog = () => {\r\n        setCodeUserDelete(null)\r\n        setIsOpenConfirmDialog(false)\r\n    }\r\n\r\n    const handleDeleteConfirmDialog = () => {\r\n        UserAction.removeUser(dispatch, codeUserDelete, filter)\r\n        handleCancelConfirmDialog()\r\n    }\r\n\r\n    return (\r\n        <div className=\"do-an__user\">\r\n            <div className=\"do-an__user__image-cover\">\r\n                {/* <img className=\"image-cover\" src={imageCover}></img> */}\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh sách bạn đọc</h3>\r\n            </div>\r\n            <div className=\"do-an__user__group-search\">\r\n                <div className=\"do-an__user__group-search__filter\">\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Tên bạn đọc:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <input className=\"do-an__user__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"name\", event.target.value)}\r\n                                value={filter?.name || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Mã bạn đọc:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <input className=\"do-an__user__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"code\", event.target.value)}\r\n                                value={filter?.code || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Sắp xếp theo:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__user__group-search__item__input\"\r\n                                listItem={listOrderBy}\r\n                                selected={filter?.order_by || \"created_time\"}\r\n                                name=\"order_by\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Thứ tự:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__user__group-search__item__input\"\r\n                                listItem={listOrder}\r\n                                selected={filter?.order || -1}\r\n                                name=\"order\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__user__group-search__button-search\">\r\n                    <button className=\"button-search\" onClick={handleSearch}>Tìm kiếm</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"do-an__user__group-table\">\r\n                <div className=\"do-an__user__group-table__title\">\r\n                    <button className=\"button-create-new\" onClick={handleOpenModalCreate}>Thêm mới</button>\r\n                </div>\r\n                <div className=\"do-an__user__group-table__table-data\">\r\n                    <DataTable headerData={columnUser}\r\n                        tableData={listUser}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        pagination={pagination}\r\n                        onPageChange={handleNumberPagehange}\r\n                    >\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Tạo mới bạn đọc\"\r\n                width=\"70%\"\r\n                onCancel={onCancel}\r\n                visible={isHiddenModalCreateUser}\r\n                footer={\r\n                    <div className='do-an__modal__footer'>\r\n                        <Button\r\n                            type={\"normal-green\"}\r\n                            onClick={onSubmitFormCreate}\r\n                        >\r\n                            Tạo mới\r\n                        </Button>\r\n                        <Button\r\n                            type={\"normal-gray\"}\r\n                            onClick={onCancel}\r\n                        >\r\n                            Hủy bỏ\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            >\r\n                {isHiddenModalCreateUser && <CreateUser onCloseModal={onCancel}></CreateUser>}\r\n            </Modal>\r\n\r\n            <Confirm\r\n                title=\"Xoá bạn đọc\"\r\n                width=\"45%\"\r\n                visible={isOpenConfirmDialog}\r\n                onCancel={handleCancelConfirmDialog}\r\n                onOk={handleDeleteConfirmDialog}\r\n            >\r\n                <p>Nếu xóa {codeUserDelete} thì dữ liệu thông tin và mượn sách của bạn đọc sẽ mất hết, xác nhận xóa?</p>\r\n            </Confirm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPage;","F:\\do_an_frontend\\app\\src\\components\\login\\Login.js",["299","300","301"],"import React, { useState } from \"react\";\r\nimport image from '../../share/image/DRBS.jpg';\r\nimport \"./Login.scss\";\r\nimport { Input, Button } from 'antd';\r\nimport LoginService from '../../redux/service/LoginService';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { startLoading, stopLoading } from \"../../common/const\";\r\n\r\nconst Login = ({prefixPath, showToast}) => {\r\n\r\n  const { register, formState: { errors }, handleSubmit } = useForm();\r\n  const navigate = useNavigate();\r\n  const [formLogin, setFormLogin] = useState({})\r\n\r\n  const handleChangeInput = (name, value) => {\r\n    setFormLogin({\r\n      ...formLogin,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const handleSubmitLogin = () => {\r\n    startLoading();\r\n    LoginService.login(formLogin).then(response => {\r\n      console.log(response);\r\n      if (response.data.status === 200){\r\n        window.localStorage.setItem(\"token\", response.data.data.token)\r\n        showToast(\"success\", \"Thông báo\", \"Đăng nhập thành công!\");\r\n        navigate(`${prefixPath}/manager`);\r\n        stopLoading();\r\n      } else if(response.data.status === 400) {\r\n        stopLoading();\r\n        showToast(\"error\", \"Thông báo\", \"Mật khẩu không chính xác, vui lòng thử lại!\");\r\n      }\r\n      else{\r\n        stopLoading();\r\n        showToast(\"error\", \"Thông báo\", \"Tài khoản không tồn tại, vui lòng thử lại!\");\r\n      }\r\n    })\r\n  }\r\n\r\n  console.log(formLogin);\r\n\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(handleSubmitLogin)}>\r\n      <div className='do-an-login__container' id=\"do-an-login\" style={{ backgroundImage: `url(${image})` }}>\r\n        <div className=\"do-an-login__container__form-login\">\r\n          <div className=\"do-an-login__container__form-login__title\">\r\n            <span className=\"do-an-title\">ĐĂNG NHẬP</span>\r\n          </div>\r\n          <div className=\"do-an-login__container__form-login__group-input\">\r\n            {/* <Input className=\"do-an-input\" placeholder=\"Tài khoản\" />\r\n              <Input className=\"do-an-input\" placeholder=\"Mật khẩu\" type=\"password\" /> */}\r\n\r\n            <input className={`form-control do-an-input ${errors.name ? 'is-invalid' : ''}`} placeholder=\"Tài khoản\"\r\n              {...register(\"username\",\r\n                {\r\n                  required: true,\r\n                  maxLength: 100,\r\n                  validate: value => value.trim().length > 0,\r\n                  onChange: (e) => handleChangeInput(\"username\", e.target.value),\r\n                }\r\n              )} />\r\n            {errors.username?.type === 'required' &&\r\n              <div className=\"input-value-error\">Tên Username không được để trống!</div>}\r\n\r\n            <input className={`form-control do-an-input ${errors.name ? 'is-invalid' : ''}`} placeholder=\"Mật khẩu\"\r\n              {...register(\"password\",\r\n                {\r\n                  required: true,\r\n                  maxLength: 100,\r\n                  validate: value => value.trim().length > 0,\r\n                  onChange: (e) => handleChangeInput(\"password\",e.target.value),\r\n                }\r\n              )} />\r\n            {errors.username?.type === 'required' &&\r\n              <div className=\"input-value-error\">Mật khẩu không được để trống!</div>}\r\n          </div>\r\n          <div className=\"do-an-login__container__form-login__button-login\">\r\n            <button className=\"do-an-button\" type=\"submit\">Đăng nhập</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\do_an_frontend\\app\\src\\components\\manager\\ManagerPage.js",["302","303","304","305","306","307","308","309","310"],"import React, { useEffect, useState } from 'react';\r\nimport './ManagerPage.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faFilter, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataTable from \"../../share/ecm-base/components/data-table/DataTable\";\r\nimport ManagerAction from \"../../redux/action/ManagerAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useSearchParams, Link } from 'react-router-dom';\r\nimport DropDown from '../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport Modal from '../../share/ecm-base/components/modal/Modal';\r\nimport Button from '../../share/ecm-base/components/button/Button';\r\nimport { ListButton, ListButtonUser } from '../../common/utils';\r\nimport ConstAPI from '../../common/const';\r\nimport Confirm from '../../share/ecm-base/components/confirm/Confirm';\r\nimport CreateManager from './create-manager/CreateManager';\r\nimport DetailManager from './get-detail-manager/DetailManager';\r\n\r\nconst ManagerPage = ({ prefixPath }) => {\r\n\r\n\r\n    const columnManager = [\r\n        {\r\n            title: \"Mã quản lý\",\r\n            dataIndex: \"code\",\r\n            render: (text, index) => {\r\n                return <span style={{textDecoration:\"underline\", color:\"#141ed2\", cursor:\"pointer\"}} onClick={() => handleOpenModalDetail(text)}>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên quản lý\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ngày sinh\",\r\n            dataIndex: \"date_of_birth\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Giới tính\",\r\n            dataIndex: \"gender\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Khóa\",\r\n            dataIndex: \"course\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            dataIndex: \"created_time\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"code\",\r\n            render: (code) => {\r\n                return (\r\n                    <ListButtonUser\r\n                        editDisable = {true}\r\n                        onRemoveAction={() => handleDeleteManager(code)}\r\n                        removeButtonName=\"btnDeleteManager\"\r\n                    ></ListButtonUser>\r\n                );\r\n            },\r\n            width: \"15%\"\r\n        }\r\n    ]\r\n\r\n    let listOrder = [\r\n        {\r\n            title: \"Tăng dần\",\r\n            value: 1\r\n        },\r\n        {\r\n            title: \"Giảm dần\",\r\n            value: -1\r\n        },\r\n    ]\r\n\r\n    let listOrderBy = [\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            value: \"created_time\"\r\n        },\r\n        {\r\n            title: \"Thời gian sửa\",\r\n            value: \"modified_time\"\r\n        },\r\n        {\r\n            title: \"Tên\",\r\n            value: \"name\"\r\n        },\r\n    ]\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listManager = useSelector(state => state.managerReducer.listManager)\r\n    const filter = useSelector(state => state.managerReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.managerReducer.pagination)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n    const dispatch = useDispatch();\r\n\r\n    const [isHiddenModalCreateManager, setIsHiddenModalCreateManager] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let urlParams = { ...initPagingFilter }\r\n        if (searchParams.get('name')) {\r\n            urlParams[\"name\"] = searchParams.get('name')\r\n        }\r\n        if (searchParams.get('code')) {\r\n            urlParams[\"code\"] = searchParams.get('code')\r\n        }\r\n        if (searchParams.get('page')) {\r\n            urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        }\r\n        if (searchParams.get('size')) {\r\n            urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        }\r\n        if (searchParams.get('order_by')) {\r\n            urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        }\r\n        if (searchParams.get('order')) {\r\n            urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        }\r\n\r\n        setSearchParams(urlParams)\r\n        ManagerAction.updateManagerFilterAction(dispatch, urlParams)\r\n        ManagerAction.updateManagerPagination(dispatch, {\r\n            ...pagination,\r\n            page: urlParams.page,\r\n            size: urlParams.size\r\n        })\r\n        ManagerAction.getListManagerAction(dispatch, urlParams)\r\n    }, [])\r\n\r\n    const onCancel = () => {\r\n        setIsHiddenModalCreateManager(!isHiddenModalCreateManager)\r\n    }\r\n\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter ,[field]: value }\r\n        console.log(newSearchFilter);\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        ManagerAction.updateManagerFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        ManagerAction.getListManagerAction(dispatch, filter)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        console.log(newSize);\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        ManagerAction.updateManagerFilterAction(dispatch, newSearchFilter)\r\n        ManagerAction.updateManagerPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        ManagerAction.getListManagerAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        ManagerAction.updateManagerFilterAction(dispatch, newSearchFilter)\r\n        ManagerAction.updateManagerPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        ManagerAction.getListManagerAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleOpenModalCreate = () => {\r\n        setIsHiddenModalCreateManager(true)\r\n    }\r\n\r\n    const onSubmitFormCreate = () => {\r\n        document.getElementById(\"do-an-form-create-manager-button\").click();\r\n    }\r\n\r\n    const [isOpenConfirmDialog, setIsOpenConfirmDialog] = useState(false);\r\n    const [codeManagerDelete, setCodeManagerDelete] = useState(null);\r\n    const [detailManager, setDetailManager] = useState(null)\r\n    const [openModalDetail, setOpenModalDetail] = useState(false)\r\n\r\n    const handleDeleteManager = (code) => {\r\n        setCodeManagerDelete(code)\r\n        setIsOpenConfirmDialog(true)\r\n    }\r\n\r\n    const handleCancelConfirmDialog = () => {\r\n        setCodeManagerDelete(null)\r\n        setIsOpenConfirmDialog(false)\r\n    }\r\n\r\n    const handleDeleteConfirmDialog = () => {\r\n        ManagerAction.removeManager(dispatch, codeManagerDelete, filter)\r\n        handleCancelConfirmDialog()\r\n    }\r\n\r\n    const handleOpenModalDetail = (item) => {\r\n        setDetailManager(item);\r\n        setOpenModalDetail(true)\r\n    }\r\n\r\n    const onCancelDetail = () => {\r\n        setOpenModalDetail(false)\r\n        setDetailManager(null)\r\n    }\r\n\r\n    return (\r\n        <div className=\"do-an__manager\">\r\n            <div className=\"do-an__manager__image-cover\">\r\n                {/* <img className=\"image-cover\" src={imageCover}></img> */}\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh sách người quản lý</h3>\r\n            </div>\r\n            <div className=\"do-an__manager__group-search\">\r\n                <div className=\"do-an__manager__group-search__filter\">\r\n                    <div className=\"do-an__manager__group-search__item\">\r\n                        <div className=\"do-an__manager__group-search__item__title\">\r\n                            Tên quản lý:\r\n                        </div>\r\n                        <div className=\"do-an__manager__group-search__item__input-container\">\r\n                            <input className=\"do-an__manager__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"name\", event.target.value)}\r\n                                value={filter?.name || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__manager__group-search__item\">\r\n                        <div className=\"do-an__manager__group-search__item__title\">\r\n                            Mã quản lý:\r\n                        </div>\r\n                        <div className=\"do-an__manager__group-search__item__input-container\">\r\n                            <input className=\"do-an__manager__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"code\", event.target.value)}\r\n                                value={filter?.code || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__manager__group-search__item\">\r\n                        <div className=\"do-an__manager__group-search__item__title\">\r\n                            Sắp xếp theo:\r\n                        </div>\r\n                        <div className=\"do-an__manager__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__manager__group-search__item__input\"\r\n                                listItem={listOrderBy}\r\n                                selected={filter?.order_by || \"created_time\"}\r\n                                name=\"order_by\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__manager__group-search__item\">\r\n                        <div className=\"do-an__manager__group-search__item__title\">\r\n                            Thứ tự:\r\n                        </div>\r\n                        <div className=\"do-an__manager__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__manager__group-search__item__input\"\r\n                                listItem={listOrder}\r\n                                selected={filter?.order || -1}\r\n                                name=\"order\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__manager__group-search__button-search\">\r\n                    <button className=\"button-search\" onClick={handleSearch}>Tìm kiếm</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"do-an__manager__group-table\">\r\n                <div className=\"do-an__manager__group-table__title\">\r\n                    <button className=\"button-create-new\" onClick={handleOpenModalCreate}>Thêm mới</button>\r\n                </div>\r\n                <div className=\"do-an__manager__group-table__table-data\">\r\n                    <DataTable headerData={columnManager}\r\n                        tableData={listManager}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        pagination={pagination}\r\n                        onPageChange={handleNumberPagehange}\r\n                    >\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Tạo mới quản lý\"\r\n                width=\"70%\"\r\n                onCancel={onCancel}\r\n                visible={isHiddenModalCreateManager}\r\n                footer={\r\n                    <div className='do-an__modal__footer'>\r\n                        <Button\r\n                            type={\"normal-green\"}\r\n                            onClick={onSubmitFormCreate}\r\n                        >\r\n                            Tạo mới\r\n                        </Button>\r\n                        <Button\r\n                            type={\"normal-gray\"}\r\n                            onClick={onCancel}\r\n                        >\r\n                            Hủy bỏ\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            >\r\n                {isHiddenModalCreateManager && <CreateManager onCloseModal={onCancel}></CreateManager>}\r\n            </Modal>\r\n\r\n            <Modal\r\n                title=\"Chi tiết quản lý\"\r\n                width=\"70%\"\r\n                onCancel={onCancelDetail}\r\n                visible={openModalDetail}\r\n                footer={null}\r\n            >\r\n                {openModalDetail && <DetailManager detailManager={detailManager}></DetailManager>}\r\n            </Modal>\r\n\r\n            <Confirm\r\n                title=\"Xoá quản lý\"\r\n                width=\"45%\"\r\n                visible={isOpenConfirmDialog}\r\n                onCancel={handleCancelConfirmDialog}\r\n                onOk={handleDeleteConfirmDialog}\r\n            >\r\n                <p>Nếu xóa {codeManagerDelete} thì dữ liệu thông tin của quản lý sẽ mất hết, xác nhận xóa?</p>\r\n            </Confirm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerPage;","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\create_voucher\\CreateVoucher.js",["311","312","313","314","315","316"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faBook, faPencil } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"./CreateVoucher.scss\";\r\nimport Button from \"../../../../share/ecm-base/components/button/Button\";\r\nimport DataTable from \"../../../../share/ecm-base/components/data-table/DataTable\";\r\nimport { ListButton, ListButtonUser } from \"../../../../common/utils\";\r\nimport Modal from \"../../../../share/ecm-base/components/modal/Modal\";\r\nimport UserPageVoucher from \"../user_voucher/UserPageVoucher\";\r\nimport UserAction from \"../../../../redux/action/UserAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport BookAction from \"../../../../redux/action/BookAction\";\r\nimport ConstAPI from \"../../../../common/const\";\r\nimport VoucherAction from \"../../../../redux/action/VoucherAction\";\r\nimport { DatePicker } from 'antd';\r\n\r\n\r\nconst CreateVoucher = ({ prefixPath }) => {\r\n\r\n    const columnVoucher = [\r\n        {\r\n            title: \"Mã sách\",\r\n            dataIndex: \"code_id\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên sách\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tác giả\",\r\n            dataIndex: \"author\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tiêu đề\",\r\n            dataIndex: \"title\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"code_id\",\r\n            render: (code_id) => {\r\n                return (\r\n                    <ListButtonUser\r\n                        editDisable={true}\r\n                    ></ListButtonUser>\r\n                );\r\n            },\r\n            width: \"5%\"\r\n        }\r\n    ]\r\n\r\n    const {setValue, register, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n\r\n    const [listBookCreate, setListBookCreate] = useState([])\r\n    const [listBookTable, setListBookTable] = useState([])\r\n    const [openModalUser, setOpenModaluser] = useState(false)\r\n    const [valueInput, setValueInput] = useState(\"\")\r\n    const [dataUser, setDataUser] = useState({})\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n   \r\n\r\n    // const detailUser = useSelector(state => state.userReducer.detailUser)\r\n\r\n    var currentdate = new Date();\r\n    var datetime = currentdate.getFullYear() + \"-\"\r\n        + (currentdate.getMonth() + 1 > 9 ? currentdate.getMonth() + 1 : (\"0\" + (currentdate.getMonth() + 1))) + \"-\"\r\n        + (currentdate.getDate() < 10 ? (\"0\" + currentdate.getDate()) : currentdate.getDate()) + \"-\"\r\n        + (currentdate.getHours() < 10 ? (\"0\" + currentdate.getHours()) : currentdate.getHours()) + \":\"\r\n        + (currentdate.getMinutes() < 10 ? (\"0\" + currentdate.getMinutes()) : currentdate.getMinutes()) + \":\"\r\n        + (currentdate.getSeconds() < 10 ? (\"0\" + currentdate.getSeconds()) : currentdate.getSeconds());\r\n\r\n    const [formCreate, setFormCreate] = useState({due_date: \"\"})\r\n\r\n    useEffect(() => {\r\n        console.log(\"thay doi\");\r\n        setValue(\"check_due_date\" , formCreate?.due_date)\r\n    }, [formCreate?.due_date])\r\n\r\n    console.log(formCreate);\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const handleOpenModalUser = () => {\r\n        setOpenModaluser(true)\r\n    }\r\n\r\n    const handleCloseModalUser = () => {\r\n        setOpenModaluser(false)\r\n    }\r\n\r\n    const handleSelectUser = (user_id) => {\r\n        UserAction.getDetailUserAction(dispatch, user_id).then(response => {\r\n            console.log(response);\r\n            setDataUser(response)\r\n            setFormCreate({\r\n                ...formCreate,\r\n                \"user_id\": response.code\r\n            })\r\n        })\r\n        setOpenModaluser(false)\r\n    }\r\n\r\n    const handleChangeInput = (value) => {\r\n        setValueInput(value)\r\n    }\r\n\r\n    const handleChangeInputForm = (field, value) => {\r\n        let newFormData = {}\r\n        if (field === \"due_date\") {\r\n            newFormData = { ...formCreate, [field]: value.format(\"YYYY-MM-DD-HH:mm:ss\") }\r\n        } else {\r\n            newFormData = { ...formCreate, [field]: value }\r\n        }\r\n        setFormCreate(newFormData)\r\n    }\r\n\r\n    const handleAddBook = () => {\r\n        if (valueInput.trim() !== \"\") {\r\n            BookAction.getDetailBookAction(dispatch, valueInput).then(response => {\r\n                if (response.status === 200) {\r\n                    setListBookTable([\r\n                        ...listBookTable,\r\n                        {\r\n                            \"code_id\": valueInput,\r\n                            \"name\": response.data.data.books.name,\r\n                            \"avatar\": response.data.data.books.avatar,\r\n                            \"author\": response.data.data.books.author\r\n                            // \"title\": response.data.data.books.title\r\n                        }\r\n                    ])\r\n\r\n                }\r\n            })\r\n            // setListBookCreate([\r\n            //     ...listBookCreate,\r\n            //     valueInput\r\n            // ])\r\n            \r\n            setValueInput(\"\")\r\n        }\r\n    }\r\n\r\n    const managerToken = useSelector(state => state.loginReducer.dataToken)\r\n\r\n    const handleSubmitFormCreate = () => {\r\n        const formCreateVoucher = {\r\n            ...formCreate,\r\n            books_borrowed: listBookTable\r\n        }\r\n\r\n        VoucherAction.createVoucherAction(formCreateVoucher, dispatch, initPagingFilter)\r\n        navigate(`${prefixPath}/manager/voucher/list`)\r\n    }\r\n\r\n    console.log(errors);\r\n\r\n\r\n    return (\r\n        <form className=\"do-an__create-voucher__form\" onSubmit={handleSubmit(handleSubmitFormCreate)}>\r\n            <div className='do-an__create-voucher-container'>\r\n                <div className='do-an__create-voucher-container__header'>\r\n                    <div className='do-an__create-voucher-container__header__text'>\r\n                        <button\r\n                            className=\"do-an__create-voucher-container__header__button\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => navigate(-1)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faArrowLeft} style={{ height: \"22px\", marginTop: \"5px\", marginLeft: \"5px\" }} />\r\n                        </button>\r\n                        <div className='do-an__create-voucher-container__header__title'>Lập phiếu mượn</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__create-voucher-container__body\">\r\n                    <div className=\"do-an__create-voucher-container__body__user-info\">\r\n                        <div className=\"do-an__create-voucher-container__body__user-info__group-info\">\r\n                            <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-first\">\r\n                                <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-input-name\">\r\n                                    <div>\r\n                                        Tên bạn đọc<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <input\r\n                                            value={dataUser?.name}\r\n                                            readOnly={true}\r\n                                            className={`do-an__input do-an-input-name-create-voucher ${errors.name ? 'is-invalid' : ''}`}\r\n                                        />\r\n                                        <button\r\n                                            className=\"do-an__create-voucher-container__body__button\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                            onClick={handleOpenModalUser}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faPencil} style={{ color: \"#141ed2\", cursor: \"pointer\" }}></FontAwesomeIcon>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-input-code\">\r\n                                    <div>\r\n                                        Mã bạn đọc<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            value={dataUser?.code}\r\n                                            readOnly={true}\r\n                                            className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                            {...register(\"user_id\",\r\n                                                {\r\n                                                    // required: true,\r\n                                                    // onChange: (e) => handleChangeInputForm(\"user_id\", e.target.value)\r\n                                                }\r\n                                            )}\r\n                                        />\r\n                                        {/* {errors.name?.type === \"required\" &&\r\n                                            <div className=\"input-value-error\">Mã bạn đọc không được trống!</div>} */}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-input-course\">\r\n                                    <div>\r\n                                        Khóa<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            value={dataUser?.course}\r\n                                            readOnly={true}\r\n                                            className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-second\">\r\n                                <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-input-start-date\">\r\n                                    <div>\r\n                                        Thời gian tạo<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                            disabled={true}\r\n                                            value={datetime}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-input-due-date\">\r\n                                    <div>\r\n                                        Thời gian hẹn trả<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n\r\n                                        <DatePicker showTime onChange={(e) => handleChangeInputForm(\"due_date\", e)}\r\n                                            placeholder=\"Ngày hẹn trả\"\r\n                                        />\r\n\r\n                                        <input\r\n                                            hidden={true}\r\n                                            {...register(\"check_due_date\",\r\n                                                {\r\n                                                   required: true\r\n                                                }\r\n                                            )}\r\n                                        />\r\n                                        {errors.check_due_date?.type === \"required\" &&\r\n                                            <div className=\"input-value-error\">Ngày hạn trả không được trống!</div>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-input-description\">\r\n                                    <div>\r\n                                        Ghi chú<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            className={`do-an__input do-an-input-description-create-voucher ${errors.name ? 'is-invalid' : ''}`}\r\n                                            {...register(\"description\",\r\n                                                {\r\n                                                    required: true,\r\n                                                    onChange: (e) => handleChangeInputForm(\"description\", e.target.value)\r\n                                                }\r\n                                            )}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__create-voucher-container__body__user-info__history-voucher\">\r\n                            <div className=\"do-an__create-voucher-container__body__user-info__history-voucher__icon\">\r\n                                <FontAwesomeIcon icon={faBook} style={{ height: \"50px\", color: \"#00089b\" }} />\r\n                            </div>\r\n                            <div className=\"do-an__create-voucher-container__body__user-info__history-voucher__infor\">\r\n                                <span>Tổng số phiếu mượn</span>\r\n                                <span>Quá hạn</span>\r\n                                <span>Đã trả</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__create-voucher-container__body__table-borrow\">\r\n                        <div className=\"do-an__create-voucher-container__body__table-borrow__header\">\r\n                            <div className=\"do-an__create-voucher-container__body__table-borrow__header__title\">\r\n                                Mã sách:\r\n                            </div>\r\n                            <div className=\"do-an__create-voucher-container__body__table-borrow__header__input\">\r\n                                <input\r\n                                    value={valueInput}\r\n                                    className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                    onChange={(event) => handleChangeInput(event.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"do-an__create-voucher-container__body__table-borrow__header__button\">\r\n                                <Button\r\n                                    type={\"normal-green\"}\r\n                                    onClick={handleAddBook}\r\n                                >\r\n                                    Thêm\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__create-voucher-container__body__table-borrow__table\">\r\n                            <DataTable\r\n                                headerData={columnVoucher}\r\n                                tableData={listBookTable}\r\n                            >\r\n\r\n                            </DataTable>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__create-voucher-container__footer\">\r\n                    {/* <Button\r\n                        type={\"normal-blue\"}\r\n                    >\r\n                        Xác nhận\r\n                    </Button> */}\r\n                    <button className=\"button-search\" type=\"submit\">\r\n                        Xác nhận\r\n                    </button>\r\n                </div>\r\n\r\n                {openModalUser &&\r\n                    <Modal\r\n                        title=\"Chọn bạn đọc\"\r\n                        width=\"70%\"\r\n                        onCancel={handleCloseModalUser}\r\n                        visible={openModalUser}\r\n                    >\r\n                        <UserPageVoucher handleSelectUser={handleSelectUser}></UserPageVoucher>\r\n                    </Modal>\r\n                }\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default CreateVoucher;","F:\\do_an_frontend\\app\\src\\components\\manager\\manager_info\\ManagerInfoPage .js",["317","318","319","320","321","322"],"import React, { useEffect, useState } from \"react\";\r\nimport './ManagerInfoPage.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleUser, faInfoCircle, faKey, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ManagerAction from \"../../../redux/action/ManagerAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport DropDown from \"../../../share/ecm-base/components/dropdown-v2/DropDown\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport ConstAPI from \"../../../common/const\";\r\n\r\nconst ManagerInfoPage = ({ prefixPath }) => {\r\n\r\n    const [isActive, setIsActive] = useState(\"update\")\r\n    const listAction = [\r\n        {\r\n            title: \"Chỉnh sửa thông tin\",\r\n            type: \"update\",\r\n            icon: faInfoCircle\r\n        },\r\n        {\r\n            title: \"Thay đổi mật khẩu\",\r\n            type: \"change\",\r\n            icon: faKey\r\n\r\n        }\r\n    ]\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState([\r\n        {\r\n            title: \"Nam\",\r\n            value: \"MALE\"\r\n        },\r\n        {\r\n            title: \"Nữ\",\r\n            value: \"FEMALE\"\r\n        }\r\n    ])\r\n\r\n    const handleChangeType = (type) => {\r\n        setIsActive(type)\r\n    }\r\n\r\n    const {code} = useParams()\r\n\r\n    const detailManager = useSelector(state => state.managerReducer.detailManager)\r\n    const { register, setValue, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n\r\n    const [formUpdate, setFormUpdate] = useState({})\r\n    const ditpatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    useEffect(() => {\r\n        ManagerAction.getDetailManagerAction(ditpatch, code)\r\n    }, [code])\r\n\r\n    useEffect(() => {\r\n        setValue(\"name\", detailManager?.name)\r\n        setValue(\"date_of_birth\", detailManager?.date_of_birth)\r\n        setValue(\"course\", detailManager?.course)\r\n        setValue(\"university\", detailManager?.university)\r\n        setValue(\"phone\", detailManager?.phone)\r\n        setValue(\"email\", detailManager?.email)\r\n\r\n        setFormUpdate({\r\n            \"name\": detailManager?.name,\r\n            \"date_of_birth\": detailManager?.date_of_birth,\r\n            \"gender\": detailManager?.gender,\r\n            \"course\": detailManager?.course,\r\n            \"university\": detailManager?.university,\r\n            \"phone\": detailManager?.phone,\r\n            \"email\": detailManager?.email\r\n        })\r\n    }, [detailManager])\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        const newFormData = { ...formUpdate, [field]: value };\r\n        setFormUpdate(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        ManagerAction.updateManagerAction(ditpatch, code, formUpdate)\r\n    }\r\n\r\n    const [formChangePass, setFormChangePass] = useState({\r\n        oldpass: \"\",\r\n        newpass: \"\"\r\n    })\r\n\r\n    const handleChangePassInput = (name, value) => {\r\n        setFormChangePass({\r\n            ...formChangePass,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const handleChangePassword = () => {\r\n        ManagerAction.changePasswordManagerAction(formChangePass)\r\n        setFormChangePass({\r\n            oldpass: \"\",\r\n        newpass: \"\"\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"do-an__info-manager-container\">\r\n            <div className=\"do-an__info-manager-container__info\">\r\n                <div className=\"do-an__info-manager-container__info__button-back\">\r\n                    <FontAwesomeIcon icon={faArrowLeft} style={{ height: \"22px\", marginTop: \"5px\", marginLeft: \"5px\", cursor: \"pointer\" }} onClick={() => navigate(-1)} />\r\n\r\n                </div>\r\n                <div className=\"do-an__info-manager-container__info__avatar\">\r\n                    {/* <FontAwesomeIcon style={{ height: \"150px\", marginBottom: \"10px\", cursor: \"pointer\" }} icon={faCircleUser}></FontAwesomeIcon> */}\r\n                    <img style={{ height: \"180px\", width: \"180px\", borderRadius: \"50%\" }} src={`${ConstAPI.BASE_HOST_API}${detailManager?.avatar}`}></img>\r\n                </div>\r\n                <div className=\"do-an__info-manager-container__info__name\">\r\n                    kienlt\r\n                </div>\r\n                <div className=\"do-an__info-manager-container__info__list-action\">\r\n                    {\r\n                        listAction.map(item => (\r\n                            <div className={`do-an__info-manager-container__info__list-action__item ${isActive === item.type ? \"item-active\" : \"\"}`}\r\n                                onClick={() => handleChangeType(item.type)}\r\n                            >\r\n                                <FontAwesomeIcon style={{ height: \"20px\", marginRight: \"10px\" }} icon={item.icon}></FontAwesomeIcon>\r\n                                {item.title}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"do-an__info-manager-container__action\">\r\n                {isActive === \"update\" &&\r\n                    <form className=\"do-an__info-manager-container__action__update\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n                        <div className=\"do-an__info-manager-container__action__update__title\">\r\n                            Chỉnh sửa thông tin\r\n                        </div>\r\n                        <div className=\"do-an__info-manager-container__action__update__content\">\r\n                            <div className=\"do-an__info-manager-container__action__update__content__group-input\">\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__key\">\r\n                                    <span>Họ và tên: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name`}\r\n                                        {...register(\"name\",\r\n                                            {\r\n                                                required: true,\r\n                                                onChange: (e) => handleChangeInput(\"name\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"do-an__info-manager-container__action__update__content__group-input\">\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__key\">\r\n                                    <span>Ngày sinh: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name`}\r\n                                        {...register(\"date_of_birth\",\r\n                                            {\r\n                                                onChange: (e) => handleChangeInput(\"date_of_birth\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"do-an__info-manager-container__action__update__content__group-input\">\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__key\">\r\n                                    <span>Giới tính: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__input\">\r\n                                    <DropDown className=\"do-an-dropdown-create\"\r\n                                        listItem={listDefaultDropDown}\r\n                                        selected={formUpdate?.gender || listDefaultDropDown[0]?.value}\r\n                                        name=\"gender\"\r\n                                        onSelected={handleChangeInput}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"do-an__info-manager-container__action__update__content__group-input\">\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__key\">\r\n                                    <span>Khóa: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name`}\r\n                                        {...register(\"course\",\r\n                                            {\r\n                                                required: true,\r\n                                                onChange: (e) => handleChangeInput(\"course\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"do-an__info-manager-container__action__update__content__group-input\">\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__key\">\r\n                                    <span>Đại học: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name`}\r\n                                        {...register(\"university\",\r\n                                            {\r\n                                                required: true,\r\n                                                onChange: (e) => handleChangeInput(\"university\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"do-an__info-manager-container__action__update__content__group-input\">\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__key\">\r\n                                    <span>Số điện thoại: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name`}\r\n                                        {...register(\"phone\",\r\n                                            {\r\n                                                required: true,\r\n                                                onChange: (e) => handleChangeInput(\"phone\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"do-an__info-manager-container__action__update__content__group-input\">\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__key\">\r\n                                    <span>Email: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name`}\r\n                                        {...register(\"email\",\r\n                                            {\r\n                                                required: true,\r\n                                                onChange: (e) => handleChangeInput(\"email\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-update-manager-button\">\r\n                            <button className=\"button-search\" type=\"submit\">Xác nhận</button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n                {isActive === \"change\" &&\r\n                    <div className=\"do-an__info-manager-container__action__change\">\r\n                        <div className=\"do-an__info-manager-container__action__change__title\">\r\n                            Thay đổi mật khẩu\r\n                        </div>\r\n                        <div className=\"do-an__info-manager-container__action__change__group-input\">\r\n                            <div className=\"do-an__info-manager-container__action__change__group-input__key\">\r\n                                <span>Mật khẩu cũ: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an__info-manager-container__action__change__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name`}\r\n                                    onChange={(e) => handleChangePassInput(\"oldpass\", e.target.value)}\r\n                                    value={formChangePass.oldpass}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__info-manager-container__action__change__group-input\">\r\n                            <div className=\"do-an__info-manager-container__action__change__group-input__key\">\r\n                                <span>Mật khẩu mới: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an__info-manager-container__action__change__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name`}\r\n                                    onChange={(e) => handleChangePassInput(\"newpass\", e.target.value)}\r\n                                    value={formChangePass.newpass}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-update-manager-button\">\r\n                            <button className=\"button-search\" type=\"button\" onClick={handleChangePassword}>Xác nhận</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerInfoPage;","F:\\do_an_frontend\\app\\src\\common\\menu-project\\MenuProject.js",["323","324","325","326"],"F:\\do_an_frontend\\app\\src\\components\\voucher\\VoucherPage.js",["327","328","329","330","331","332","333","334","335"],"import React, { useEffect, useState } from 'react';\r\nimport './VoucherPage.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faFilter, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataTable from \"../../share/ecm-base/components/data-table/DataTable\";\r\nimport VoucherAction from \"../../redux/action/VoucherAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useSearchParams, Link, useNavigate } from 'react-router-dom';\r\nimport DropDown from '../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport { DatePicker, } from 'antd';\r\nimport Confirm from '../../share/ecm-base/components/confirm/Confirm';\r\nimport moment from 'moment';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst VoucherPage = ({ prefixPath }) => {\r\n\r\n\r\n    const columnVoucher = [\r\n        {\r\n            title: \"Mã thẻ mượn\",\r\n            dataIndex: \"voucher_id\",\r\n            render: (text) => {\r\n                return <Link to={`${prefixPath}/manager/voucher/${text}`}>{text}</Link>;\r\n            },\r\n            width: \"5%\"\r\n        },\r\n        {\r\n            title: \"Thời gian tạo phiếu\",\r\n            dataIndex: \"start_date\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Hạn trả\",\r\n            dataIndex: \"due_date\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Người mượn\",\r\n            dataIndex: \"user_name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Người duyệt\",\r\n            dataIndex: \"created_by\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Trạng thái\",\r\n            dataIndex: \"status_voucher\",\r\n            className: \"button-center-table\",\r\n            render: (text) => {\r\n                return <div className={`do-an-status-voucher-${text}`}>\r\n                    {text === \"WAITING_CONFIRM\" ? \"Chờ xác nhận\" : \"\"}\r\n                    {text === \"CONFIRMED\" ? \"Đã xác nhận\" : \"\"}\r\n                    {text === \"PAYED\" ? \"Đã trả\" : \"\"}\r\n                    {text === \"EXPIRED\" ? \"Quá hạn\" : \"\"}\r\n                    {text === \"CANCELLED\" ? \"Đã hủy\" : \"\"}\r\n                </div>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Số lượng sách mượn\",\r\n            dataIndex: \"books_borrowed\",\r\n            render: (text) => {\r\n                return <span>{text.length}</span>\r\n            },\r\n            width: \"5%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"voucher_id\",\r\n            render: (text, index) => {\r\n                return <div className=\"do-an-action-list-button\" style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                    {index.status_voucher === \"WAITING_CONFIRM\" && <button className=\"do-an-status-voucher-CONFIRMED\" onClick={() => handleUpdateStatusVoucher(text, index.status_voucher)}>Xác nhận</button>}\r\n                    {index.status_voucher === \"CONFIRMED\" && <button className=\"do-an-status-voucher-PAYED\" onClick={() => handleUpdateStatusVoucher(text, index.status_voucher)}>Trả phiếu</button>}\r\n                    {index.status_voucher === \"EXPIRED\" && <button className=\"do-an-status-voucher-PAYED\" onClick={() => handleUpdateStatusVoucher(text, index.status_voucher)}>Trả phiếu</button>}\r\n                    {index.status_voucher !== \"CANCELLED\" && <button className=\"do-an-status-voucher-CANCELLED\" onClick={() => handleUpdateStatusVoucher(text, \"CANCELLED\")}>Hủy</button>}\r\n                </div>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n    ]\r\n\r\n    let listOrder = [\r\n        {\r\n            title: \"Tăng dần\",\r\n            value: 1\r\n        },\r\n        {\r\n            title: \"Giảm dần\",\r\n            value: -1\r\n        },\r\n    ]\r\n\r\n    let listOrderBy = [\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            value: \"created_time\"\r\n        },\r\n        {\r\n            title: \"Thời gian sửa\",\r\n            value: \"modified_time\"\r\n        },\r\n        {\r\n            title: \"Tên\",\r\n            value: \"name\"\r\n        },\r\n    ]\r\n\r\n    let listStatus = [\r\n        {\r\n            title: \"Tất cả trạng thái\",\r\n            value: \"ALL\"\r\n        },\r\n        {\r\n            title: \"Chờ duyệt\",\r\n            value: \"WAITING_CONFIRM\"\r\n        },\r\n        {\r\n            title: \"Đã duyệt\",\r\n            value: \"CONFIRMED\"\r\n        },\r\n        {\r\n            title: \"Đã trả\",\r\n            value: \"PAYED\"\r\n        },\r\n        {\r\n            title: \"Đến hạn trả\",\r\n            value: \"EXPIRED\"\r\n        },\r\n        {\r\n            title: \"Hủy\",\r\n            value: \"CANCELLED\"\r\n        },\r\n    ]\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listVoucher = useSelector(state => state.voucherReducer.listVoucher)\r\n    const filter = useSelector(state => state.voucherReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.voucherReducer.pagination)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate()\r\n\r\n    const [isHiddenModalCreateVoucher, setIsHiddenModalCreateVoucher] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let urlParams = { ...initPagingFilter }\r\n        if (searchParams.get('voucher_id')) {\r\n            urlParams[\"voucher_id\"] = searchParams.get('voucher_id')\r\n        }\r\n        if (searchParams.get('page')) {\r\n            urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        }\r\n        if (searchParams.get('size')) {\r\n            urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        }\r\n        if (searchParams.get('order_by')) {\r\n            urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        }\r\n        if (searchParams.get('order')) {\r\n            urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        }\r\n        // if (searchParams.get('manager_id')) {\r\n        //     urlParams[\"manager_id\"] = searchParams.get('manager_id')\r\n        // }\r\n        if (searchParams.get('status_voucher')) {\r\n            urlParams[\"status_voucher\"] = searchParams.get('status_voucher')\r\n        }\r\n        if (searchParams.get('start_date')) {\r\n            urlParams[\"start_date\"] = searchParams.get('start_date')\r\n        }\r\n        if (searchParams.get('due_date')) {\r\n            urlParams[\"due_date\"] = searchParams.get('due_date')\r\n        }\r\n        setSearchParams(urlParams)\r\n        VoucherAction.updateVoucherFilterAction(dispatch, urlParams)\r\n        VoucherAction.updateVoucherPagination(dispatch, {\r\n            ...pagination,\r\n            page: urlParams.page,\r\n            size: urlParams.size\r\n        })\r\n        VoucherAction.getListVoucherAction(dispatch, urlParams)\r\n    }, [])\r\n\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter, page: 1 }\r\n        if (field === \"status_voucher\" && value === \"ALL\") {\r\n            delete newSearchFilter.status_voucher\r\n        } else {\r\n            newSearchFilter = { ...filter, page: 1, [field]: value }\r\n        }\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        VoucherAction.updateVoucherFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        VoucherAction.getListVoucherAction(dispatch, filter)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        VoucherAction.updateVoucherFilterAction(dispatch, newSearchFilter)\r\n        VoucherAction.updateVoucherPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        VoucherAction.getListVoucherAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        VoucherAction.updateVoucherFilterAction(dispatch, newSearchFilter)\r\n        VoucherAction.updateVoucherPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        VoucherAction.getListVoucherAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleOpenPageCreate = () => {\r\n        navigate(`${prefixPath}/manager/voucher/create  `)\r\n    }\r\n\r\n    const [isOpenConfirmDialog, setIsOpenConfirmDialog] = useState(false);\r\n    const [codeVoucherUpdate, setCodeVoucherUpdate] = useState(null);\r\n    const [statusUpdate, setStatusUpdate] = useState(null);\r\n\r\n    // const handleDeleteVoucher = (code) => {\r\n    //     setCodeVoucherDelete(code)\r\n    //     setIsOpenConfirmDialog(true)\r\n    // }\r\n\r\n    const handleCancelConfirmDialog = () => {\r\n        setCodeVoucherUpdate(null)\r\n        setIsOpenConfirmDialog(false)\r\n        setStatusUpdate(null)\r\n    }\r\n\r\n    // const handleDeleteConfirmDialog = () => {\r\n    //     VoucherAction.removeVoucher(dispatch, codeVoucherDelete, filter)\r\n    //     handleCancelConfirmDialog()\r\n    // }\r\n\r\n    const handleUpdateStatusVoucher = (voucher_id, status_update) => {\r\n        setIsOpenConfirmDialog(true)\r\n        setCodeVoucherUpdate(voucher_id)\r\n        setStatusUpdate(status_update)\r\n    }\r\n\r\n    const handleUpdateStatus = () => {\r\n        VoucherAction.updateStatusVoucher(dispatch, codeVoucherUpdate, statusUpdate, filter)\r\n\r\n        handleCancelConfirmDialog()\r\n\r\n    }\r\n\r\n    const handleChangeDebut = (range) => {\r\n        console.log(range);\r\n        if (range === null || range === undefined) {\r\n            let newSearchFilter = {\r\n                ...filter\r\n            }\r\n            delete newSearchFilter.start_date\r\n            delete newSearchFilter.due_date\r\n\r\n            VoucherAction.updateVoucherFilterAction(dispatch, newSearchFilter)\r\n            VoucherAction.updateVoucherPagination(dispatch, {\r\n                ...pagination,\r\n                page: 1\r\n            })\r\n        }\r\n\r\n        else {\r\n            const valueOfInput1 = range[0].format(\"YYYY-MM-DD-HH:mm:ss\");\r\n            const valueOfInput2 = range[1].format(\"YYYY-MM-DD-HH:mm:ss\");\r\n\r\n            console.log('start date', valueOfInput1);\r\n            console.log(\"end date\", valueOfInput2);\r\n\r\n            let newSearchFilter = {\r\n                ...filter,\r\n                page: 1,\r\n                start_date: valueOfInput1,\r\n                due_date: valueOfInput2\r\n            }\r\n\r\n            VoucherAction.updateVoucherFilterAction(dispatch, newSearchFilter)\r\n            VoucherAction.updateVoucherPagination(dispatch, {\r\n                ...pagination,\r\n                page: 1\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"do-an__voucher\">\r\n            <div className=\"do-an__voucher__image-cover\">\r\n                {/* <img className=\"image-cover\" src={imageCover}></img> */}\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh sách phiếu mượn</h3>\r\n            </div>\r\n            <div className=\"do-an__voucher__group-search\">\r\n                <div className=\"do-an__voucher__group-search__filter\">\r\n                    <div className=\"do-an__voucher__group-search__item\">\r\n                        <div className=\"do-an__voucher__group-search__item__title\">\r\n                            Mã phiếu mượn:\r\n                        </div>\r\n                        <div className=\"do-an__voucher__group-search__item__input-container\">\r\n                            <input className=\"do-an__voucher__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"voucher_id\", event.target.value)}\r\n                                value={filter?.name || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__voucher__group-search__item\">\r\n                        <div className=\"do-an__voucher__group-search__item__title\">\r\n                            Tên bạn đọc:\r\n                        </div>\r\n                        <div className=\"do-an__voucher__group-search__item__input-container\">\r\n                            <input className=\"do-an__voucher__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"user_id\", event.target.value)}\r\n                                value={filter?.user_id || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__voucher__group-search__item\">\r\n                        <div className=\"do-an__voucher__group-search__item__title\">\r\n                            Sắp xếp:\r\n                        </div>\r\n                        <div className=\"do-an__voucher__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__voucher__group-search__item__input\"\r\n                                listItem={listOrderBy}\r\n                                selected={filter?.order_by || \"created_time\"}\r\n                                name=\"order_by\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__voucher__group-search__item\">\r\n                        <div className=\"do-an__voucher__group-search__item__title\">\r\n                            Thứ tự:\r\n                        </div>\r\n                        <div className=\"do-an__voucher__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__voucher__group-search__item__input\"\r\n                                listItem={listOrder}\r\n                                selected={filter?.order || -1}\r\n                                name=\"order\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__voucher__group-search__item\">\r\n                        <div className=\"do-an__voucher__group-search__item__title\">\r\n                            Trạng thái:\r\n                        </div>\r\n                        <div className=\"do-an__voucher__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__voucher__group-search__item__input\"\r\n                                listItem={listStatus}\r\n                                selected={filter?.status_voucher || \"ALL\"}\r\n                                name=\"status_voucher\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__voucher__group-search__item\">\r\n                        <div className=\"do-an__voucher__group-search__item__title\">\r\n                            Thời gian tạo phiếu:\r\n                        </div>\r\n                        <div className=\"do-an__voucher__group-search__item__datepicker\">\r\n                            {/* <input className=\"do-an__voucher__group-search__item__input\"\r\n                            /> */}\r\n                            <RangePicker showTime\r\n                                onChange={(event) => handleChangeDebut(event)}\r\n                                placeholder={[\"Từ ngày\", \" Đến ngày\"]}\r\n                                // defaultPickerValue={[moment(searchParams?.start_date), moment(searchParams?.due_date)]}\r\n                            >\r\n\r\n                            </RangePicker>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__voucher__group-search__button-search\">\r\n                    <button className=\"button-search\" onClick={handleSearch}>Tìm kiếm</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"do-an__voucher__group-table\">\r\n                <div className=\"do-an__voucher__group-table__title\">\r\n                    <button className=\"button-create-new\" onClick={handleOpenPageCreate}>Thêm mới</button>\r\n                </div>\r\n                <div className=\"do-an__voucher__group-table__table-data\">\r\n                    <DataTable headerData={columnVoucher}\r\n                        tableData={listVoucher}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        onPageChange={handleNumberPagehange}\r\n                        pagination={pagination}>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            <Confirm\r\n                title=\"Cập nhật phiếu mượn\"\r\n                width=\"45%\"\r\n                visible={isOpenConfirmDialog}\r\n                onCancel={handleCancelConfirmDialog}\r\n                onOk={handleUpdateStatus}\r\n            >\r\n                <p>Xác nhận cập nhật trạng thái phiếu mượn: {codeVoucherUpdate}?</p>\r\n            </Confirm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VoucherPage;","F:\\do_an_frontend\\app\\src\\redux\\slice\\LoginSlice.js",[],"F:\\do_an_frontend\\app\\src\\redux\\slice\\BooksSlice.js",[],"F:\\do_an_frontend\\app\\src\\components\\user\\components\\get_detail_user\\DetailUser.js",["336","337","338","339","340","341","342","343","344","345","346"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport \"./DetailUser.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faCircleInfo, faFileLines } from \"@fortawesome/free-solid-svg-icons\";\r\nimport image from '../../../../share/image/123.jpg';\r\nimport UserAction from '../../../../redux/action/UserAction';\r\nimport { useParams, useSearchParams, Link, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ConstAPI from '../../../../common/const';\r\nimport DataTable from '../../../../share/ecm-base/components/data-table/DataTable';\r\nimport Modal from '../../../../share/ecm-base/components/modal/Modal';\r\nimport Button from '../../../../share/ecm-base/components/button/Button';\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport VoucherAction from '../../../../redux/action/VoucherAction';\r\n\r\nconst DetailUser = ({ prefixPath }) => {\r\n\r\n    const columnVoucher = [\r\n        {\r\n            title: \"Mã thẻ mượn\",\r\n            dataIndex: \"voucher_id\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Thời gian mượn\",\r\n            dataIndex: \"start_date\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Hạn trả\",\r\n            dataIndex: \"due_date\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Người duyệt\",\r\n            dataIndex: \"created_by\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Số lượng\",\r\n            dataIndex: \"books_borrowed\",\r\n            render: (text) => {\r\n                return <span>{text.length}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n    ]\r\n\r\n    const userDetail = useSelector(state => state.userReducer.detailUser)\r\n    const listVoucher = useSelector(state => state.voucherReducer.listVoucher)\r\n\r\n    useEffect(() => {\r\n        UserAction.getDetailUserAction(dispatch, code)\r\n\r\n        VoucherAction.getListVoucherAction(dispatch,\r\n            {\r\n                page: 1,\r\n                size: 10,\r\n                order_by: \"created_time\",\r\n                order: -1,\r\n                user_id: code\r\n            }\r\n        )\r\n    }, [])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const { code } = useParams()\r\n\r\n    console.log(listVoucher);\r\n\r\n    return (\r\n        <div className='do-an__view-user-container'>\r\n            <div className='do-an__view-user-container__header'>\r\n                <div className='do-an__view-user-container__header__text'>\r\n                    <button\r\n                        className=\"do-an__view-user-container__header__button\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => navigate(-1)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faArrowLeft} style={{ height: \"22px\", marginTop: \"5px\", marginLeft: \"5px\" }} />\r\n                    </button>\r\n                    <div className='do-an__view-user-container__header__title'>Thông tin chi tiết người dùng</div>\r\n                </div>\r\n            </div>\r\n            <div className='do-an__view-user-container__info'>\r\n                <div className='do-an__view-user-container__info__group-info'>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Tên người dùng:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Mã người dùng:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.code}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Ngày sinh:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.date_of_birth}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Giới tính:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.gender}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Khóa:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.course}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='do-an__view-user-container__info__group-info'>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Tên đại học:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.university}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Số điện thoại:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.phone}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Email:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.email}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Tài khoản:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.user_name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Ngày tạo:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail?.created_time}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='do-an__view-user-container__info__avatar'>\r\n                    <img className=\"do-an-preview-image\" src={`${ConstAPI.BASE_HOST_API}${userDetail.avatar}`}></img>\r\n                </div>\r\n            </div>\r\n            <div className='do-an__view-user-container__table'>\r\n                <div className='do-an__view-user-container__table__search'>\r\n                    <div className=\"do-an__view-user-container__table__search__filter\">\r\n                        <div className=\"do-an__view-user-container__table__search__item\">\r\n                            <div className=\"do-an__view-user-container__table__search__item__title\">\r\n                                Tình trạng thẻ mượn:\r\n                            </div>\r\n                            <div className=\"do-an__view-user-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-user-container__table__search__item__input\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-user-container__table__search__item\">\r\n                            <div className=\"do-an__view-user-container__table__search__item__title\">\r\n                                Ngày bắt đầu:\r\n                            </div>\r\n                            <div className=\"do-an__view-user-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-user-container__table__search__item__input\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-user-container__table__search__item\">\r\n                            <div className=\"do-an__view-user-container__table__search__item__title\">\r\n                                Ngày kết thúc:\r\n                            </div>\r\n                            <div className=\"do-an__view-user-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-user-container__table__search__item__input\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-user-container__table__search__item\">\r\n                            <div className=\"do-an__view-user-container__table__search__item__title\">\r\n                                Người duyệt:\r\n                            </div>\r\n                            <div className=\"do-an__view-user-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-user-container__table__search__item__input\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DataTable headerData={columnVoucher}\r\n                            tableData={listVoucher}\r\n\r\n                >\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DetailUser;","F:\\do_an_frontend\\app\\src\\redux\\slice\\VoucherSlice.js",[],"F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\detail_voucher\\DetailVoucher.js",["347","348","349","350","351","352","353"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport './DetailVoucher.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faBook } from \"@fortawesome/free-solid-svg-icons\";\r\nimport image from '../../../../share/image/123.jpg';\r\nimport { useParams, useSearchParams, Link, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport DropDown from \"../../../../share/ecm-base/components/dropdown-v2/DropDown\";\r\nimport ConstAPI from \"../../../../common/const\";\r\nimport DataTable from \"../../../../share/ecm-base/components/data-table/DataTable\";\r\nimport VoucherAction from \"../../../../redux/action/VoucherAction\";\r\n\r\n\r\nconst DetailVoucher = ({ prefixPath }) => {\r\n\r\n    const columnBook = [\r\n        {\r\n            title: \"Mã sách\",\r\n            dataIndex: \"code_id\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Tình trạng sách\",\r\n            dataIndex: \"status_book\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tình trạng mượn\",\r\n            dataIndex: \"status_borrow\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Người mượn\",\r\n            dataIndex: \"user_borrow\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Mã QR Code\",\r\n            dataIndex: \"qr_code_data\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có mã QR</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n    ]\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const {voucher_id} = useParams()\r\n\r\n    const [listBook, setListBook] = useState([])\r\n\r\n    const detailVoucher = useSelector(state => state.voucherReducer.detailVoucher)\r\n\r\n    useEffect(() => {\r\n        VoucherAction.getDetailVoucherAction(dispatch, voucher_id).then(response => {\r\n            setListBook(response?.books_borrowed)\r\n        })\r\n    }, [voucher_id])\r\n\r\n    const handleUpdatePage = () => {\r\n        navigate(`${prefixPath}/manager/voucher/${voucher_id}/update`)\r\n    }\r\n\r\n    return (\r\n        <div className='do-an__view-voucher-container'>\r\n            <div className='do-an__view-voucher-container__header'>\r\n                <div className='do-an__view-voucher-container__header__text'>\r\n                    <button\r\n                        className=\"do-an__view-voucher-container__header__button\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => navigate(-1)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faArrowLeft} style={{ height: \"22px\", marginTop: \"5px\", marginLeft: \"5px\" }} />\r\n                    </button>\r\n                    <div className='do-an__view-voucher-container__header__title'>Thông tin chi tiết phiếu mượn</div>\r\n                </div>\r\n\r\n                <button\r\n                    className=\"do-an__view-voucher-container__header__button-edit button-search\"\r\n                    style={{ float: \"right\", margin: \"10px\" }}\r\n                    onClick={handleUpdatePage}\r\n                >\r\n                    Chỉnh sửa\r\n                </button>\r\n            </div>\r\n            <div className='do-an__view-voucher-container__info'>\r\n                <div className='do-an__view-voucher-container__info__group-info do-an-view-info-user'>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Tên bạn đọc:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.users?.name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Mã bạn đọc:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                        {detailVoucher?.users?.code}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Ngày sinh:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                        {detailVoucher?.users?.date_of_birth}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Giới tính:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                        {detailVoucher?.users?.gender}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Khóa:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                        {detailVoucher?.users?.course}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='do-an__view-voucher-container__info__group-info do-an-view-info-user'>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Đại học:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                        {detailVoucher?.users?.university}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Số điện thoại:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                        {detailVoucher?.users?.phone}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Email:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                        {detailVoucher?.users?.email}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Tài khoản:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                        {detailVoucher?.users?.user_name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Ngày tạo:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                        {detailVoucher?.users?.created_time}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='do-an__view-voucher-container__info__avatar'>\r\n                    <img className=\"do-an-preview-image\" src={`${ConstAPI.BASE_HOST_API}${detailVoucher?.users?.avatar}`}></img>\r\n                </div>\r\n            </div>\r\n            <div className='do-an__view-voucher-container__table'>\r\n                <div className='do-an__view-voucher-container__info'>\r\n                    <div className='do-an__view-voucher-container__info__group-info'>\r\n                        <div className='do-an__view-voucher-container__info__row'>\r\n                            <div className='do-an__view-voucher-container__info__row__title'>\r\n                                Mã phiếu mượn:\r\n                            </div>\r\n                            <div className='do-an__view-voucher-container__info__row__value'>\r\n                                {detailVoucher?.voucher_id}\r\n                            </div>\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row'>\r\n                            <div className='do-an__view-voucher-container__info__row__title'>\r\n                                Ngày bắt đầu:\r\n                            </div>\r\n                            <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.start_date}\r\n                            </div>\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row'>\r\n                            <div className='do-an__view-voucher-container__info__row__title'>\r\n                                Ngày kết thúc:\r\n                            </div>\r\n                            <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.due_date}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='do-an__view-voucher-container__info__group-info'>\r\n                        <div className='do-an__view-voucher-container__info__row'>\r\n                            <div className='do-an__view-voucher-container__info__row__title'>\r\n                                Trạng thái:\r\n                            </div>\r\n                            <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.status_voucher}\r\n                            </div>\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row'>\r\n                            <div className='do-an__view-voucher-container__info__row__title'>\r\n                                Người duyệt:\r\n                            </div>\r\n                            <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.created_by}\r\n                            </div>\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row'>\r\n                            <div className='do-an__view-voucher-container__info__row__title'>\r\n                                Thời gian sửa cuối:\r\n                            </div>\r\n                            <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.modified_time}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__user-voucher-status'>\r\n                        {/* <img className=\"do-an-preview-image\" src={image}></img> */}\r\n\r\n                        <div className=\"do-an__view-voucher-container__info__user-voucher-status__history-voucher\">\r\n                            <div className=\"do-an__view-voucher-container__info__user-voucher-status__history-voucher__icon\">\r\n                                <FontAwesomeIcon icon={faBook} style={{ height: \"50px\", color: \"#00089b\" }} />\r\n                            </div>\r\n                            <div className=\"do-an__view-voucher-container__info__user-voucher-status__history-voucher__infor\">\r\n                                <span>Tổng số phiếu mượn: 10</span>\r\n                                <span>Quá hạn: 1</span>\r\n                                <span>Đã trả: 9</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DataTable headerData={columnBook}\r\n                        tableData={listBook}\r\n                    >\r\n                    </DataTable>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailVoucher;","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\update_voucher\\UpdateVoucher.js",["354","355","356","357","358"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faBook, faPencil } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport \"./UpdateVoucher.scss\";\r\nimport Button from \"../../../../share/ecm-base/components/button/Button\";\r\nimport DataTable from \"../../../../share/ecm-base/components/data-table/DataTable\";\r\nimport { ListButton, ListButtonUser } from \"../../../../common/utils\";\r\nimport Modal from \"../../../../share/ecm-base/components/modal/Modal\";\r\nimport UserPageVoucher from \"../user_voucher/UserPageVoucher\";\r\nimport UserAction from \"../../../../redux/action/UserAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport BookAction from \"../../../../redux/action/BookAction\";\r\nimport ConstAPI from \"../../../../common/const\";\r\nimport VoucherAction from \"../../../../redux/action/VoucherAction\";\r\n\r\n\r\nconst UpdateVoucher = ({ prefixPath }) => {\r\n\r\n    const columnVoucher = [\r\n        {\r\n            title: \"Mã sách\",\r\n            dataIndex: \"code_id\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên sách\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tác giả\",\r\n            dataIndex: \"author\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tiêu đề\",\r\n            dataIndex: \"title\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"code_id\",\r\n            render: (text) => {\r\n                return (\r\n                    <ListButtonUser\r\n                        editDisable={true}\r\n                        onRemoveAction={() => handleRemoveBook(text)}\r\n                    ></ListButtonUser>\r\n                );\r\n            },\r\n            width: \"5%\"\r\n        }\r\n    ]\r\n\r\n    const { register, setValue, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n\r\n    const [listBookUpdate, setListBookUpdate] = useState([])\r\n    const [listBookTable, setListBookTable] = useState([])\r\n    const [openModalUser, setOpenModaluser] = useState(false)\r\n    const [formUpdate, setFormUpdate] = useState({})\r\n    const [valueInput, setValueInput] = useState(\"\")\r\n    const [userDataUpdate, setUserDataUpdate] = useState({})\r\n    // const [userInfo, setUserInfo] = useState({})\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const { voucher_id } = useParams()\r\n\r\n    // const detailUser = useSelector(state => state.userReducer.detailUser)\r\n    const detailVoucher = useSelector(state => state.voucherReducer.detailVoucher)\r\n    useEffect(() => {\r\n        if (Object.keys(detailVoucher).length === 0) {\r\n            VoucherAction.getDetailVoucherAction(dispatch, voucher_id)\r\n        }\r\n    }, [voucher_id])\r\n\r\n    useEffect(() => {\r\n        setValue(\"user_id\", detailVoucher?.user_id)\r\n        setValue(\"due_date\", detailVoucher?.due_date)\r\n        setValue(\"description\", detailVoucher?.description)\r\n\r\n        setUserDataUpdate(detailVoucher?.users)\r\n\r\n        const newBookTable = [...listBookTable]\r\n        const newBookUpdate = [...listBookUpdate]\r\n\r\n        detailVoucher?.books_borrowed?.forEach(item => {\r\n            let itemMap = {\r\n                \"code_id\": item.code_id,\r\n                \"name\": item?.books.name,\r\n                \"avatar\": item?.books.avatar,\r\n                \"author\": item?.books.author,\r\n                \"title\": item?.books.title\r\n            }\r\n\r\n            newBookTable.push(itemMap)\r\n            newBookUpdate.push(item.code_id)\r\n        })\r\n\r\n        setListBookTable(newBookTable)\r\n        setListBookUpdate(newBookUpdate)\r\n\r\n        setFormUpdate({\r\n            \"due_date\": detailVoucher?.due_date,\r\n            \"user_id\": detailVoucher?.user_id,\r\n            \"description\": detailVoucher?.description,\r\n            \"manager_id\": \"\",\r\n            \"books_borrowed\": newBookUpdate\r\n        })\r\n    }, [detailVoucher])\r\n\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const handleOpenModalUser = () => {\r\n        setOpenModaluser(true)\r\n    }\r\n\r\n    const handleCloseModalUser = () => {\r\n        setOpenModaluser(false)\r\n    }\r\n\r\n    const handleSelectUser = (user_id) => {\r\n        UserAction.getDetailUserAction(dispatch, user_id).then(response => {\r\n            setUserDataUpdate(response)\r\n            setFormUpdate({\r\n                ...formUpdate,\r\n                \"user_id\": response.code\r\n            })\r\n            setValue(\"user_id\", response.code)\r\n        })\r\n        setOpenModaluser(false)\r\n    }\r\n\r\n    const handleChangeInput = (value) => {\r\n        setValueInput(value)\r\n    }\r\n\r\n    const handleChangeInputForm = (field, value) => {\r\n        const newFormData = { ...formUpdate, [field]: value }\r\n        setFormUpdate(newFormData)\r\n    }\r\n\r\n    const handleAddBook = () => {\r\n        if (valueInput.trim() !== \"\") {\r\n            BookAction.getDetailBookAction(dispatch, valueInput).then(response => {\r\n                if (response.status === 200) {\r\n                    setListBookTable([\r\n                        ...listBookTable,\r\n                        {\r\n                            \"code_id\": valueInput,\r\n                            \"name\": response.data.data.books.name,\r\n                            \"avatar\": response.data.data.books.avatar,\r\n                            \"author\": response.data.data.books.author,\r\n                            \"title\": response.data.data.books.title\r\n                        }\r\n                    ])\r\n                }\r\n            })\r\n\r\n            setListBookUpdate([\r\n                ...listBookUpdate,\r\n                valueInput\r\n            ])\r\n            setValueInput(\"\")\r\n        }\r\n    }\r\n\r\n    const handleSubmitFormUpdate = () => {\r\n        const formUpdateVoucher = {\r\n            ...formUpdate,\r\n            manager_id: \"MANAGER_1674916899\",\r\n            books_borrowed: listBookUpdate\r\n        }\r\n\r\n        VoucherAction.updateVoucherAction(dispatch,voucher_id ,formUpdateVoucher).then(response => {\r\n            navigate(`${prefixPath}/manager/voucher/list`)\r\n        })\r\n    }\r\n\r\n    const handleRemoveBook = (code_id) => {\r\n        console.log(code_id);\r\n        let index = listBookUpdate.findIndex(item => item === code_id)\r\n        console.log(index);\r\n        if(index > -1){\r\n           let newListUpdate = [...listBookUpdate]\r\n           newListUpdate.splice(index, 1)\r\n           setListBookUpdate(newListUpdate)\r\n           setFormUpdate({\r\n            ...formUpdate,\r\n            \"books_borrowed\": newListUpdate\r\n           })\r\n\r\n           let newListTable = [...listBookTable]\r\n           newListTable.splice(index, 1)\r\n           setListBookTable(newListTable)\r\n        }\r\n    }\r\n\r\n    console.log(formUpdate);\r\n\r\n\r\n    return (\r\n        <form className=\"do-an__update-voucher__form\" onSubmit={handleSubmit(handleSubmitFormUpdate)}>\r\n            <div className='do-an__update-voucher-container'>\r\n                <div className='do-an__update-voucher-container__header'>\r\n                    <div className='do-an__update-voucher-container__header__text'>\r\n                        <button\r\n                            className=\"do-an__update-voucher-container__header__button\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => navigate(-1)}\r\n                            type=\"button\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faArrowLeft} style={{ height: \"22px\", marginTop: \"5px\", marginLeft: \"5px\" }} />\r\n                        </button>\r\n                        <div className='do-an__update-voucher-container__header__title'>Chỉnh sửa phiếu mượn</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__update-voucher-container__body\">\r\n                    <div className=\"do-an__update-voucher-container__body__user-info\">\r\n                        <div className=\"do-an__update-voucher-container__body__user-info__group-info\">\r\n                            <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-first\">\r\n                                <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-input-name\">\r\n                                    <div>\r\n                                        Tên bạn đọc<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <input\r\n                                            value={userDataUpdate?.name}\r\n                                            readOnly={true}\r\n                                            className={`do-an__input do-an-input-name-update-voucher ${errors.name ? 'is-invalid' : ''}`}\r\n                                        />\r\n                                        <button\r\n                                            className=\"do-an__update-voucher-container__body__button\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                            onClick={handleOpenModalUser}\r\n                                            type=\"button\"\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faPencil} style={{ color: \"#141ed2\", cursor: \"pointer\" }}></FontAwesomeIcon>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-input-code\">\r\n                                    <div>\r\n                                        Mã bạn đọc<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            // value={formUpdate?.user_id}\r\n                                            readOnly={true}\r\n                                            className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                            {...register(\"user_id\",\r\n                                                {\r\n                                                    required: true,\r\n                                                    onChange: (e) => handleChangeInputForm(\"user_id\", e.target.value)\r\n                                                }\r\n                                            )}\r\n                                        />\r\n                                        {errors.name?.type === \"required\" &&\r\n                                            <div className=\"input-value-error\">Mã bạn đọc không được trống!</div>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-input-course\">\r\n                                    <div>\r\n                                        Khóa<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            value={userDataUpdate?.course}\r\n                                            readOnly={true}\r\n                                            className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-second\">\r\n                                <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-input-start-date\">\r\n                                    <div>\r\n                                        Thời gian bắt đầu<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-input-due-date\">\r\n                                    <div>\r\n                                        Thời gian hẹn trả<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                            {...register(\"due_date\",\r\n                                                {\r\n                                                    required: true,\r\n                                                    onChange: (e) => handleChangeInputForm(\"due_date\", e.target.value)\r\n                                                }\r\n                                            )}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-input-description\">\r\n                                    <div>\r\n                                        Ghi chú<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            className={`do-an__input do-an-input-description-update-voucher ${errors.name ? 'is-invalid' : ''}`}\r\n                                            {...register(\"description\",\r\n                                                {\r\n                                                    required: true,\r\n                                                    onChange: (e) => handleChangeInputForm(\"description\", e.target.value)\r\n                                                }\r\n                                            )}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__update-voucher-container__body__user-info__history-voucher\">\r\n                            <div className=\"do-an__update-voucher-container__body__user-info__history-voucher__icon\">\r\n                                <FontAwesomeIcon icon={faBook} style={{ height: \"50px\", color: \"#00089b\" }} />\r\n                            </div>\r\n                            <div className=\"do-an__update-voucher-container__body__user-info__history-voucher__infor\">\r\n                                <span>Tổng số phiếu mượn</span>\r\n                                <span>Quá hạn</span>\r\n                                <span>Đã trả</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__update-voucher-container__body__table-borrow\">\r\n                        <div className=\"do-an__update-voucher-container__body__table-borrow__header\">\r\n                            <div className=\"do-an__update-voucher-container__body__table-borrow__header__title\">\r\n                                Mã sách:\r\n                            </div>\r\n                            <div className=\"do-an__update-voucher-container__body__table-borrow__header__input\">\r\n                                <input\r\n                                    value={valueInput}\r\n                                    className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                    onChange={(event) => handleChangeInput(event.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"do-an__update-voucher-container__body__table-borrow__header__button\">\r\n                                <Button\r\n                                    type={\"normal-green\"}\r\n                                    onClick={handleAddBook}\r\n                                >\r\n                                    Thêm\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__update-voucher-container__body__table-borrow__table\">\r\n                            <DataTable\r\n                                headerData={columnVoucher}\r\n                                tableData={listBookTable}\r\n                            >\r\n\r\n                            </DataTable>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__update-voucher-container__footer\">\r\n                    {/* <Button\r\n                        type={\"normal-blue\"}\r\n                    >\r\n                        Xác nhận\r\n                    </Button> */}\r\n                    <button type=\"submit\">\r\n                        Xác nhận\r\n                    </button>\r\n                </div>\r\n\r\n                {openModalUser &&\r\n                    <Modal\r\n                        title=\"Chọn bạn đọc\"\r\n                        width=\"70%\"\r\n                        onCancel={handleCloseModalUser}\r\n                        visible={openModalUser}\r\n                    >\r\n                        <UserPageVoucher handleSelectUser={handleSelectUser}></UserPageVoucher>\r\n                    </Modal>\r\n                }\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default UpdateVoucher;","F:\\do_an_frontend\\app\\src\\redux\\slice\\BookSlice.js",[],"F:\\do_an_frontend\\app\\src\\redux\\slice\\UserSlice.js",[],"F:\\do_an_frontend\\app\\src\\redux\\slice\\ManagerSlice.js",[],"F:\\do_an_frontend\\app\\src\\redux\\slice\\GroupsSlice.js",[],"F:\\do_an_frontend\\app\\src\\components\\books\\components\\detail_books\\DetailBooks.js",["359","360","361","362","363","364","365","366","367","368"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport \"./DetailBooks.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faCircleInfo, faFileLines } from \"@fortawesome/free-solid-svg-icons\";\r\nimport image from '../../../../share/image/123.jpg';\r\nimport BooksAction from '../../../../redux/action/BooksAction';\r\nimport { useParams, useSearchParams, Link, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ConstAPI from '../../../../common/const';\r\nimport DataTable from '../../../../share/ecm-base/components/data-table/DataTable';\r\nimport BookAction from '../../../../redux/action/BookAction';\r\nimport Modal from '../../../../share/ecm-base/components/modal/Modal';\r\nimport Button from '../../../../share/ecm-base/components/button/Button';\r\nimport UpdateBooks from '../update_books/UpdateBooks';\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\n\r\nconst DetailBooks = ({ prefixPath }) => {\r\n\r\n    const columnBook = [\r\n        {\r\n            title: \"Mã sách\",\r\n            dataIndex: \"code_id\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Tình trạng sách\",\r\n            dataIndex: \"status_book\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tình trạng mượn\",\r\n            dataIndex: \"status_borrow\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Người mượn\",\r\n            dataIndex: \"user_borrow\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Mã QR Code\",\r\n            dataIndex: \"qr_code_data\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n    ]\r\n\r\n    let listStatusBook = [\r\n        {\r\n            title: \"Tất cả tình trạng\",\r\n            value: \"ALL\"\r\n        },\r\n        {\r\n            title: \"Sách mới\",\r\n            value: \"NEW\"\r\n        },\r\n        {\r\n            title: \"Sách cũ\",\r\n            value: \"OLD\"\r\n        }\r\n    ]\r\n\r\n    let listStatusBorrow = [\r\n        {\r\n            title: \"Tất cả tình trạng\",\r\n            value: \"ALL\"\r\n        },\r\n        {\r\n            title: \"Đang được mượn\",\r\n            value: \"BORROWING\"\r\n        },\r\n        {\r\n            title: \"Chưa được mượn\",\r\n            value: \"READY\"\r\n        }\r\n    ]\r\n\r\n    const booksDetail = useSelector(state => state.booksReducer.detailBooks)\r\n\r\n    useEffect(() => {\r\n        BooksAction.getDetailBooksAction(dispatch, code)\r\n    }, [])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const { code } = useParams()\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listBook = useSelector(state => state.bookReducer.listBook)\r\n    const filter = useSelector(state => state.bookReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.bookReducer.pagination)\r\n\r\n    useEffect(() => {\r\n        BookAction.getListBookAction(dispatch, code, initPagingFilter)\r\n    }, [])\r\n\r\n    const [openModalUpdate, setOpenModalUpdate] = useState(false)\r\n\r\n    const handleOpenModalUpdate = () => {\r\n        setOpenModalUpdate(true)\r\n    }\r\n\r\n    const onSubmitFormUpdate = () => {\r\n        document.getElementById(\"do-an-form-update-books-button\").click();\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setOpenModalUpdate(false)\r\n    }\r\n\r\n    const [filterBook, setFilterBook] = useState(initPagingFilter)\r\n\r\n    const handleChangeSearchBook = (field, value) => {\r\n        let new_filter_book = { ...filterBook, [field]: value }\r\n        setFilterBook(new_filter_book)\r\n    }\r\n\r\n    const handleChangeDropDown = (field, value) => {\r\n        let new_filter_book = {}\r\n        if(value === \"ALL\"){\r\n            new_filter_book = { ...filterBook, [field]: \"\" }\r\n        }else{\r\n            new_filter_book = { ...filterBook, [field]: value }\r\n        }\r\n        setFilterBook(new_filter_book)\r\n\r\n        BookAction.getListBookAction(dispatch, code, new_filter_book)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            BookAction.getListBookAction(dispatch, code, filterBook)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='do-an__view-books-container'>\r\n            <div className='do-an__view-books-container__header'>\r\n                <div className='do-an__view-books-container__header__text'>\r\n                    <button\r\n                        className=\"do-an__view-books-container__header__button\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => navigate(-1)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faArrowLeft} style={{ height: \"22px\", marginTop: \"5px\", marginLeft: \"5px\" }} />\r\n                    </button>\r\n                    <div className='do-an__view-books-container__header__title'>Thông tin chi tiết sách</div>\r\n                </div>\r\n\r\n                <button\r\n                    className=\"do-an__view-books-container__header__button-edit button-search\"\r\n                    style={{ float: \"right\", margin: \"10px   \" }}\r\n                    onClick={handleOpenModalUpdate}\r\n                >\r\n                    Chỉnh sửa\r\n                </button>\r\n            </div>\r\n            <div className='do-an__view-books-container__info'>\r\n                <div className='do-an__view-books-container__info__group-info'>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Tên sách:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Mã sách:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.code}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Mô tả:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.description}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Ngày tạo:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.created_time}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Người tạo:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.created_by}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='do-an__view-books-container__info__group-info'>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Tác giả:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.author}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Tiêu đề sách:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.title}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Năm xuất bản:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.publishing_year}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Nhà xuất bản:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.origin}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Thể loại:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail?.groups?.group_name}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='do-an__view-books-container__info__avatar'>\r\n                    <img className=\"do-an-preview-image\" src={`${ConstAPI.BASE_HOST_API}${booksDetail.avatar}`}></img>\r\n                </div>\r\n            </div>\r\n            <div className='do-an__view-books-container__table'>\r\n                <div className='do-an__view-books-container__table__search'>\r\n                    <div className=\"do-an__view-books-container__table__search__filter\">\r\n                        <div className=\"do-an__view-books-container__table__search__item\">\r\n                            <div className=\"do-an__view-books-container__table__search__item__title\">\r\n                                Mã sách:\r\n                            </div>\r\n                            <div className=\"do-an__view-books-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-books-container__table__search__item__input\"\r\n                                    onChange={(event) => handleChangeSearchBook(\"code_id\", event.target.value)}\r\n                                    onKeyDown={(event) => handleKeyDown(event)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-books-container__table__search__item\">\r\n                            <div className=\"do-an__view-books-container__table__search__item__title\">\r\n                                Tình trạng sách:\r\n                            </div>\r\n                            <div className=\"do-an__view-books-container__table__search__item__input-container\">\r\n                                <DropDown\r\n                                    className=\"do-an__view-books-container__table__search__item__input\"\r\n                                    listItem={listStatusBook}\r\n                                    selected={filterBook?.status_book || \"ALL\"}\r\n                                    name=\"status_book\"\r\n                                    onSelected={handleChangeDropDown}\r\n                                >\r\n                                </DropDown>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-books-container__table__search__item\">\r\n                            <div className=\"do-an__view-books-container__table__search__item__title\">\r\n                                Tình trạng mượn:\r\n                            </div>\r\n                            <div className=\"do-an__view-books-container__table__search__item__input-container\">\r\n                                <DropDown\r\n                                    className=\"do-an__view-books-container__table__search__item__input\"\r\n                                    listItem={listStatusBorrow}\r\n                                    selected={filterBook?.status_borrow || \"ALL\"}\r\n                                    name=\"status_borrow\"\r\n                                    onSelected={handleChangeDropDown}\r\n                                >\r\n                                </DropDown>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-books-container__table__search__item\">\r\n                            <div className=\"do-an__view-books-container__table__search__item__title\">\r\n                                Người mượn:\r\n                            </div>\r\n                            <div className=\"do-an__view-books-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-books-container__table__search__item__input\"\r\n                                    onChange={(event) => handleChangeSearchBook(\"user_borrow\", event.target.value)}\r\n                                    onKeyDown={(event) => handleKeyDown(event)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DataTable headerData={columnBook}\r\n                    tableData={listBook}\r\n                    pagination={pagination}\r\n                >\r\n                </DataTable>\r\n            </div>\r\n\r\n            {openModalUpdate &&\r\n                <Modal\r\n                    title=\"Tạo mới sách\"\r\n                    width=\"70%\"\r\n                    onCancel={onCancel}\r\n                    visible={openModalUpdate}\r\n                    footer={\r\n                        <div className='do-an__modal__footer'>\r\n                            <Button\r\n                                type={\"normal-blue\"}\r\n                                onClick={onSubmitFormUpdate}\r\n                            >\r\n                                Cập nhật\r\n                            </Button>\r\n                            <Button\r\n                                type={\"normal-gray\"}\r\n                                onClick={onCancel}\r\n                            >\r\n                                Hủy bỏ\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <UpdateBooks onCloseModal={onCancel}>\r\n\r\n                    </UpdateBooks>\r\n                </Modal>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DetailBooks;","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\toasts\\Toasts.js",["369"],"import React, { useCallback, useEffect } from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleCheck, faTriangleExclamation, faCircleInfo, faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\"\r\nimport './Toasts.scss'\r\n\r\nconst Toasts = ({toastList, setList}) => {\r\n    const deleteToast = useCallback(id => {\r\n        const toastListItem = toastList.filter(e => e.id !== id)\r\n        setList(toastListItem)\r\n    }, [])\r\n\r\n    const dataToast = {\r\n        success: {\r\n            icon: <FontAwesomeIcon icon={faCircleCheck} />,\r\n            background: \"#1fb266\",\r\n        },\r\n        warning: {\r\n            icon: <FontAwesomeIcon icon={faTriangleExclamation} />,\r\n            background: \"#f1b627\",\r\n        },\r\n        info: {\r\n            icon: <FontAwesomeIcon icon={faCircleInfo} />,\r\n            background: \"#141ed2\",\r\n        },\r\n        error: {\r\n            icon: <FontAwesomeIcon icon={faTriangleExclamation} />,\r\n            background: \"#eb2d4b\",\r\n        },\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if(toastList.length){\r\n                deleteToast(toastList[0].id)\r\n            }\r\n        }, 4000)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [toastList, deleteToast])\r\n\r\n    return (\r\n        <div className='toasts-container bottom-right'>\r\n            {\r\n                toastList.map((toast) => {\r\n                    return(\r\n                        <div\r\n                            key={toast.id}\r\n                            className='notification toast bottom-right'\r\n                        >\r\n                            <div \r\n                                className='logo'\r\n                                style={{color: dataToast[toast.type].background}}\r\n                            >{dataToast[toast.type].icon}</div>\r\n                            <div className='info'>\r\n                                <div className='title'>{toast.title}</div>\r\n                                <div className='message'> {toast.message}</div>\r\n                            </div>\r\n                            <div className='button'><button onClick={() => deleteToast(toast.id)}><FontAwesomeIcon icon={faXmark} /></button></div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nToasts.prototype = {\r\n    toastList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setList: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Toasts","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\loading\\Loading.js",[],"F:\\do_an_frontend\\app\\src\\common\\const.js",[],"F:\\do_an_frontend\\app\\src\\common\\utils.js",["370"],"import $ from \"jquery\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst isNotNullOrUndefined = (object) => {\r\n    return !!(typeof (object) !== \"undefined\" && object !== null && object !== {});\r\n}\r\n\r\nconst removeFieldEmtyinObject = (object) => {\r\n    const obj = JSON.parse(JSON.stringify(object));\r\n    $.each(obj, function (key, value) {\r\n        if (value === \"\" || value === null) {\r\n            delete obj[key];\r\n        } else if (Object.prototype.toString.call(value) === '[object Object]') {\r\n            removeFieldEmtyinObject(value);\r\n        } else if ($.isArray(value)) {\r\n            $.each(value, function (_k, v) { removeFieldEmtyinObject(v); });\r\n        }\r\n    });\r\n    return obj\r\n}\r\n\r\nconst readFileDataAsBuffer = (file) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (event) => {\r\n            resolve(event.target.result);\r\n        };\r\n\r\n        reader.onerror = (err) => {\r\n            reject(err);\r\n        };\r\n\r\n        reader.readAsArrayBuffer(file);\r\n    });\r\n}\r\n\r\nconst showTooltip = () => {\r\n    $.fn.textWidth = function (text, font) {\r\n        if (!$.fn.textWidth.fakeEl) $.fn.textWidth.fakeEl = $('<span>').hide().appendTo(document.body);\r\n        $.fn.textWidth.fakeEl.text(text || this.val() || this.text()).css('font', font || this.css('font'));\r\n        return $.fn.textWidth.fakeEl.width();\r\n    };\r\n    $('.ocr-designer__tooltip').unbind(\"hover\")\r\n    $('.ocr-designer__tooltip').hover(function () {\r\n        let tooltip = $(this);\r\n        let tooltip_text = tooltip.attr('data-tip');\r\n        let tooltip_placement = tooltip.attr('data-placement') !== undefined && tooltip.attr('data-placement') !== \"\" ? tooltip.attr('data-placement').toLowerCase() : \"top\";\r\n        let tooltip_style = tooltip.attr('data-style') === \"tooltip\" ? \"ocr-designer__tooltip-text\" : \"\";\r\n        let isCheckTextWitdh = tooltip.attr('data-check-text-width') === \"false\" ? false : true;\r\n\r\n        //check show tooltip\r\n        if (isCheckTextWitdh === true) {\r\n            if (tooltip_text === undefined || tooltip_text === \"\" || tooltip_text === null\r\n                || tooltip.attr('data-style') !== \"tooltip\" || tooltip.textWidth() <= tooltip.width()) {\r\n                return\r\n            }\r\n        }\r\n        let tooltip_class = `.${tooltip_style}-${tooltip_placement}`;\r\n        $(tooltip_class).remove();\r\n        $(\".ocr-designer__layout-project__container\").append(`<span class=\"ocr-designer__tooltip-content ${tooltip_style}-${tooltip_placement}\">${tooltip_text}</span>`);\r\n\r\n        //get position tooltip\r\n\r\n        let box_tooltip = tooltip.get(0).getBoundingClientRect();\r\n        let position_top = box_tooltip.top - 10 - $(tooltip_class).outerHeight();\r\n        let position_bottom = box_tooltip.top + box_tooltip.height;\r\n        let position_left = box_tooltip.left;\r\n\r\n        let cssTooltip = {\r\n            'left': position_left,\r\n            'top': position_top\r\n        }\r\n\r\n        if (tooltip_placement === \"bottom\") {\r\n            cssTooltip = {\r\n                'left': position_left,\r\n                'top': position_bottom\r\n            }\r\n        }\r\n\r\n        $(tooltip_class).css(cssTooltip).animate({ 'opacity': '1', 'margin-left': '10' }, 200);\r\n\r\n    }, function () {\r\n        $(\".ocr-designer__tooltip-content\").animate({ 'opacity': '0', 'margin-left': '0px' }, 200, function () {\r\n            $(this).remove();\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nfunction isJSONString(text) {\r\n    if (typeof text !== \"string\") {\r\n        return false;\r\n    }\r\n    try {\r\n        var json = JSON.parse(text);\r\n        return (typeof json === 'object');\r\n    }\r\n    catch (error) {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction b64toBlob(dataURI) {\r\n    \r\n    var byteString = atob(dataURI.split(',')[1]);\r\n    var ab = new ArrayBuffer(byteString.length);\r\n    var ia = new Uint8Array(ab);\r\n    \r\n    for (var i = 0; i < byteString.length; i++) {\r\n        ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([ab], { type: 'image/jpeg' });\r\n}\r\n\r\nexport const ListButton = ({\r\n    editButtonName,\r\n    removeButtonName,\r\n    onEditAction,\r\n    onRemoveAction,\r\n    editDisable = false,\r\n    removeDisable = false,\r\n  }) => {\r\n    return (\r\n      <div className=\"do-an-list-action\" style={{display:\"grid\",gridTemplateColumns:\"repeat(2,1fr)\"}}>\r\n        <div className=\"do-an-list-action-item\">\r\n          <button\r\n              className=\"mb-btn mb-btn-outline-blue\"\r\n              name={editButtonName}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Sửa\"\r\n              onClick={onEditAction}\r\n              type=\"button\"\r\n              hidden={editDisable}\r\n              disabled={editDisable}\r\n              style={{cursor:\"pointer\"}}\r\n            >\r\n              <FontAwesomeIcon icon={faPencilAlt}></FontAwesomeIcon>\r\n          </button>\r\n        </div>\r\n        <div className=\"do-an-list-action-item\">\r\n          <button\r\n              className=\"mb-btn mb-btn-outline-red\"\r\n              name={removeButtonName}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Xóa\"\r\n              onClick={onRemoveAction}\r\n              type=\"button\"\r\n              disabled={removeDisable}\r\n              style={{cursor:\"pointer\"}}\r\n            >\r\n             <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  export const ListButtonUser = ({\r\n    editButtonName,\r\n    removeButtonName,\r\n    onEditAction,\r\n    onRemoveAction,\r\n    editDisable = false,\r\n    removeDisable = false,\r\n  }) => {\r\n    return (\r\n      <div className=\"do-an-list-action\" style={{display:\"grid\",gridTemplateColumns:\"repeat(1,1fr)\"}}>\r\n        <div className=\"do-an-list-action-item\">\r\n          <button\r\n              className=\"mb-btn mb-btn-outline-blue\"\r\n              name={editButtonName}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Sửa\"\r\n              onClick={onEditAction}\r\n              type=\"button\"\r\n              hidden={editDisable}\r\n              disabled={editDisable}\r\n              style={{cursor:\"pointer\"}}\r\n            >\r\n              <FontAwesomeIcon icon={faPencilAlt}></FontAwesomeIcon>\r\n          </button>\r\n        </div>\r\n        <div className=\"do-an-list-action-item\">\r\n          <button\r\n              className=\"mb-btn mb-btn-outline-red\"\r\n              name={removeButtonName}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Xóa\"\r\n              onClick={onRemoveAction}\r\n              type=\"button\"\r\n              disabled={removeDisable}\r\n              style={{cursor:\"pointer\"}}\r\n            >\r\n             <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\nconst Utils = {\r\n    isNotNullOrUndefined,\r\n    removeFieldEmtyinObject,\r\n    readFileDataAsBuffer,\r\n    b64toBlob,\r\n    showTooltip,\r\n    isJSONString,\r\n    ListButton,\r\n    ListButtonUser\r\n};\r\n\r\nexport default Utils;","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\data-table\\DataTable.js",["371","372","373","374","375","376","377","378"],"import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faAngleDown, faAngleUp} from \"@fortawesome/free-solid-svg-icons\";\r\nimport './DataTable.scss'\r\nimport Pagination from \"../pagination/Pagination\"\r\nimport Utils from '../../../../common/utils';\r\nimport $ from \"jquery\"\r\n\r\nconst defaulPagination =  {\r\n    page: 1,\r\n    size: 5,\r\n    totalPage: 0,\r\n    totalItem: 0,\r\n  }\r\n\r\nconst DataTable = ({tableData, headerData, pagination, sort, onSort, showPagination = true, onPageChange = Function(), onNumberItemChange = Function(), onClickRow = Function(), rowClassName}) => {\r\n    const [isDecrement, setIsDecrement] = useState(false)\r\n    const [dataView, setDataView] = useState([])\r\n    const [paginationTable, setPaginationTable] = useState(defaulPagination)\r\n\r\n    useEffect(() => {\r\n        let newPagination = setPagination();\r\n        setPaginationTable(newPagination)\r\n    },[tableData, pagination])\r\n\r\n    // $(document).ready(function () {\r\n    //     Utils.showTooltip()\r\n    // })\r\n\r\n    useEffect(() => {\r\n        let newDataView = [...tableData]\r\n        if(tableData && tableData.length > paginationTable.size ) {\r\n            newDataView = tableData?.slice((paginationTable.page - 1)* paginationTable.size, paginationTable.size * paginationTable.page);\r\n        }\r\n        setDataView(newDataView)\r\n    },[paginationTable])\r\n\r\n\r\n    const setPagination = () => {\r\n        if(pagination) {\r\n            return pagination\r\n        }\r\n        const numberTotalPage = tableData?.length > 0 ? tableData?.length/paginationTable.size : 0\r\n        const numberTotalPageFixed = Math.floor(numberTotalPage)\r\n        return {\r\n            ...paginationTable,\r\n            totalPage: numberTotalPage > numberTotalPageFixed ? numberTotalPageFixed + 1 : numberTotalPageFixed,\r\n            totalItem: tableData?.length || 0,\r\n        }\r\n    }\r\n\r\n    const handleOnPageChange = (newPage) => {\r\n        setPaginationTable({...paginationTable, page: newPage})\r\n        onPageChange(newPage)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        const numberTotalPage = tableData?.length > 0 ? tableData?.length/newSize : 0\r\n        const numberTotalPageFixed = Math.floor(numberTotalPage)\r\n        const totalPage = numberTotalPage > numberTotalPageFixed ? numberTotalPageFixed + 1 : numberTotalPageFixed\r\n        setPaginationTable({...paginationTable, size: newSize, page: newPage, totalPage: totalPage})\r\n        onNumberItemChange(newSize, newPage)\r\n    }\r\n\r\n    const data = dataView?.map((row, index) => {\r\n        let rowData = [];\r\n        for (let header of headerData) {\r\n            rowData.push({\r\n                key: header.dataIndex,\r\n                value: header.render ? header.render(row[header.dataIndex], row): row[header.dataIndex],\r\n                className: header?.className ? header?.className : \"\",\r\n                titleClassName: header?.titleClassName ? header?.titleClassName : \"\",\r\n                properties: header?.propertiesRow ? header?.propertiesRow(row) : {}\r\n            });\r\n        }\r\n        return (\r\n            <tr className={(rowClassName) ? rowClassName(row) : \"\"} key={index} onClick={(e) => {onClickRow(row, e)}}\r\n            >\r\n                {paginationTable ? <td>{(paginationTable.page - 1) * paginationTable.size + index + 1}</td>:\r\n                              <td>{index + 1}</td>}\r\n                {rowData.map((item, indexItem) => {\r\n                        return (<td key={indexItem} className={item.className} {...item.properties}>\r\n                            {item.value}\r\n                        </td>)\r\n                    }\r\n                )}\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    // Show a spinner while the profile is loading\r\n\r\n    const handleSort = (field, value) => {\r\n        if (sort && field === \"Ngày tạo\") {\r\n            setIsDecrement(value)\r\n\r\n            const elements = document.getElementsByClassName(\"table-container__table__header\");\r\n            for (let element of elements) {\r\n                const title = element.childNodes[0]\r\n                const buttonSort = element.childNodes[1]\r\n                buttonSort.classList.add(\"table-container__hidden\")\r\n                if (title.textContent === field && title.id != \"table-container-no\") {\r\n                    buttonSort.classList.remove(\"table-container__hidden\")\r\n                    if (onSort) {\r\n                        onSort(field, value ? \"desc\" : \"asc\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='table-container'>\r\n            <div className='table-container__content'>\r\n            <table className='table-container__table'>\r\n                <thead>\r\n                <tr>\r\n                    <th style={{width:\"5%\"}}>\r\n                        <div className='table-container__table__header'>\r\n                            <div id=\"table-container-no\" className='table-container__table__header__title'>STT</div>\r\n                            <div className='table-container__table__header__btn-sort table-container__hidden'>\r\n                                <FontAwesomeIcon icon={isDecrement ? faAngleDown : faAngleUp}/>\r\n                            </div>\r\n                        </div>\r\n                    </th>\r\n                    {headerData.map((col, index) => (\r\n                        <th style={{width: col.width}} key={index}>\r\n                            <div className={`table-container__table__header ${col.titleClassName ? col.titleClassName : \"\"}`}\r\n                                 onClick={() => handleSort(col.title, !isDecrement)}>\r\n                                <div className='table-container__table__header__title'>{col.title}</div>\r\n                                {<div className='table-container__table__header__btn-sort table-container__hidden'>\r\n                                    <FontAwesomeIcon icon={isDecrement ? faAngleDown : faAngleUp}/>\r\n                                </div>}\r\n                            </div>\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n                </thead>\r\n                <React.Suspense fallback={<div>Loading...</div>}>\r\n                    <tbody>\r\n                    {(tableData && tableData.length >= 1) && data}\r\n                    </tbody>\r\n                </React.Suspense>\r\n\r\n            </table>\r\n            </div>\r\n            {(!tableData || tableData.length < 1) &&\r\n            <div className='empty'>\r\n                <div className='logo'></div>\r\n                <div className='text'>Không có dữ liệu</div>\r\n            </div>\r\n            }\r\n            {showPagination && <Pagination\r\n                pagination={paginationTable}\r\n                onPageChange={handleOnPageChange}\r\n                onNumberItemChange={handleNumberItemChange}\r\n            ></Pagination>}\r\n        </div>\r\n    )\r\n}\r\n\r\nDataTable.propTypes = {\r\n    tableData: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    headerData: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onPageChange: PropTypes.func,\r\n    onNumberItemChange: PropTypes.func,\r\n    pagination: PropTypes.object,\r\n    sort: PropTypes.bool,\r\n    onSort: PropTypes.func,\r\n    showPagination: PropTypes.bool,\r\n}\r\n\r\nexport default DataTable","F:\\do_an_frontend\\app\\src\\redux\\action\\BooksAction.js",["379","380"],"import { openNotificationCommon, startLoading, stopLoading } from \"../../common/const\";\r\nimport Utils from \"../../common/utils\";\r\nimport booksService from \"../../redux/service/BooksService\";\r\nimport BooksService from \"../../redux/service/BooksService\";\r\nimport { BooksSlice } from \"../../redux/slice/BooksSlice\";\r\n\r\n/**\r\n *[LiST] - Get list Project Action\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\nconst getListBooksAction = async (dispatch, paging) => {\r\n  try {\r\n    // get response from api\r\n    const response = await BooksService.getList(paging);\r\n    if (\r\n      Utils.isNotNullOrUndefined(response) &&\r\n      Utils.isNotNullOrUndefined(response.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data.result) &&\r\n      Utils.isNotNullOrUndefined(response.data.data.pagination)\r\n    ) {\r\n      var listResults = response.data.data.result;\r\n      var pagingResult = response.data.data.pagination;\r\n\r\n      // dispath data to reducer\r\n      dispatch(\r\n        BooksSlice.actions.loadListBooksReducer(\r\n          listResults\r\n        )\r\n      );\r\n\r\n      // dispatch paging\r\n      dispatch(\r\n        BooksSlice.actions.setPagination({\r\n          page: pagingResult.page,\r\n          size: pagingResult.limit,\r\n          totalPage: pagingResult.total_page,\r\n          totalItem: pagingResult.total_records,\r\n        })\r\n      );\r\n    } else {\r\n      // dispath data to reducer - empty\r\n      dispatch(\r\n        BooksSlice.actions.loadListBooksReducer([])\r\n      );\r\n      dispatch(\r\n        BooksSlice.actions.setPagination({\r\n          page: 1,\r\n          size: paging.size,\r\n          totalPage: 0,\r\n          totalItem: 0,\r\n        })\r\n      );\r\n    }\r\n  } catch (err) {\r\n    console.log(\"getListBooksAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n *[LiST] - Load Filter Data\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\nconst updateBooksFilterAction = (dispatch, filter, newFilter) => {\r\n  // dispath data to reducer\r\n  dispatch(\r\n    BooksSlice.actions.loadPaginationFilter(filter)\r\n  );\r\n};\r\n\r\nconst updateBooksPagination = (dispatch, pagination) => {\r\n  dispatch(\r\n    BooksSlice.actions.setPagination(pagination)\r\n  );\r\n}\r\n\r\n/**\r\n * [CREATE] - Create Project data\r\n * @param {*} formData\r\n */\r\nexport const createBooksAction = async (formData, dispatch, filter) => {\r\n  try {\r\n    const response = await BooksService.create(\r\n      formData\r\n    );\r\n\r\n    if (response.data.status === 201) {\r\n      openNotificationCommon(\"success\", \"Thông báo\", \"Thêm mới sách thành công!\")\r\n      getListBooksAction(dispatch, filter)\r\n      return true\r\n    } else {\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Thêm mới sách thất bại!\")\r\n    }\r\n    return response\r\n  } catch (err) {\r\n    console.log(\"createBooksAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n};\r\n\r\nconst getDetailBooksAction = async (dispatch, code) => {\r\n  try {\r\n    const response = await booksService.getDetail(code)\r\n    console.log(response);\r\n    if (\r\n      Utils.isNotNullOrUndefined(response) &&\r\n      Utils.isNotNullOrUndefined(response.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data)\r\n    ) {\r\n      dispatch(\r\n        BooksSlice.actions.saveDetailBooks(\r\n          response.data.data\r\n        )\r\n      )\r\n    }\r\n  } catch (error) {\r\n    console.log(\"BooksAction || getDetail || Cause by \", error)\r\n  };\r\n}\r\n\r\nconst updateBooksAction = async (dispatch,code, formData) => {\r\n  try {\r\n    const response = await booksService.updateBooks(code, formData)\r\n    if (response.data.status === 200){\r\n      openNotificationCommon(\"success\", \"Thông báo\", `Cập nhật thành công!`)\r\n      dispatch(\r\n            BooksSlice.actions.saveDetailBooks(\r\n              response.data.data\r\n            )\r\n      )\r\n      return true\r\n  }else{\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Cập nhật thất bại!`)\r\n  }\r\n    return false;\r\n  } catch (err) {\r\n    console.log(\"UpdateBooks Action - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n}\r\n\r\nconst removeBooks = async (dispatch, code, filter) => {\r\n  try {\r\n      const response = await booksService.remove(code)\r\n      if (response.data.status === 204){\r\n          openNotificationCommon(\"success\", \"Thông báo\", `Xóa sách ${code} thành công!`)\r\n          getListBooksAction(dispatch, filter)\r\n          return true\r\n      }else{\r\n          openNotificationCommon(\"error\", \"Thông báo\", `Xóa sách ${code} thất bại!`)\r\n      }\r\n      return false\r\n  } catch (error) {\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Xóa sách ${code} thất bại!`)\r\n      console.log(\"BooksAction || remove || Cause by \", error)\r\n      return false\r\n  }\r\n}\r\n\r\n\r\nconst BooksAction = {\r\n  getListBooksAction,\r\n  updateBooksFilterAction,\r\n  updateBooksPagination,\r\n  createBooksAction,\r\n  getDetailBooksAction,\r\n  updateBooksAction,\r\n  removeBooks\r\n}\r\n\r\nexport default BooksAction;\r\n","F:\\do_an_frontend\\app\\src\\redux\\action\\BookAction.js",["381","382"],"import { openNotificationCommon, startLoading, stopLoading } from \"../../common/const\";\r\nimport Utils from \"../../common/utils\";\r\nimport BookService from \"../../redux/service/BookService\";\r\nimport { BookSlice } from \"../../redux/slice/BookSlice\";\r\n\r\n/**\r\n *[LiST] - Get list Project Action\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\n const getListBookAction = async (dispatch,code_books ,paging) => {\r\n    try {\r\n      console.log(paging);\r\n      // get response from api\r\n      const response = await BookService.getListBook(paging, code_books);\r\n      if (\r\n        Utils.isNotNullOrUndefined(response) &&\r\n        Utils.isNotNullOrUndefined(response.data) &&\r\n        Utils.isNotNullOrUndefined(response.data.data) &&\r\n        Utils.isNotNullOrUndefined(response.data.data.result) &&\r\n        Utils.isNotNullOrUndefined(response.data.data.pagination)\r\n      ) {\r\n        var listResults = response.data.data.result;\r\n        var pagingResult = response.data.data.pagination;\r\n  \r\n        // dispath data to reducer\r\n        dispatch(\r\n          BookSlice.actions.loadListBookReducer(\r\n            listResults\r\n          )\r\n        );\r\n  \r\n        // dispatch paging\r\n        dispatch(\r\n          BookSlice.actions.setPagination({\r\n            page: pagingResult.page,\r\n            size: pagingResult.limit,\r\n            totalPage: pagingResult.total_page,\r\n            totalItem: pagingResult.total_records,\r\n          })\r\n        );\r\n      } else {\r\n        // dispath data to reducer - empty\r\n        dispatch(\r\n          BookSlice.actions.loadListBookReducer([])\r\n        );\r\n        dispatch(\r\n            BookSlice.actions.setPagination({\r\n            page: 1,\r\n            size: paging.size,\r\n            totalPage: 0,\r\n            totalItem: 0,\r\n          })\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.log(\"getListBookAction - error: \", err);\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  /**\r\n   *[LiST] - Load Filter Data\r\n   *\r\n   * @param {*} dispatch\r\n   * @param {*} params\r\n   */\r\n  const updateBookFilterAction = (dispatch, filter, newFilter) => {\r\n    // dispath data to reducer\r\n    dispatch(\r\n      BookSlice.actions.loadPaginationFilter(filter)\r\n    );\r\n  };\r\n\r\n  const updateBookPagination = (dispatch, pagination) => {\r\n    dispatch(\r\n        BookSlice.actions.setPagination(pagination)\r\n      );\r\n  }\r\n\r\nconst getDetailBookAction = async (dispatch, code_id) => {\r\n  try {\r\n      const response = await BookService.getDetailBook(code_id)\r\n    console.log(response);\r\n      if (\r\n          Utils.isNotNullOrUndefined(response) &&\r\n          Utils.isNotNullOrUndefined(response.data) &&\r\n          Utils.isNotNullOrUndefined(response.data.data) \r\n      ){\r\n          dispatch(\r\n              BookSlice.actions.saveDetailBook(\r\n                  response.data.data\r\n              )\r\n          )\r\n          return response\r\n      }\r\n  } catch (error) {\r\n      console.log(\"BooksAction || getDetail || Cause by \", error)\r\n  }\r\n  \r\n}\r\n\r\n\r\n const BookAction = {\r\n    getListBookAction,\r\n    updateBookFilterAction,\r\n    updateBookPagination,\r\n    getDetailBookAction\r\n } \r\n\r\n export default BookAction;\r\n","F:\\do_an_frontend\\app\\src\\redux\\action\\UserAction.js",[],"F:\\do_an_frontend\\app\\src\\redux\\action\\ManagerAction.js",[],"F:\\do_an_frontend\\app\\src\\redux\\action\\VoucherAction.js",["383","384"],"import { openNotificationCommon, startLoading, stopLoading } from \"../../common/const\";\r\nimport Utils from \"../../common/utils\";\r\nimport VoucherService from \"../service/VoucherService\";\r\nimport { VoucherSlice } from \"../slice/VoucherSlice\";\r\n\r\n/**\r\n *[LiST] - Get list Project Action\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\nconst getListVoucherAction = async (dispatch, paging) => {\r\n  try {\r\n    // get response from api\r\n    const response = await VoucherService.getList(paging);\r\n    if (\r\n      Utils.isNotNullOrUndefined(response) &&\r\n      Utils.isNotNullOrUndefined(response.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data.result) &&\r\n      Utils.isNotNullOrUndefined(response.data.data.pagination)\r\n    ) {\r\n      var listResults = response.data.data.result;\r\n      var pagingResult = response.data.data.pagination;\r\n\r\n      // dispath data to reducer\r\n      dispatch(\r\n        VoucherSlice.actions.loadListVoucherReducer(\r\n          listResults\r\n        )\r\n      );\r\n      console.log(listResults);\r\n\r\n      // dispatch paging\r\n      dispatch(\r\n        VoucherSlice.actions.setPagination({\r\n          page: pagingResult.page,\r\n          size: pagingResult.limit,\r\n          totalPage: pagingResult.total_page,\r\n          totalItem: pagingResult.total_records,\r\n        })\r\n      );\r\n    } else {\r\n      // dispath data to reducer - empty\r\n      dispatch(\r\n        VoucherSlice.actions.loadListVoucherReducer([])\r\n      );\r\n      dispatch(\r\n        VoucherSlice.actions.setPagination({\r\n          page: 1,\r\n          size: paging.size,\r\n          totalPage: 0,\r\n          totalItem: 0,\r\n        })\r\n      );\r\n    }\r\n  } catch (err) {\r\n    console.log(\"getListVoucherAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n *[LiST] - Load Filter Data\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\nconst updateVoucherFilterAction = (dispatch, filter, newFilter) => {\r\n  // dispath data to reducer\r\n  dispatch(\r\n    VoucherSlice.actions.loadPaginationFilter(filter)\r\n  );\r\n};\r\n\r\nconst updateVoucherPagination = (dispatch, pagination) => {\r\n  dispatch(\r\n    VoucherSlice.actions.setPagination(pagination)\r\n  );\r\n}\r\n\r\nconst createVoucherAction = async (formData, dispatch, filter) => {\r\n  try {\r\n    const response = await VoucherService.create(\r\n      formData\r\n    );\r\n\r\n    if (response.data.status === 201) {\r\n      openNotificationCommon(\"success\", \"Thông báo\", \"Thêm mới phiếu mượn thành công!\")\r\n      getListVoucherAction(dispatch, filter)\r\n      return true\r\n    } else {\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Thêm mới phiếu mượn thất bại!\")\r\n    }\r\n    return response\r\n  } catch (err) {\r\n    console.log(\"createVoucherAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n}\r\n\r\nconst getDetailVoucherAction = async (dispatch, voucher_id) => {\r\n  try {\r\n    const response = await VoucherService.getDetail(voucher_id)\r\n    console.log(response);\r\n    if (\r\n      Utils.isNotNullOrUndefined(response) &&\r\n      Utils.isNotNullOrUndefined(response.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data)\r\n    ) {\r\n      dispatch(\r\n        VoucherSlice.actions.saveDetailVoucher(\r\n          response.data.data\r\n        )\r\n      )\r\n      return response.data.data\r\n    }\r\n  } catch (error) {\r\n    console.log(\"BooksAction || getDetail || Cause by \", error)\r\n  };\r\n}\r\n\r\nconst updateVoucherAction = async (dispatch, voucher_id, formData) => {\r\n  try {\r\n    const response = await VoucherService.updateVoucher(voucher_id, formData)\r\n    if (response.data.status === 200){\r\n      openNotificationCommon(\"success\", \"Thông báo\", `Cập nhật thành công!`)\r\n      dispatch(\r\n            VoucherSlice.actions.saveDetailVoucher(\r\n              response.data.data\r\n            )\r\n      )\r\n      return true\r\n  }else{\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Cập nhật thất bại!`)\r\n  }\r\n    return false;\r\n  } catch (err) {\r\n    console.log(\"UpdateBooks Action - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n}\r\n\r\nconst updateStatusVoucher = async (dispatch, voucher_id, status_update, filter) => {\r\n  try {\r\n    const response = await VoucherService.updateStatus(voucher_id, status_update)\r\n    if (response.data.status === 200) {\r\n      openNotificationCommon(\"success\", \"Thông báo\", `Cập nhật thành công!`)\r\n      dispatch(\r\n        VoucherSlice.actions.saveDetailVoucher(\r\n          response.data.data\r\n        )\r\n      )\r\n      VoucherAction.getListVoucherAction(dispatch, filter)\r\n      return true\r\n    } else {\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Cập nhật thất bại!`)\r\n    }\r\n    return false\r\n  } catch (error) {\r\n    console.log(\"BooksAction || getDetail || Cause by \", error)\r\n  };\r\n}\r\n\r\nconst VoucherAction = {\r\n  getListVoucherAction,\r\n  updateVoucherFilterAction,\r\n  updateVoucherPagination,\r\n  createVoucherAction,\r\n  getDetailVoucherAction,\r\n  updateStatusVoucher,\r\n  updateVoucherAction\r\n}\r\n\r\nexport default VoucherAction;","F:\\do_an_frontend\\app\\src\\components\\books\\components\\create_books\\CreateBooks.js",["385","386","387"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './CreateBooks.scss';\r\nimport image2 from '../../../../share/image/123.jpg';\r\nimport ConstAPI from '../../../../common/const';\r\nimport constImage from \"../../../../common/constImage\";\r\nimport BooksAction from \"../../../../redux/action/BooksAction\";\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport GroupsAction from \"../../../../redux/action/GroupsAction\";\r\n\r\n\r\nconst CreateBooks = ({ onCloseModal }) => {\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(image2)\r\n    const filter = useSelector(state => state.booksReducer.paginationFilter)\r\n    const listGroups = useSelector(state => state.groupsReducer.listGroups)\r\n\r\n    const [formCreate, setFormCreate] = useState(\r\n        {\r\n            name: \"\",\r\n            description: \"\",\r\n            title: \"\",\r\n            author: \"\",\r\n            name_university: \"\",\r\n            publishing_year: \"\",\r\n            origin: \"\",\r\n            group_code: \"GROUPS_1673458766\",\r\n            amount: 0,\r\n            avatar: null\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        GroupsAction.getListGroupsAction(dispatch)\r\n    }, [])\r\n\r\n\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState([])\r\n\r\n    useEffect(() => {\r\n        let listGrgoupsDropDown = listGroups.map((item) => {\r\n            return {\r\n                title: item?.group_name,\r\n                value: item?.group_code\r\n            }\r\n        })\r\n        setListDefaultDropDown([...listGrgoupsDropDown])\r\n    }, [listGroups])\r\n\r\n    const checkFileTypeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { type } = files[0];\r\n            return (constImage.LIST_FILE_TYPE_AVATAR.findIndex(item => `IMAGE/${item}` === type.toLocaleUpperCase()) > -1)\r\n        }\r\n        return true\r\n    }\r\n    const checkFileSizeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { size } = files[0];\r\n            return (size / 1024 / 1024 <= 5)\r\n        }\r\n        return true\r\n    }\r\n\r\n    const onImageChange = async (event) => {\r\n        if (event.target.files && event.target.files[0] && event.target.files[0]['type'].split('/')[0] === 'image') {\r\n            console.log(event.target.files);\r\n\r\n            setImage(URL.createObjectURL(event.target.files[0]));\r\n            handleChangeInput(\"avatar\", event.target.files[0])\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        console.log(value, field);\r\n        const newFormData = { ...formCreate, [field]: value };\r\n        setFormCreate(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        BooksAction.createBooksAction(formCreate, dispatch, filter)\r\n        onCloseModal()\r\n    }\r\n\r\n    console.log(formCreate);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <form id=\"do-an-form-create-books\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n            <div className=\"do-an-form-create-books__body\">\r\n                {/* <div className=\"do-an-form-create-books__body__title\">\r\n                    Thông tin:\r\n                </div> */}\r\n\r\n                <div className=\"do-an-form-create-books__body__content\">\r\n                    <div className=\"do-an-form-create-books__body__content__info\">\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Tên Sách: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Thể loại: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <DropDown className=\"do-an-dropdown-create\"\r\n                                    listItem={listDefaultDropDown}\r\n                                    selected={formCreate.group_code || listDefaultDropDown[0]?.value}\r\n                                    name=\"group_code\"\r\n                                    onSelected={handleChangeInput}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Mô tả:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"description\",\r\n                                        {\r\n                                            onChange: (e) => handleChangeInput(\"description\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Tiêu đề: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"title\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"title\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.title?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tiêu đề sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Tác giả: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"author\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"author\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.author?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tác giả sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Thuộc đại học: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name_university\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"name_university\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name_university?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học sở hữu sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Năm xuất bản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"publishing_year\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"publishing_year\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.publishing_year?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Năm xuất bản sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Nhà xuất bản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"origin\",\r\n                                        {\r\n                                            required:true,\r\n                                            onChange: (e) => handleChangeInput(\"origin\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.author?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Nhà xuất bản sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Nhập số lượng: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                type={\"number\"}\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"amount\",\r\n                                        {\r\n                                            onChange: (e) => handleChangeInput(\"amount\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an-form-create-books__body__content__avatar\">\r\n                        <div className=\"do-an-form-create-books__body__group-input__input-add-image\">\r\n                            <div>\r\n                                <input type=\"file\" accept=\"image/*\" className={`ocr-designer-input-add-image ${errors.image ? 'is-invalid' : ''}`}\r\n                                    {...register(\"avatar\",\r\n                                        {\r\n                                            onChange: (e) => onImageChange(e),\r\n                                            required: true,\r\n                                            validate: {\r\n                                                checkFileType: files => checkFileTypeAvatar(files) || `Ảnh đại diện chỉ nhận các file ${constImage.LIST_FILE_TYPE_AVATAR.join(\", \")}`,\r\n                                                checkFileSize: files => checkFileSizeAvatar(files) || \"Ảnh đại diện không vượt quá 5MB\"\r\n                                            }\r\n                                        }\r\n                                    )} />\r\n                                {errors.avatar?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Ảnh sách không được trống!</div>}\r\n                                {errors.avatar?.message &&\r\n                                    <div className=\"input-value-error\">{errors.avatar?.message}</div>}\r\n                            </div>\r\n                            <img className=\"do-an-preview-image\" src={image}></img>\r\n                            <div className=\"do-an-title-avatar\">\r\n                                Ảnh đại diện\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button id=\"do-an-form-create-books-button\" type=\"submit\" hidden={true}></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateBooks;","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown-v2\\DropDown.js",["388","389"],"import React, { useState } from 'react'\r\nimport './DropDown.scss'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst DropDown = ({ className, name, selected, listItem, onSelected, placeholder, placement = \"bottom\", disable = false , indexTable}) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    return (\r\n        <div className={`${className ? className : \"\"} dropdown-container ${disable === true ? \"dropdown-container__no-drop\" : \"\"}`}>\r\n            <div\r\n                className={`dropdown-container__overlay ${isOpen ? \"dropdown-container__overlay__active\" : \"\"}`}\r\n                onClick={() => setIsOpen(!isOpen)}\r\n            ></div>\r\n            <div className={`dropdown-container__header`}\r\n                onClick={() => {\r\n                    if (disable === false ) {\r\n                        setIsOpen(!isOpen)\r\n                    } else {\r\n                        setIsOpen(false)\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <div className='dropdown-container__header__text'>\r\n                    {(selected !== \"undefine\" && selected !== \"\") ? listItem?.find(item => item.value === selected)?.title : placeholder}\r\n                </div>\r\n                <div\r\n                    className='dropdown-container__header__icon'\r\n                >\r\n                    <FontAwesomeIcon icon={(placement == \"top\") ? faAngleUp : faAngleDown} />\r\n                </div>\r\n            </div>\r\n            <div className={`ecm-base__scroll dropdown-container__select-box ${isOpen ? \"open\" : \"\"} ${(placement == \"top\") ? \"dropdown-container__select-box__top\" : \"\"}`}>\r\n                {\r\n                    listItem.map((item, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className='dropdown-container__select-box__item'\r\n                            onClick={() => {\r\n                                onSelected(name, item.value, indexTable)\r\n                                setIsOpen(!isOpen)\r\n                            }}\r\n                        >{item.title}</div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nDropDown.propTypes = {\r\n    className: PropTypes.string,\r\n    name: PropTypes.string,\r\n    selected: PropTypes.string,\r\n    listItem: PropTypes.arrayOf(PropTypes.any),\r\n    onSelected: PropTypes.func,\r\n    placement: PropTypes.string\r\n}\r\n\r\nexport default DropDown","F:\\do_an_frontend\\app\\src\\redux\\action\\GroupsAction.js",["390","391"],"import { openNotificationCommon, startLoading, stopLoading } from \"../../common/const\";\r\nimport Utils from \"../../common/utils\";\r\nimport GroupsService from \"../../redux/service/GroupsService\";\r\nimport { GroupsSlice } from \"../../redux/slice/GroupsSlice\";\r\n\r\n/**\r\n *[LiST] - Get list Project Action\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\n const getListGroupsAction = async (dispatch) => {\r\n    try {\r\n      // get response from api\r\n      const response = await GroupsService.getList();\r\n      console.log(response);\r\n      if (\r\n        Utils.isNotNullOrUndefined(response) &&\r\n        Utils.isNotNullOrUndefined(response.data) &&\r\n        Utils.isNotNullOrUndefined(response.data.data) &&\r\n        Utils.isNotNullOrUndefined(response.data.data.result)\r\n      ) {\r\n        var listResults = response.data.data.result;\r\n    \r\n        // dispath data to reducer\r\n        dispatch(\r\n          GroupsSlice.actions.loadListGroupsReducer(\r\n            listResults\r\n          )\r\n        );\r\n  \r\n      } else {\r\n        // dispath data to reducer - empty\r\n        dispatch(\r\n            GroupsSlice.actions.loadListGroupsReducer([])\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.log(\"getListGroupsAction - error: \", err);\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n      return null;\r\n    }\r\n  };\r\n\r\n\r\n const GroupsAction = {\r\n    getListGroupsAction\r\n } \r\n\r\n export default GroupsAction;\r\n","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\modal\\Modal.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\LoginService.js",["392"],"import { axiosClient, httpAccess, JSON_CONTENT_TYPE } from \"../../common/http-commons\";\r\nimport Utils from \"../../common/utils\";\r\nimport CommonService from \"./commonService\";\r\n\r\nconst login = async (dataLogin) => {\r\n    var loginResponse = null;\r\n    try {\r\n        const loginPath = process.env.REACT_APP_LOGIN_MANAGER_PATH;\r\n        loginResponse = await httpAccess(JSON_CONTENT_TYPE).post(\r\n            loginPath, JSON.stringify(dataLogin));\r\n        return loginResponse;\r\n    } catch (error) {\r\n        console.log(\"[Login]- Fail\", error);\r\n        return CommonService.errorServiceHandle(error);\r\n    }\r\n\r\n}\r\n\r\nconst changePassword = async (dataPassChange) => {\r\n    try {\r\n        const dataPassword = {\r\n            oldpass: dataPassChange.oldpass,\r\n            newpass: dataPassChange.newpass\r\n        }\r\n\r\n        return axiosClient.put(process.env.REACT_APP_CHANGE_PASSWORD_PATH, dataPassword);\r\n    } catch (error) {\r\n        console.log(\"[Manager - ChangePassword]\", error);\r\n    }\r\n}\r\n\r\n\r\nconst LoginService = {\r\n    login,\r\n    changePassword\r\n}\r\n\r\nexport default LoginService;","F:\\do_an_frontend\\app\\src\\components\\user\\components\\create_user\\CreateUser.js",["393","394","395","396"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './CreateUser.scss';\r\nimport image2 from '../../../../share/image/123.jpg';\r\nimport ConstAPI from '../../../../common/const';\r\nimport constImage from \"../../../../common/constImage\";\r\nimport UserAction from \"../../../../redux/action/UserAction\";\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\n\r\n\r\nconst CreateUser = ({ onCloseModal }) => {\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(image2)\r\n    const filter = useSelector(state => state.userReducer.paginationFilter)\r\n\r\n    const [formCreate, setFormCreate] = useState(\r\n        {\r\n            name: \"\",\r\n            code: \"\",\r\n            date_of_birth: \"\",\r\n            gender: \"\",\r\n            course: \"\",\r\n            university: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n            user_name: \"\",\r\n            password:\"\",\r\n            avatar: null\r\n        }\r\n    )\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState([\r\n        {\r\n            title: \"Nam\",\r\n            value:\"MALE\"\r\n        },\r\n        {\r\n            title:\"Nữ\",\r\n            value:\"FEMALE\"\r\n        }\r\n    ])\r\n\r\n\r\n    const checkFileTypeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { type } = files[0];\r\n            return (constImage.LIST_FILE_TYPE_AVATAR.findIndex(item => `IMAGE/${item}` === type.toLocaleUpperCase()) > -1)\r\n        }\r\n        return true\r\n    }\r\n    const checkFileSizeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { size } = files[0];\r\n            return (size / 1024 / 1024 <= 5)\r\n        }\r\n        return true\r\n    }\r\n\r\n    const onImageChange = async (event) => {\r\n        if (event.target.files && event.target.files[0] && event.target.files[0]['type'].split('/')[0] === 'image') {\r\n            console.log(event.target.files);\r\n\r\n            setImage(URL.createObjectURL(event.target.files[0]));\r\n            handleChangeInput(\"avatar\", event.target.files[0])\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        const newFormData = { ...formCreate, [field]: value };\r\n        setFormCreate(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        UserAction.createUserAction(formCreate, dispatch, filter)\r\n        onCloseModal()\r\n    }\r\n\r\n    console.log(formCreate);\r\n\r\n    return (\r\n        <form id=\"do-an-form-create-user\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n            <div className=\"do-an-form-create-user__body\">\r\n                {/* <div className=\"do-an-form-create-user__body__title\">\r\n                    Thông tin:\r\n                </div> */}\r\n\r\n                <div className=\"do-an-form-create-user__body__content\">\r\n                    <div className=\"do-an-form-create-user__body__content__info\">\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Tên bạn đọc: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên bạn đọc không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Giới tính: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <DropDown className=\"do-an-dropdown-create\"\r\n                                    listItem={listDefaultDropDown}\r\n                                    selected={formCreate.gender || listDefaultDropDown[0]?.value}\r\n                                    name=\"gender\"\r\n                                    onSelected={handleChangeInput}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Ngày sinh:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"date_of_birth\",\r\n                                        {\r\n                                            onChange: (e) => handleChangeInput(\"date_of_birth\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Sinh viên khóa: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"course\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"course\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.title?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Niên khóa không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Đại học: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"university\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"university\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.author?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Số điện thoại: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"phone\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"phone\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name_university?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Số điện thoại không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Email: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"email\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"email\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.publishing_year?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên email không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Tên tài khoản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"user_name\",\r\n                                        {\r\n                                            required:true,\r\n                                            onChange: (e) => handleChangeInput(\"user_name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.author?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên tài khoản không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Mật khẩu: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"password\",\r\n                                        {\r\n                                            onChange: (e) => handleChangeInput(\"password\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an-form-create-user__body__content__avatar\">\r\n                        <div className=\"do-an-form-create-user__body__group-input__input-add-image\">\r\n                            <div>\r\n                                <input type=\"file\" accept=\"image/*\" className={`ocr-designer-input-add-image ${errors.image ? 'is-invalid' : ''}`}\r\n                                    {...register(\"avatar\",\r\n                                        {\r\n                                            onChange: (e) => onImageChange(e),\r\n                                            validate: {\r\n                                                checkFileType: files => checkFileTypeAvatar(files) || `Ảnh đại diện chỉ nhận các file ${constImage.LIST_FILE_TYPE_AVATAR.join(\", \")}`,\r\n                                                checkFileSize: files => checkFileSizeAvatar(files) || \"Ảnh đại diện không vượt quá 5MB\"\r\n                                            }\r\n                                        }\r\n                                    )} />\r\n                                {errors.avatar?.message &&\r\n                                    <div className=\"input-value-error\">{errors.avatar?.message}</div>}\r\n                            </div>\r\n                            <img className=\"do-an-preview-image\" src={image}></img>\r\n                            <div className=\"do-an-title-avatar\">\r\n                                Ảnh đại diện\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button id=\"do-an-form-create-user-button\" type=\"submit\" hidden={true}></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateUser;","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\confirm\\Confirm.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\button\\Button.js",[],"F:\\do_an_frontend\\app\\src\\redux\\action\\LoginAction.js",[],"F:\\do_an_frontend\\app\\src\\components\\manager\\get-detail-manager\\DetailManager.js",["397","398","399","400","401","402","403"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport \"./DetailManager.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faCircleInfo, faFileLines } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ConstAPI from '../../../common/const';\r\nimport ManagerAction from '../../../redux/action/ManagerAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst DetailManager = ({ detailManager }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const managerDetail = useSelector(state => state.managerReducer.detailManager)\r\n\r\n    useEffect(() => {\r\n        ManagerAction.getDetailManagerAction(dispatch, detailManager)\r\n    }, [detailManager])\r\n\r\n    return (\r\n        <div className='do-an__view-manager-container'>\r\n            <div className='do-an__view-manager-container__info'>\r\n                <div className='do-an__view-manager-container__info__group-info'>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Tên quản lý:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Mã người dùng:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.code}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Ngày sinh:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.date_of_birth}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Giới tính:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.gender}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Khóa:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.course}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='do-an__view-manager-container__info__group-info'>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Tên đại học:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.university}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Số điện thoại:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.phone}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Email:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.email}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Tài khoản:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.user_name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Ngày tạo:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.created_time}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='do-an__view-manager-container__info__avatar'>\r\n                    <img className=\"do-an-preview-image\" src={`${ConstAPI.BASE_HOST_API}${managerDetail?.avatar}`}></img>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DetailManager;","F:\\do_an_frontend\\app\\src\\components\\manager\\create-manager\\CreateManager.js",["404","405","406","407"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './CreateManager.scss';\r\nimport image2 from '../../../share/image/123.jpg';\r\nimport ConstAPI from '../../../common/const';\r\nimport constImage from \"../../../common/constImage\";\r\nimport ManagerAction from \"../../../redux/action/ManagerAction\";\r\nimport DropDown from '../../../share/ecm-base/components/dropdown-v2/DropDown';\r\n\r\n\r\nconst CreateManager = ({ onCloseModal }) => {\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(image2)\r\n    const filter = useSelector(state => state.managerReducer.paginationFilter)\r\n\r\n    const [formCreate, setFormCreate] = useState(\r\n        {\r\n            name: \"\",\r\n            date_of_birth: \"\",\r\n            gender: \"MALE\",\r\n            course: \"\",\r\n            university: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n            user_name: \"\",\r\n            password:\"\",\r\n            role:\"MANAGER\",\r\n            avatar: null\r\n        }\r\n    )\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState([\r\n        {\r\n            title: \"Nam\",\r\n            value:\"MALE\"\r\n        },\r\n        {\r\n            title:\"Nữ\",\r\n            value:\"FEMALE\"\r\n        }\r\n    ])\r\n\r\n\r\n    const checkFileTypeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { type } = files[0];\r\n            return (constImage.LIST_FILE_TYPE_AVATAR.findIndex(item => `IMAGE/${item}` === type.toLocaleUpperCase()) > -1)\r\n        }\r\n        return true\r\n    }\r\n    const checkFileSizeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { size } = files[0];\r\n            return (size / 1024 / 1024 <= 5)\r\n        }\r\n        return true\r\n    }\r\n\r\n    const onImageChange = async (event) => {\r\n        if (event.target.files && event.target.files[0] && event.target.files[0]['type'].split('/')[0] === 'image') {\r\n            console.log(event.target.files);\r\n\r\n            setImage(URL.createObjectURL(event.target.files[0]));\r\n            handleChangeInput(\"avatar\", event.target.files[0])\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        const newFormData = { ...formCreate, [field]: value };\r\n        setFormCreate(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        ManagerAction.createManagerAction(formCreate, dispatch, filter)\r\n        onCloseModal()\r\n    }\r\n\r\n\r\n    return (\r\n        <form id=\"do-an-form-create-manager\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n            <div className=\"do-an-form-create-manager__body\">\r\n                {/* <div className=\"do-an-form-create-manager__body__title\">\r\n                    Thông tin:\r\n                </div> */}\r\n\r\n                <div className=\"do-an-form-create-manager__body__content\">\r\n                    <div className=\"do-an-form-create-manager__body__content__info\">\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Tên bạn đọc: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên bạn đọc không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Giới tính: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <DropDown className=\"do-an-dropdown-create\"\r\n                                    listItem={listDefaultDropDown}\r\n                                    selected={formCreate.gender || listDefaultDropDown[0]?.value}\r\n                                    name=\"gender\"\r\n                                    onSelected={handleChangeInput}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Ngày sinh:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"date_of_birth\",\r\n                                        {\r\n                                            onChange: (e) => handleChangeInput(\"date_of_birth\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Sinh viên khóa: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"course\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"course\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.title?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Niên khóa không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Đại học: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"university\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"university\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.author?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Số điện thoại: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"phone\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"phone\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name_university?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Số điện thoại không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Email: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"email\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"email\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.publishing_year?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên email không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Tên tài khoản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"user_name\",\r\n                                        {\r\n                                            required:true,\r\n                                            onChange: (e) => handleChangeInput(\"user_name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.author?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên tài khoản không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Mật khẩu: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"password\",\r\n                                        {\r\n                                            onChange: (e) => handleChangeInput(\"password\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an-form-create-manager__body__content__avatar\">\r\n                        <div className=\"do-an-form-create-manager__body__group-input__input-add-image\">\r\n                            <div>\r\n                                <input type=\"file\" accept=\"image/*\" className={`ocr-designer-input-add-image ${errors.image ? 'is-invalid' : ''}`}\r\n                                    {...register(\"avatar\",\r\n                                        {\r\n                                            onChange: (e) => onImageChange(e),\r\n                                            validate: {\r\n                                                checkFileType: files => checkFileTypeAvatar(files) || `Ảnh đại diện chỉ nhận các file ${constImage.LIST_FILE_TYPE_AVATAR.join(\", \")}`,\r\n                                                checkFileSize: files => checkFileSizeAvatar(files) || \"Ảnh đại diện không vượt quá 5MB\"\r\n                                            }\r\n                                        }\r\n                                    )} />\r\n                                {errors.avatar?.message &&\r\n                                    <div className=\"input-value-error\">{errors.avatar?.message}</div>}\r\n                            </div>\r\n                            <img className=\"do-an-preview-image\" src={image}></img>\r\n                            <div className=\"do-an-title-avatar\">\r\n                                Ảnh đại diện\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button id=\"do-an-form-create-manager-button\" type=\"submit\" hidden={true}></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateManager;","F:\\do_an_frontend\\app\\src\\components\\books\\components\\update_books\\UpdateBooks.js",["408","409","410","411"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './UpdateBooks.scss';\r\nimport image2 from '../../../../share/image/123.jpg';\r\nimport ConstAPI from '../../../../common/const';\r\nimport constImage from \"../../../../common/constImage\";\r\nimport BooksAction from \"../../../../redux/action/BooksAction\";\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport GroupsAction from \"../../../../redux/action/GroupsAction\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst UpdateBooks = ({ onCloseModal }) => {\r\n\r\n    const { register,setValue ,formState: { errors },handleSubmit } = useForm({ mode: \"onChange\" });\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(image2)\r\n    const filter = useSelector(state => state.booksReducer.paginationFilter)\r\n    const listGroups = useSelector(state => state.groupsReducer.listGroups)\r\n    const booksDetail = useSelector(state => state.booksReducer.detailBooks)\r\n\r\n    const {code} = useParams()\r\n\r\n    useEffect(() => {\r\n        BooksAction.getDetailBooksAction(dispatch, code)\r\n        GroupsAction.getListGroupsAction(dispatch)\r\n    }, [])\r\n\r\n    const [formUpdateBooks, setFormUpdateBooks] = useState({})\r\n\r\n    useEffect(() => {\r\n        setValue(\"name\" , booksDetail?.name)\r\n        setValue(\"description\", booksDetail?.description)\r\n        setValue(\"title\", booksDetail?.title)\r\n        setValue(\"author\", booksDetail?.author)\r\n        setValue(\"name_university\", booksDetail?.name_university)\r\n        setValue(\"publishing_year\", booksDetail?.publishing_year)\r\n        setValue(\"origin\", booksDetail?.origin)\r\n        setValue(\"group_code\", booksDetail?.group_code)\r\n        setImage(`${ConstAPI.BASE_HOST_API}${booksDetail?.avatar}`)\r\n        setFormUpdateBooks({\r\n            \"name\": booksDetail?.name,\r\n            \"description\": booksDetail?.description,\r\n            \"title\": booksDetail?.title,\r\n            \"author\": booksDetail?.author,\r\n            \"name_university\": booksDetail?.name_university,\r\n            \"publishing_year\": booksDetail?.publishing_year,\r\n            \"origin\": booksDetail?.origin,\r\n            \"group_code\": booksDetail?.group_code,\r\n        })\r\n    }, [booksDetail])\r\n\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState([])\r\n\r\n    useEffect(() => {\r\n        let listGrgoupsDropDown = listGroups.map((item) => {\r\n            return {\r\n                title: item?.group_name,\r\n                value: item?.group_code\r\n            }\r\n        })\r\n        setListDefaultDropDown([...listGrgoupsDropDown])\r\n    }, [listGroups])\r\n\r\n    const checkFileTypeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { type } = files[0];\r\n            return (constImage.LIST_FILE_TYPE_AVATAR.findIndex(item => `IMAGE/${item}` === type.toLocaleUpperCase()) > -1)\r\n        }\r\n        return true\r\n    }\r\n    const checkFileSizeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { size } = files[0];\r\n            return (size / 1024 / 1024 <= 5)\r\n        }\r\n        return true\r\n    }\r\n\r\n    const onImageChange = async (event) => {\r\n        if (event.target.files && event.target.files[0] && event.target.files[0]['type'].split('/')[0] === 'image') {\r\n            console.log(event.target.files);\r\n\r\n            setImage(URL.createObjectURL(event.target.files[0]));\r\n            handleChangeInput(\"avatar\", event.target.files[0])\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        const newFormData = { ...formUpdateBooks, [field]: value };\r\n        setFormUpdateBooks(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        BooksAction.updateBooksAction(dispatch, code, formUpdateBooks)\r\n        onCloseModal()\r\n    }\r\n\r\n    return (\r\n        <form id=\"do-an-form-update-books\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n            <div className=\"do-an-form-update-books__body\">\r\n                {/* <div className=\"do-an-form-update-books__body__title\">\r\n                    Thông tin:\r\n                </div> */}\r\n\r\n                <div className=\"do-an-form-update-books__body__content\">\r\n                    <div className=\"do-an-form-update-books__body__content__info\">\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Tên Sách: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Thể loại: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <DropDown className=\"do-an-dropdown-update\"\r\n                                    listItem={listDefaultDropDown}\r\n                                    selected={formUpdateBooks.group_code || listDefaultDropDown[0]?.value}\r\n                                    name=\"group_code\"\r\n                                    onSelected={handleChangeInput}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Mô tả:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"description\",\r\n                                        {\r\n                                            onChange: (e) => handleChangeInput(\"description\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Tiêu đề: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"title\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"title\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.title?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tiêu đề sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Tác giả: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"author\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"author\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.author?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tác giả sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Thuộc đại học: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name_university\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"name_university\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name_university?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học sở hữu sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Năm xuất bản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"publishing_year\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"publishing_year\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.publishing_year?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Năm xuất bản sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Nhà xuất bản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"origin\",\r\n                                        {\r\n                                            required:true,\r\n                                            onChange: (e) => handleChangeInput(\"origin\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.author?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Nhà xuất bản sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an-form-update-books__body__content__avatar\">\r\n                        <div className=\"do-an-form-update-books__body__group-input__input-add-image\">\r\n                            <div>\r\n                                <input type=\"file\" accept=\"image/*\" className={`ocr-designer-input-add-image ${errors.image ? 'is-invalid' : ''}`}\r\n                                    {...register(\"avatar\",\r\n                                        {\r\n                                            onChange: (e) => onImageChange(e),\r\n                                            validate: {\r\n                                                checkFileType: files => checkFileTypeAvatar(files) || `Ảnh đại diện chỉ nhận các file ${constImage.LIST_FILE_TYPE_AVATAR.join(\", \")}`,\r\n                                                checkFileSize: files => checkFileSizeAvatar(files) || \"Ảnh đại diện không vượt quá 5MB\"\r\n                                            }\r\n                                        }\r\n                                    )} />\r\n                                {/* {errors.avatar?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Ảnh sách không được trống!</div>} */}\r\n                                {errors.avatar?.message &&\r\n                                    <div className=\"input-value-error\">{errors.avatar?.message}</div>}\r\n                            </div>\r\n                            <img className=\"do-an-preview-image\" src={image}></img>\r\n                            <div className=\"do-an-title-avatar\">\r\n                                Ảnh đại diện\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button id=\"do-an-form-update-books-button\" type=\"submit\" hidden={true}></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UpdateBooks;","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\user_voucher\\UserPageVoucher.js",["412","413","414","415","416","417","418","419","420"],"import React, { useEffect, useState } from 'react';\r\nimport './UserPageVoucher.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faFilter, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataTable from \"../../../../share/ecm-base/components/data-table/DataTable\";\r\nimport UserAction from \"../../../../redux/action/UserAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useSearchParams, Link } from 'react-router-dom';\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport ConstAPI from '../../../../common/const';\r\n\r\nconst UserPageVoucher = ({ prefixPath, handleSelectUser }) => {\r\n\r\n\r\n    const columnUser = [\r\n        {\r\n            title: \"Mã người dùng\",\r\n            dataIndex: \"code\",\r\n            render: (text) => {\r\n                return <span \r\n                onClick={() => handleSelectUser(text)}\r\n                style={{textDecoration:\"underline\", color:\"#141ed2\", cursor:\"pointer\"}}>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên người dùng\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ngày sinh\",\r\n            dataIndex: \"date_of_birth\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Giới tính\",\r\n            dataIndex: \"gender\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Khóa\",\r\n            dataIndex: \"course\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            dataIndex: \"created_time\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n    ]\r\n\r\n    let listOrder = [\r\n        {\r\n            title: \"Tăng dần\",\r\n            value: 1\r\n        },\r\n        {\r\n            title: \"Giảm dần\",\r\n            value: -1\r\n        },\r\n    ]\r\n\r\n    let listOrderBy = [\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            value: \"created_time\"\r\n        },\r\n        {\r\n            title: \"Thời gian sửa\",\r\n            value: \"modified_time\"\r\n        },\r\n        {\r\n            title: \"Tên\",\r\n            value: \"name\"\r\n        },\r\n    ]\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listUser = useSelector(state => state.userReducer.listUser)\r\n    const filter = useSelector(state => state.userReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.userReducer.pagination)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let urlParams = { ...initPagingFilter }\r\n        if (searchParams.get('name')) {\r\n            urlParams[\"name\"] = searchParams.get('name')\r\n        }\r\n        if (searchParams.get('code')) {\r\n            urlParams[\"code\"] = searchParams.get('code')\r\n        }\r\n        if (searchParams.get('page')) {\r\n            urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        }\r\n        if (searchParams.get('size')) {\r\n            urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        }\r\n        if (searchParams.get('order_by')) {\r\n            urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        }\r\n        if (searchParams.get('order')) {\r\n            urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        }\r\n\r\n        setSearchParams(urlParams)\r\n        UserAction.updateUserFilterAction(dispatch, urlParams)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            page: urlParams.page,\r\n            size: urlParams.size\r\n        })\r\n        UserAction.getListUserAction(dispatch, urlParams)\r\n    }, [])\r\n\r\n\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter ,[field]: value }\r\n        console.log(newSearchFilter);\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        UserAction.getListUserAction(dispatch, filter)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        console.log(newSize);\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        UserAction.getListUserAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        UserAction.getListUserAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"do-an__user\">\r\n            <div className=\"do-an__user__image-cover\">\r\n                {/* <img className=\"image-cover\" src={imageCover}></img> */}\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh sách người dùng</h3>\r\n            </div>\r\n            <div className=\"do-an__user__group-search\">\r\n                <div className=\"do-an__user__group-search__filter\">\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Tên người dùng:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <input className=\"do-an__user__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"name\", event.target.value)}\r\n                                value={filter?.name || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Mã người dùng:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <input className=\"do-an__user__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"code\", event.target.value)}\r\n                                value={filter?.code || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Sắp xếp theo:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__user__group-search__item__input\"\r\n                                listItem={listOrderBy}\r\n                                selected={filter?.order_by || \"created_time\"}\r\n                                name=\"order_by\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Thứ tự:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__user__group-search__item__input\"\r\n                                listItem={listOrder}\r\n                                selected={filter?.order || -1}\r\n                                name=\"order\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__user__group-search__button-search\">\r\n                    <button className=\"button-search\" onClick={handleSearch}>Tìm kiếm</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"do-an__user__group-table\">\r\n                <div className=\"do-an__user__group-table__table-data\">\r\n                    <DataTable headerData={columnUser}\r\n                        tableData={listUser}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        pagination={pagination}\r\n                        onPageChange={handleNumberPagehange}\r\n                    >\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPageVoucher;","F:\\do_an_frontend\\app\\src\\redux\\service\\VoucherService.js",["421"],"import { data } from 'jquery';\r\nimport {axiosClient} from '../../common/http-commons';\r\nimport Utils from '../../common/utils';\r\n\r\nconst VoucherService = {\r\n    getList : (paging) => {\r\n        try {\r\n            // Get data with default\r\n            if (!Utils.isNotNullOrUndefined(paging)) {\r\n                return axiosClient.get(\r\n                    process.env.REACT_APP_GET_LIST_AND_CREATE_VOUCHER\r\n                );\r\n                // Get data with parameters\r\n            } else {\r\n                return axiosClient.get(\r\n                    process.env.REACT_APP_GET_LIST_AND_CREATE_VOUCHER,\r\n                    { params: paging }\r\n                );\r\n            }\r\n        } catch (error) {\r\n            console.log(\"[Voucher - Get list]\", error);\r\n        }\r\n    },\r\n\r\n    create: (formDataVoucher) => {\r\n        try {\r\n            return axiosClient.post(process.env.REACT_APP_GET_LIST_AND_CREATE_VOUCHER, formDataVoucher)\r\n                // { headers: { \"Content-Type\": \"multipart/form-data\" } });\r\n        } catch (error) {\r\n            console.log(\"[BookVoucherService - create]\", error);\r\n        }\r\n    },\r\n\r\n    getDetail: (voucher_id) => {\r\n        try {\r\n            // Get data with default\r\n                return axiosClient.get(\r\n                    process.env.REACT_APP_RUD_VOUCHER.replace('{voucher_id}', voucher_id)\r\n                );\r\n        } catch (error) {\r\n            console.log(\"[BookVoucherService - Get detail]\", error);\r\n        }\r\n    },\r\n\r\n    updateVoucher: (voucher_id, formDataVoucher) => {\r\n        try {\r\n            // Get data with default\r\n                return axiosClient.put(\r\n                    process.env.REACT_APP_RUD_VOUCHER.replace('{voucher_id}', voucher_id), formDataVoucher\r\n                );\r\n        } catch (error) {\r\n            console.log(\"[VoucherService - Update voucher]\", error);\r\n        }\r\n    },\r\n\r\n    // ------------------------------------------------------------------------------------------------------------\r\n    remove: (voucher_id) => {\r\n        try {\r\n            return axiosClient.delete(\r\n                process.env.REACT_APP_RUD_VOUCHER.replace(\"{voucher_id}\", voucher_id)\r\n            )\r\n        } catch (error) {\r\n            console.log(\"VoucherService || Delete || Cause by \", error)\r\n        }\r\n    },\r\n    // ------------------------------------------------------------------------------------------------------------\r\n    updateStatus: (voucher_id, status_update) => {\r\n        console.log(status_update);\r\n        const formUpdate = {\r\n            \"status_update\" : status_update\r\n        }\r\n        try {\r\n            if (!Utils.isNotNullOrUndefined(status_update)) {\r\n                return  axiosClient.put(\r\n                    process.env.REACT_APP_UPDATE_STATUS_VOUCHER.replace(\"{voucher_id}\", voucher_id)\r\n                )\r\n                // Get data with parameters\r\n            } else {\r\n            return axiosClient.put(\r\n                process.env.REACT_APP_UPDATE_STATUS_VOUCHER.replace(\"{voucher_id}\", voucher_id),\r\n                formUpdate\r\n            )\r\n            }\r\n        } catch (error) {\r\n            console.log(\"VoucherService || Update status || Cause by \", error)\r\n        }\r\n    },\r\n}\r\n\r\nexport default VoucherService;","F:\\do_an_frontend\\app\\src\\redux\\service\\BooksService.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\GroupsService.js",["422"],"import {axiosClient} from '../../common/http-commons';\r\nimport Utils from '../../common/utils';\r\n\r\nconst groupsService = {\r\n    getList : () => {\r\n        try {\r\n            // Get data with default\r\n                return axiosClient.get(\r\n                    process.env.REACT_APP_GET_ALL_AND_CREATE_GROUP\r\n                );\r\n        } catch (error) {\r\n            console.log(\"[Groups - Get list]\", error);\r\n        }\r\n    }\r\n}\r\n\r\nexport default groupsService;","F:\\do_an_frontend\\app\\src\\redux\\service\\UserService.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\commonService.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\ManagerService.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\pagination\\Pagination.js",["423","424"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Pagination.scss'\r\nimport Toasts from '../toasts/Toasts';\r\nimport DropDown from '../dropdown/DropDown';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Pagination = ({ pagination, onPageChange, onNumberItemChange, placement =\"top\" }) => {\r\n\r\n    const refContainer = useRef(null)\r\n    if (!pagination) {\r\n        pagination = {\r\n            page: 0,\r\n            size: 0,\r\n            totalPage: 0,\r\n            totalItem: 0,\r\n        }\r\n    }\r\n    const { page, size, totalPage, totalItem } = pagination;\r\n\r\n    const numberOfPages = []\r\n    for (let i = 1; i <= totalPage; i++) {\r\n        numberOfPages.push(i)\r\n    }\r\n\r\n    const [valueGo, setValueGo] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(page)\r\n    const [arrOfCurrentPage, setArrOfCurrentPage] = useState([])\r\n    const [toastList, setToastList] = useState([])\r\n    const [numberShow, setNumberShow] = useState(size)\r\n    const [showTotal, setShowTotal] = useState(true)\r\n    let toastProperties = null\r\n\r\n    useEffect(() => {\r\n        const widthPagination = refContainer.current.clientWidth\r\n        if(widthPagination && widthPagination <= 600){\r\n            setShowTotal(false)\r\n        }else {\r\n            setShowTotal(true)\r\n        }\r\n      }, [refContainer])\r\n\r\n    useEffect(() => {\r\n        setNumberShow(size)\r\n    }, [size])\r\n\r\n    const showToast = (type, title, message) => {\r\n        toastProperties = {\r\n            id: toastList.length + 1,\r\n            type: type,\r\n            title: title,\r\n            message: message\r\n        }\r\n        setToastList([...toastList, toastProperties])\r\n    }\r\n\r\n    const listNumberShow = [\r\n       5, 10, 20, 50\r\n    ]\r\n\r\n    const leftDots = '... '\r\n    const midDots = '...'\r\n    const rightDots = ' ...'\r\n\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(pagination.page)\r\n        let tempNumberOfPage = [...arrOfCurrentPage]\r\n\r\n        if (numberOfPages.length <= 4 && !showTotal) {\r\n            tempNumberOfPage = numberOfPages\r\n        }else\r\n        if (numberOfPages.length <= 8 && showTotal) {\r\n            tempNumberOfPage = numberOfPages\r\n        }\r\n        else if (currentPage >= 1 && currentPage <= 4 && showTotal) {\r\n            tempNumberOfPage = [1, 2, 3, 4 , 5, midDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage >= 1 && currentPage <= 3 && !showTotal) {\r\n            tempNumberOfPage = [1, 2, 3, midDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage > 4 && currentPage < numberOfPages.length - 2 && showTotal) {\r\n            const sliceLeft = numberOfPages.slice(currentPage - 2, currentPage)\r\n            const sliceRight = numberOfPages.slice(currentPage, currentPage + 1)\r\n            tempNumberOfPage = [1, leftDots, ...sliceLeft, ...sliceRight, rightDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage >= 4 && currentPage < numberOfPages.length - 2 && !showTotal) {\r\n            const sliceLeft = numberOfPages.slice(currentPage - 2, currentPage)\r\n            tempNumberOfPage = [1, leftDots, ...sliceLeft, rightDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage > numberOfPages.length - 3 && showTotal) {\r\n            const slice = numberOfPages.slice(numberOfPages.length - 5, numberOfPages.length)\r\n            tempNumberOfPage = [1, leftDots, ...slice]\r\n        }\r\n        else if (currentPage > numberOfPages.length - 3 && !showTotal) {\r\n            const slice = numberOfPages.slice(numberOfPages.length - 3, numberOfPages.length)\r\n            tempNumberOfPage = [1, leftDots, ...slice]\r\n        }\r\n        else if (currentPage === midDots) {\r\n            setCurrentPage(arrOfCurrentPage[arrOfCurrentPage.length - 3] + 1)\r\n        }\r\n        else if (currentPage === rightDots) {\r\n            setCurrentPage(arrOfCurrentPage[3] + 2)\r\n        }\r\n        else if (currentPage === leftDots) {\r\n            setCurrentPage(arrOfCurrentPage[3] - 2)\r\n        }\r\n        setArrOfCurrentPage(tempNumberOfPage)\r\n    }, [currentPage, pagination])\r\n\r\n    function handlePageChange(newPage) {\r\n        setCurrentPage(newPage)\r\n        if (newPage === midDots) {\r\n            newPage = arrOfCurrentPage[arrOfCurrentPage.length - 3] + 1\r\n        }\r\n        else if (newPage === rightDots) {\r\n            newPage = arrOfCurrentPage[3] + 2\r\n        }\r\n        else if (newPage === leftDots) {\r\n            newPage = arrOfCurrentPage[3] - 2\r\n        }\r\n        onPageChange(newPage)\r\n    }\r\n\r\n    function handleGo(event) {\r\n        if (event.key == 'Enter') {\r\n            let regex = /^[0-9]+$/\r\n            let value = event.target.value\r\n            if (value.match(regex)) {\r\n                if (value <= 0) {\r\n                    showToast(\"warning\", \"Cảnh báo\", \"Số trang phải lơn hơn 0!\")\r\n                } else if (value <= numberOfPages.length) {\r\n                    handlePageChange(Number(value))\r\n                }\r\n                else {\r\n                    showToast(\"warning\", \"Cảnh báo\", \"Số trang này không tồn tại!\")\r\n                }\r\n            }\r\n            else {\r\n                showToast(\"warning\", \"Cảnh báo\", \"Xin vui lòng nhập số!\")\r\n            }\r\n            setValueGo('')\r\n        }\r\n    }\r\n\r\n    function handleChangeInput(event) {\r\n        setValueGo(event.target.value)\r\n    }\r\n\r\n    function handleChangeNumberShow(_name, value) {\r\n        const numberTotalPage = totalItem/value\r\n        const numberTotalPageFixed = Math.floor(numberTotalPage) || 0\r\n        const newTotalPage = numberTotalPage > numberTotalPageFixed ? numberTotalPageFixed + 1 : numberTotalPageFixed\r\n        const newPage = page <= newTotalPage ? page: newTotalPage\r\n        setNumberShow(value)\r\n        onNumberItemChange(value, newPage || 1)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='paginition-container' ref={refContainer}>\r\n            <div className={`info ${showTotal ? null: \"paginition-container__info-view-small\"}`}>\r\n                {showTotal && <div className='info__item'>\r\n                    Hiển thị {totalItem > 0 ? (page - 1) * size + 1 : 0}-\r\n                    {((page - 1) * size + size) < totalItem ? ((page - 1) * size + size) : totalItem} của {totalItem}\r\n                </div>\r\n                }\r\n                <DropDown\r\n                    selected={numberShow}\r\n                    listItem={listNumberShow}\r\n                    onSelected={handleChangeNumberShow}\r\n                    placement={placement}\r\n\r\n                    className=\"info__drop-down info__item\"\r\n                ></DropDown>\r\n            </div>\r\n            <div className={`handle-box ${showTotal ? null: \"paginition-container__handle-box-view-small\"}`}>\r\n                <div className='buttons'>\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={currentPage === 1 || totalPage ===0? true : false}\r\n                        className='button btn-pre-page'\r\n                        onClick={() => handlePageChange(currentPage - 1)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faAngleLeft} />\r\n                    </button>\r\n                    {arrOfCurrentPage.map((pageItem, index) => {\r\n                        return (\r\n                            <button\r\n                                type=\"button\"\r\n                                key={index}\r\n                                className={'button' + ((pageItem === currentPage) ? ' button-active' : '')}\r\n                                onClick={() => handlePageChange(pageItem)}\r\n                            >{pageItem}\r\n                            </button>\r\n                        )\r\n                    })}\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={(currentPage === totalPage || totalPage === 0) ? true : false}\r\n                        className='button btn-next-page'\r\n                        onClick={() => handlePageChange(currentPage + 1)}>\r\n                        <FontAwesomeIcon icon={faAngleRight} />\r\n                    </button>\r\n                </div>\r\n                <div className='jump'>\r\n                    <span>Đến:</span>\r\n                    <input disabled={totalPage === 0} onKeyDown={handleGo} type=\"number\" min=\"1\" value={valueGo} onChange={handleChangeInput}></input>\r\n                </div>\r\n            </div>\r\n            <Toasts toastList={toastList} setList={setToastList}></Toasts>\r\n        </div>\r\n    )\r\n}\r\n\r\nPagination.propTypes = {\r\n    pagination: PropTypes.object.isRequired,\r\n    onPageChange: PropTypes.func,\r\n    onNumberItemChange: PropTypes.func,\r\n    placement: PropTypes.string\r\n}\r\n\r\nPagination.defaultProps = {\r\n    onPageChange: null,\r\n}\r\n\r\nexport default Pagination","F:\\do_an_frontend\\app\\src\\common\\http-commons.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\BookService.js",[],"F:\\do_an_frontend\\app\\src\\common\\constImage.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown\\DropDown.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\sidebar\\SideBar.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\menu\\Menu.js",[],"F:\\do_an_frontend\\app\\src\\layout\\main-router\\MainRouter.js",[],{"ruleId":"425","replacedBy":"426"},{"ruleId":"427","replacedBy":"428"},{"ruleId":"429","severity":1,"message":"430","line":1,"column":27,"nodeType":"431","messageId":"432","endLine":1,"endColumn":36},{"ruleId":"429","severity":1,"message":"433","line":9,"column":8,"nodeType":"431","messageId":"432","endLine":9,"endColumn":19},{"ruleId":"429","severity":1,"message":"434","line":3,"column":10,"nodeType":"431","messageId":"432","endLine":3,"endColumn":25},{"ruleId":"429","severity":1,"message":"435","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":26},{"ruleId":"429","severity":1,"message":"436","line":4,"column":28,"nodeType":"431","messageId":"432","endLine":4,"endColumn":36},{"ruleId":"429","severity":1,"message":"437","line":4,"column":38,"nodeType":"431","messageId":"432","endLine":4,"endColumn":46},{"ruleId":"429","severity":1,"message":"438","line":8,"column":10,"nodeType":"431","messageId":"432","endLine":8,"endColumn":19},{"ruleId":"439","severity":1,"message":"440","line":50,"column":40,"nodeType":"441","endLine":50,"endColumn":112},{"ruleId":"442","severity":1,"message":"443","line":168,"column":8,"nodeType":"444","endLine":168,"endColumn":10,"suggestions":"445"},{"ruleId":"442","severity":1,"message":"446","line":172,"column":8,"nodeType":"444","endLine":172,"endColumn":10,"suggestions":"447"},{"ruleId":"442","severity":1,"message":"448","line":192,"column":8,"nodeType":"444","endLine":192,"endColumn":20,"suggestions":"449"},{"ruleId":"429","severity":1,"message":"450","line":9,"column":8,"nodeType":"431","messageId":"432","endLine":9,"endColumn":21},{"ruleId":"442","severity":1,"message":"451","line":32,"column":6,"nodeType":"444","endLine":32,"endColumn":8,"suggestions":"452"},{"ruleId":"429","severity":1,"message":"434","line":3,"column":10,"nodeType":"431","messageId":"432","endLine":3,"endColumn":25},{"ruleId":"429","severity":1,"message":"435","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":26},{"ruleId":"429","severity":1,"message":"436","line":4,"column":28,"nodeType":"431","messageId":"432","endLine":4,"endColumn":36},{"ruleId":"429","severity":1,"message":"437","line":4,"column":38,"nodeType":"431","messageId":"432","endLine":4,"endColumn":46},{"ruleId":"429","severity":1,"message":"438","line":8,"column":10,"nodeType":"431","messageId":"432","endLine":8,"endColumn":19},{"ruleId":"429","severity":1,"message":"453","line":12,"column":10,"nodeType":"431","messageId":"432","endLine":12,"endColumn":20},{"ruleId":"439","severity":1,"message":"440","line":73,"column":40,"nodeType":"441","endLine":73,"endColumn":112},{"ruleId":"442","severity":1,"message":"443","line":164,"column":8,"nodeType":"444","endLine":164,"endColumn":10,"suggestions":"454"},{"ruleId":"429","severity":1,"message":"455","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":15},{"ruleId":"429","severity":1,"message":"456","line":4,"column":17,"nodeType":"431","messageId":"432","endLine":4,"endColumn":23},{"ruleId":"429","severity":1,"message":"438","line":7,"column":10,"nodeType":"431","messageId":"432","endLine":7,"endColumn":19},{"ruleId":"429","severity":1,"message":"434","line":3,"column":10,"nodeType":"431","messageId":"432","endLine":3,"endColumn":25},{"ruleId":"429","severity":1,"message":"435","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":26},{"ruleId":"429","severity":1,"message":"436","line":4,"column":28,"nodeType":"431","messageId":"432","endLine":4,"endColumn":36},{"ruleId":"429","severity":1,"message":"437","line":4,"column":38,"nodeType":"431","messageId":"432","endLine":4,"endColumn":46},{"ruleId":"429","severity":1,"message":"438","line":8,"column":10,"nodeType":"431","messageId":"432","endLine":8,"endColumn":19},{"ruleId":"429","severity":1,"message":"457","line":8,"column":38,"nodeType":"431","messageId":"432","endLine":8,"endColumn":42},{"ruleId":"429","severity":1,"message":"453","line":12,"column":10,"nodeType":"431","messageId":"432","endLine":12,"endColumn":20},{"ruleId":"439","severity":1,"message":"440","line":74,"column":40,"nodeType":"441","endLine":74,"endColumn":112},{"ruleId":"442","severity":1,"message":"443","line":165,"column":8,"nodeType":"444","endLine":165,"endColumn":10,"suggestions":"458"},{"ruleId":"429","severity":1,"message":"453","line":10,"column":10,"nodeType":"431","messageId":"432","endLine":10,"endColumn":20},{"ruleId":"439","severity":1,"message":"440","line":44,"column":40,"nodeType":"441","endLine":44,"endColumn":112},{"ruleId":"429","severity":1,"message":"459","line":80,"column":12,"nodeType":"431","messageId":"432","endLine":80,"endColumn":26},{"ruleId":"429","severity":1,"message":"460","line":80,"column":28,"nodeType":"431","messageId":"432","endLine":80,"endColumn":45},{"ruleId":"442","severity":1,"message":"461","line":105,"column":8,"nodeType":"444","endLine":105,"endColumn":30,"suggestions":"462"},{"ruleId":"429","severity":1,"message":"463","line":176,"column":11,"nodeType":"431","messageId":"432","endLine":176,"endColumn":23},{"ruleId":"429","severity":1,"message":"464","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":22},{"ruleId":"429","severity":1,"message":"465","line":29,"column":33,"nodeType":"431","messageId":"432","endLine":29,"endColumn":55},{"ruleId":"429","severity":1,"message":"466","line":47,"column":46,"nodeType":"431","messageId":"432","endLine":47,"endColumn":52},{"ruleId":"442","severity":1,"message":"467","line":56,"column":8,"nodeType":"444","endLine":56,"endColumn":14,"suggestions":"468"},{"ruleId":"442","severity":1,"message":"461","line":75,"column":8,"nodeType":"444","endLine":75,"endColumn":23,"suggestions":"469"},{"ruleId":"439","severity":1,"message":"440","line":116,"column":21,"nodeType":"441","endLine":116,"endColumn":149},{"ruleId":"429","severity":1,"message":"470","line":2,"column":10,"nodeType":"431","messageId":"432","endLine":2,"endColumn":21},{"ruleId":"429","severity":1,"message":"438","line":3,"column":16,"nodeType":"431","messageId":"432","endLine":3,"endColumn":25},{"ruleId":"442","severity":1,"message":"471","line":55,"column":8,"nodeType":"444","endLine":55,"endColumn":16,"suggestions":"472"},{"ruleId":"429","severity":1,"message":"473","line":85,"column":11,"nodeType":"431","messageId":"432","endLine":85,"endColumn":23},{"ruleId":"429","severity":1,"message":"434","line":3,"column":10,"nodeType":"431","messageId":"432","endLine":3,"endColumn":25},{"ruleId":"429","severity":1,"message":"435","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":26},{"ruleId":"429","severity":1,"message":"436","line":4,"column":28,"nodeType":"431","messageId":"432","endLine":4,"endColumn":36},{"ruleId":"429","severity":1,"message":"437","line":4,"column":38,"nodeType":"431","messageId":"432","endLine":4,"endColumn":46},{"ruleId":"429","severity":1,"message":"438","line":8,"column":10,"nodeType":"431","messageId":"432","endLine":8,"endColumn":19},{"ruleId":"429","severity":1,"message":"474","line":12,"column":8,"nodeType":"431","messageId":"432","endLine":12,"endColumn":14},{"ruleId":"429","severity":1,"message":"475","line":166,"column":12,"nodeType":"431","messageId":"432","endLine":166,"endColumn":38},{"ruleId":"429","severity":1,"message":"476","line":166,"column":40,"nodeType":"431","messageId":"432","endLine":166,"endColumn":69},{"ruleId":"442","severity":1,"message":"443","line":205,"column":8,"nodeType":"444","endLine":205,"endColumn":10,"suggestions":"477"},{"ruleId":"429","severity":1,"message":"478","line":1,"column":28,"nodeType":"431","messageId":"432","endLine":1,"endColumn":36},{"ruleId":"429","severity":1,"message":"479","line":5,"column":23,"nodeType":"431","messageId":"432","endLine":5,"endColumn":35},{"ruleId":"429","severity":1,"message":"480","line":5,"column":37,"nodeType":"431","messageId":"432","endLine":5,"endColumn":48},{"ruleId":"429","severity":1,"message":"481","line":6,"column":8,"nodeType":"431","messageId":"432","endLine":6,"endColumn":13},{"ruleId":"429","severity":1,"message":"482","line":8,"column":21,"nodeType":"431","messageId":"432","endLine":8,"endColumn":36},{"ruleId":"429","severity":1,"message":"457","line":8,"column":38,"nodeType":"431","messageId":"432","endLine":8,"endColumn":42},{"ruleId":"429","severity":1,"message":"483","line":12,"column":8,"nodeType":"431","messageId":"432","endLine":12,"endColumn":13},{"ruleId":"429","severity":1,"message":"456","line":13,"column":8,"nodeType":"431","messageId":"432","endLine":13,"endColumn":14},{"ruleId":"429","severity":1,"message":"484","line":14,"column":8,"nodeType":"431","messageId":"432","endLine":14,"endColumn":16},{"ruleId":"442","severity":1,"message":"485","line":77,"column":8,"nodeType":"444","endLine":77,"endColumn":10,"suggestions":"486"},{"ruleId":"439","severity":1,"message":"440","line":186,"column":21,"nodeType":"441","endLine":186,"endColumn":112},{"ruleId":"429","severity":1,"message":"481","line":6,"column":8,"nodeType":"431","messageId":"432","endLine":6,"endColumn":13},{"ruleId":"429","severity":1,"message":"482","line":7,"column":21,"nodeType":"431","messageId":"432","endLine":7,"endColumn":36},{"ruleId":"429","severity":1,"message":"457","line":7,"column":38,"nodeType":"431","messageId":"432","endLine":7,"endColumn":42},{"ruleId":"429","severity":1,"message":"484","line":9,"column":8,"nodeType":"431","messageId":"432","endLine":9,"endColumn":16},{"ruleId":"439","severity":1,"message":"440","line":54,"column":40,"nodeType":"441","endLine":54,"endColumn":112},{"ruleId":"442","severity":1,"message":"446","line":73,"column":8,"nodeType":"444","endLine":73,"endColumn":20,"suggestions":"487"},{"ruleId":"439","severity":1,"message":"440","line":188,"column":21,"nodeType":"441","endLine":188,"endColumn":123},{"ruleId":"429","severity":1,"message":"453","line":10,"column":10,"nodeType":"431","messageId":"432","endLine":10,"endColumn":20},{"ruleId":"439","severity":1,"message":"440","line":43,"column":40,"nodeType":"441","endLine":43,"endColumn":112},{"ruleId":"442","severity":1,"message":"488","line":98,"column":8,"nodeType":"444","endLine":98,"endColumn":20,"suggestions":"489"},{"ruleId":"442","severity":1,"message":"490","line":133,"column":8,"nodeType":"444","endLine":133,"endColumn":23,"suggestions":"491"},{"ruleId":"429","severity":1,"message":"492","line":136,"column":9,"nodeType":"431","messageId":"432","endLine":136,"endColumn":25},{"ruleId":"429","severity":1,"message":"479","line":5,"column":23,"nodeType":"431","messageId":"432","endLine":5,"endColumn":35},{"ruleId":"429","severity":1,"message":"480","line":5,"column":37,"nodeType":"431","messageId":"432","endLine":5,"endColumn":48},{"ruleId":"429","severity":1,"message":"481","line":6,"column":8,"nodeType":"431","messageId":"432","endLine":6,"endColumn":13},{"ruleId":"429","severity":1,"message":"482","line":8,"column":21,"nodeType":"431","messageId":"432","endLine":8,"endColumn":36},{"ruleId":"429","severity":1,"message":"457","line":8,"column":38,"nodeType":"431","messageId":"432","endLine":8,"endColumn":42},{"ruleId":"439","severity":1,"message":"440","line":57,"column":40,"nodeType":"441","endLine":57,"endColumn":112},{"ruleId":"442","severity":1,"message":"485","line":97,"column":8,"nodeType":"444","endLine":97,"endColumn":10,"suggestions":"493"},{"ruleId":"429","severity":1,"message":"494","line":110,"column":11,"nodeType":"431","messageId":"432","endLine":110,"endColumn":17},{"ruleId":"442","severity":1,"message":"495","line":115,"column":8,"nodeType":"444","endLine":115,"endColumn":10,"suggestions":"496"},{"ruleId":"439","severity":1,"message":"440","line":266,"column":21,"nodeType":"441","endLine":266,"endColumn":113},{"ruleId":"442","severity":1,"message":"497","line":11,"column":8,"nodeType":"444","endLine":11,"endColumn":10,"suggestions":"498"},{"ruleId":"429","severity":1,"message":"435","line":3,"column":10,"nodeType":"431","messageId":"432","endLine":3,"endColumn":26},{"ruleId":"429","severity":1,"message":"499","line":7,"column":8,"nodeType":"431","messageId":"432","endLine":7,"endColumn":13},{"ruleId":"429","severity":1,"message":"500","line":8,"column":8,"nodeType":"431","messageId":"432","endLine":8,"endColumn":9},{"ruleId":"501","severity":1,"message":"502","line":17,"column":108,"nodeType":"503","messageId":"504","endLine":17,"endColumn":118},{"ruleId":"501","severity":1,"message":"502","line":17,"column":141,"nodeType":"503","messageId":"504","endLine":17,"endColumn":151},{"ruleId":"501","severity":1,"message":"502","line":17,"column":166,"nodeType":"503","messageId":"504","endLine":17,"endColumn":176},{"ruleId":"442","severity":1,"message":"505","line":25,"column":7,"nodeType":"444","endLine":25,"endColumn":30,"suggestions":"506"},{"ruleId":"442","severity":1,"message":"507","line":37,"column":7,"nodeType":"444","endLine":37,"endColumn":24,"suggestions":"508"},{"ruleId":"509","severity":1,"message":"510","line":103,"column":61,"nodeType":"511","messageId":"512","endLine":103,"endColumn":63},{"ruleId":"429","severity":1,"message":"513","line":1,"column":34,"nodeType":"431","messageId":"432","endLine":1,"endColumn":46},{"ruleId":"429","severity":1,"message":"514","line":1,"column":48,"nodeType":"431","messageId":"432","endLine":1,"endColumn":59},{"ruleId":"429","severity":1,"message":"513","line":1,"column":34,"nodeType":"431","messageId":"432","endLine":1,"endColumn":46},{"ruleId":"429","severity":1,"message":"514","line":1,"column":48,"nodeType":"431","messageId":"432","endLine":1,"endColumn":59},{"ruleId":"429","severity":1,"message":"513","line":1,"column":34,"nodeType":"431","messageId":"432","endLine":1,"endColumn":46},{"ruleId":"429","severity":1,"message":"514","line":1,"column":48,"nodeType":"431","messageId":"432","endLine":1,"endColumn":59},{"ruleId":"429","severity":1,"message":"515","line":7,"column":8,"nodeType":"431","messageId":"432","endLine":7,"endColumn":16},{"ruleId":"442","severity":1,"message":"446","line":39,"column":8,"nodeType":"444","endLine":39,"endColumn":10,"suggestions":"516"},{"ruleId":"439","severity":1,"message":"440","line":282,"column":29,"nodeType":"441","endLine":282,"endColumn":78},{"ruleId":"509","severity":1,"message":"517","line":31,"column":55,"nodeType":"511","messageId":"512","endLine":31,"endColumn":57},{"ruleId":"509","severity":1,"message":"517","line":34,"column":115,"nodeType":"511","messageId":"512","endLine":34,"endColumn":117},{"ruleId":"429","severity":1,"message":"513","line":1,"column":34,"nodeType":"431","messageId":"432","endLine":1,"endColumn":46},{"ruleId":"429","severity":1,"message":"514","line":1,"column":48,"nodeType":"431","messageId":"432","endLine":1,"endColumn":59},{"ruleId":"429","severity":1,"message":"499","line":2,"column":8,"nodeType":"431","messageId":"432","endLine":2,"endColumn":13},{"ruleId":"429","severity":1,"message":"430","line":1,"column":17,"nodeType":"431","messageId":"432","endLine":1,"endColumn":26},{"ruleId":"429","severity":1,"message":"515","line":7,"column":8,"nodeType":"431","messageId":"432","endLine":7,"endColumn":16},{"ruleId":"429","severity":1,"message":"465","line":36,"column":33,"nodeType":"431","messageId":"432","endLine":36,"endColumn":55},{"ruleId":"439","severity":1,"message":"440","line":265,"column":29,"nodeType":"441","endLine":265,"endColumn":78},{"ruleId":"429","severity":1,"message":"478","line":1,"column":28,"nodeType":"431","messageId":"432","endLine":1,"endColumn":36},{"ruleId":"429","severity":1,"message":"434","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":25},{"ruleId":"429","severity":1,"message":"518","line":5,"column":10,"nodeType":"431","messageId":"432","endLine":5,"endColumn":21},{"ruleId":"429","severity":1,"message":"479","line":5,"column":23,"nodeType":"431","messageId":"432","endLine":5,"endColumn":35},{"ruleId":"429","severity":1,"message":"480","line":5,"column":37,"nodeType":"431","messageId":"432","endLine":5,"endColumn":48},{"ruleId":"442","severity":1,"message":"446","line":18,"column":8,"nodeType":"444","endLine":18,"endColumn":23,"suggestions":"519"},{"ruleId":"439","severity":1,"message":"440","line":110,"column":21,"nodeType":"441","endLine":110,"endColumn":116},{"ruleId":"429","severity":1,"message":"430","line":1,"column":17,"nodeType":"431","messageId":"432","endLine":1,"endColumn":26},{"ruleId":"429","severity":1,"message":"515","line":7,"column":8,"nodeType":"431","messageId":"432","endLine":7,"endColumn":16},{"ruleId":"429","severity":1,"message":"465","line":36,"column":33,"nodeType":"431","messageId":"432","endLine":36,"endColumn":55},{"ruleId":"439","severity":1,"message":"440","line":264,"column":29,"nodeType":"441","endLine":264,"endColumn":78},{"ruleId":"429","severity":1,"message":"494","line":20,"column":11,"nodeType":"431","messageId":"432","endLine":20,"endColumn":17},{"ruleId":"442","severity":1,"message":"485","line":29,"column":8,"nodeType":"444","endLine":29,"endColumn":10,"suggestions":"520"},{"ruleId":"442","severity":1,"message":"461","line":53,"column":8,"nodeType":"444","endLine":53,"endColumn":21,"suggestions":"521"},{"ruleId":"439","severity":1,"message":"440","line":270,"column":29,"nodeType":"441","endLine":270,"endColumn":78},{"ruleId":"429","severity":1,"message":"478","line":1,"column":28,"nodeType":"431","messageId":"432","endLine":1,"endColumn":36},{"ruleId":"429","severity":1,"message":"434","line":3,"column":10,"nodeType":"431","messageId":"432","endLine":3,"endColumn":25},{"ruleId":"429","severity":1,"message":"435","line":4,"column":10,"nodeType":"431","messageId":"432","endLine":4,"endColumn":26},{"ruleId":"429","severity":1,"message":"436","line":4,"column":28,"nodeType":"431","messageId":"432","endLine":4,"endColumn":36},{"ruleId":"429","severity":1,"message":"437","line":4,"column":38,"nodeType":"431","messageId":"432","endLine":4,"endColumn":46},{"ruleId":"429","severity":1,"message":"438","line":8,"column":10,"nodeType":"431","messageId":"432","endLine":8,"endColumn":19},{"ruleId":"429","severity":1,"message":"457","line":8,"column":38,"nodeType":"431","messageId":"432","endLine":8,"endColumn":42},{"ruleId":"439","severity":1,"message":"440","line":70,"column":40,"nodeType":"441","endLine":70,"endColumn":112},{"ruleId":"442","severity":1,"message":"443","line":145,"column":8,"nodeType":"444","endLine":145,"endColumn":10,"suggestions":"522"},{"ruleId":"429","severity":1,"message":"523","line":1,"column":10,"nodeType":"431","messageId":"432","endLine":1,"endColumn":14},{"ruleId":"429","severity":1,"message":"499","line":2,"column":8,"nodeType":"431","messageId":"432","endLine":2,"endColumn":13},{"ruleId":"442","severity":1,"message":"524","line":110,"column":8,"nodeType":"444","endLine":110,"endColumn":33,"suggestions":"525"},{"ruleId":"509","severity":1,"message":"517","line":127,"column":23,"nodeType":"511","messageId":"512","endLine":127,"endColumn":25},"no-native-reassign",["526"],"no-negated-in-lhs",["527"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'MenuProject' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faFileCirclePlus' is defined but never used.","'faFilter' is defined but never used.","'faSearch' is defined but never used.","'useParams' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'initPagingFilter', 'pagination', 'searchParams', and 'setSearchParams'. Either include them or remove the dependency array.","ArrayExpression",["528"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["529"],"React Hook useEffect has a missing dependency: 'listDefault'. Either include it or remove the dependency array.",["530"],"'ManagerAction' is defined but never used.","React Hook useEffect has a missing dependency: 'checkRole'. Either include it or remove the dependency array.",["531"],"'ListButton' is defined but never used.",["532"],"'Input' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.",["533"],"'listBookCreate' is assigned a value but never used.","'setListBookCreate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["534"],"'managerToken' is assigned a value but never used.","'faCircleUser' is defined but never used.","'setListDefaultDropDown' is assigned a value but never used.","'errors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ditpatch'. Either include it or remove the dependency array.",["535"],["536"],"'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'prefixPath'. Either include it or remove the dependency array. If 'setMenus' needs the current value of 'prefixPath', you can also switch to useReducer instead of useState and read 'prefixPath' in the reducer.",["537"],"'beautifyName' is assigned a value but never used.","'moment' is defined but never used.","'isHiddenModalCreateVoucher' is assigned a value but never used.","'setIsHiddenModalCreateVoucher' is assigned a value but never used.",["538"],"'useState' is defined but never used.","'faCircleInfo' is defined but never used.","'faFileLines' is defined but never used.","'image' is defined but never used.","'useSearchParams' is defined but never used.","'Modal' is defined but never used.","'DropDown' is defined but never used.","React Hook useEffect has missing dependencies: 'code' and 'dispatch'. Either include them or remove the dependency array.",["539"],["540"],"React Hook useEffect has missing dependencies: 'detailVoucher' and 'dispatch'. Either include them or remove the dependency array.",["541"],"React Hook useEffect has missing dependencies: 'listBookTable', 'listBookUpdate', and 'setValue'. Either include them or remove the dependency array.",["542"],"'initPagingFilter' is assigned a value but never used.",["543"],"'filter' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'code', 'dispatch', and 'initPagingFilter'. Either include them or remove the dependency array.",["544"],"React Hook useCallback has missing dependencies: 'setList' and 'toastList'. Either include them or remove the dependency array. If 'setList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["545"],"'Utils' is defined but never used.","'$' is defined but never used.","no-new-func","The Function constructor is eval.","CallExpression","noFunctionConstructor","React Hook useEffect has a missing dependency: 'setPagination'. Either include it or remove the dependency array.",["546"],"React Hook useEffect has a missing dependency: 'tableData'. Either include it or remove the dependency array.",["547"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'startLoading' is defined but never used.","'stopLoading' is defined but never used.","'ConstAPI' is defined but never used.",["548"],"Expected '===' and instead saw '=='.","'faArrowLeft' is defined but never used.",["549"],["550"],["551"],["552"],"'data' is defined but never used.","React Hook useEffect has missing dependencies: 'arrOfCurrentPage', 'numberOfPages', and 'showTotal'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentPage' needs the current value of 'arrOfCurrentPage'.",["553"],"no-global-assign","no-unsafe-negation",{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"554","fix":"562"},{"desc":"554","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},{"desc":"554","fix":"572"},{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"573","fix":"581"},{"desc":"582","fix":"583"},{"desc":"584","fix":"585"},{"desc":"586","fix":"587"},{"desc":"588","fix":"589"},{"desc":"556","fix":"590"},{"desc":"591","fix":"592"},{"desc":"573","fix":"593"},{"desc":"594","fix":"595"},{"desc":"554","fix":"596"},{"desc":"597","fix":"598"},"Update the dependencies array to be: [dispatch, initPagingFilter, pagination, searchParams, setSearchParams]",{"range":"599","text":"600"},"Update the dependencies array to be: [dispatch]",{"range":"601","text":"602"},"Update the dependencies array to be: [listDefault, listGroups]",{"range":"603","text":"604"},"Update the dependencies array to be: [checkRole]",{"range":"605","text":"606"},{"range":"607","text":"600"},{"range":"608","text":"600"},"Update the dependencies array to be: [formCreate?.due_date, setValue]",{"range":"609","text":"610"},"Update the dependencies array to be: [code, ditpatch]",{"range":"611","text":"612"},"Update the dependencies array to be: [detailManager, setValue]",{"range":"613","text":"614"},"Update the dependencies array to be: [decode, prefixPath]",{"range":"615","text":"616"},{"range":"617","text":"600"},"Update the dependencies array to be: [code, dispatch]",{"range":"618","text":"619"},"Update the dependencies array to be: [dispatch, voucher_id]",{"range":"620","text":"621"},"Update the dependencies array to be: [detailVoucher, dispatch, voucher_id]",{"range":"622","text":"623"},"Update the dependencies array to be: [detailVoucher, listBookTable, listBookUpdate, setValue]",{"range":"624","text":"625"},{"range":"626","text":"619"},"Update the dependencies array to be: [code, dispatch, initPagingFilter]",{"range":"627","text":"628"},"Update the dependencies array to be: [setList, toastList]",{"range":"629","text":"630"},"Update the dependencies array to be: [tableData, pagination, setPagination]",{"range":"631","text":"632"},"Update the dependencies array to be: [paginationTable, tableData]",{"range":"633","text":"634"},{"range":"635","text":"602"},"Update the dependencies array to be: [detailManager, dispatch]",{"range":"636","text":"637"},{"range":"638","text":"619"},"Update the dependencies array to be: [booksDetail, setValue]",{"range":"639","text":"640"},{"range":"641","text":"600"},"Update the dependencies array to be: [arrOfCurrentPage, currentPage, numberOfPages, pagination, showTotal]",{"range":"642","text":"643"},[5537,5539],"[dispatch, initPagingFilter, pagination, searchParams, setSearchParams]",[5626,5628],"[dispatch]",[6137,6149],"[listDefault, listGroups]",[1092,1094],"[checkRole]",[5264,5266],[5468,5470],[3973,3995],"[formCreate?.due_date, setValue]",[1756,1762],"[code, ditpatch]",[2491,2506],"[detailManager, setValue]",[1891,1899],"[decode, prefixPath]",[7172,7174],[2595,2597],"[code, dispatch]",[2415,2427],"[dispatch, voucher_id]",[3600,3612],"[detailVoucher, dispatch, voucher_id]",[4749,4764],"[detailVoucher, listBookTable, listBookUpdate, setValue]",[3024,3026],[3596,3598],"[code, dispatch, initPagingFilter]",[491,493],"[setList, toastList]",[984,1007],"[tableData, pagination, setPagination]",[1422,1439],"[paginationTable, tableData]",[1405,1407],[694,709],"[detailManager, dispatch]",[1257,1259],[2312,2325],"[booksDetail, setValue]",[4550,4552],[4168,4193],"[arrOfCurrentPage, currentPage, numberOfPages, pagination, showTotal]"]