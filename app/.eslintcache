[{"F:\\do_an_frontend\\app\\src\\index.js":"1","F:\\do_an_frontend\\app\\src\\App.js":"2","F:\\do_an_frontend\\app\\src\\layout\\Layout.js":"3","F:\\do_an_frontend\\app\\src\\redux\\Store.js":"4","F:\\do_an_frontend\\app\\src\\components\\books\\BooksPage.js":"5","F:\\do_an_frontend\\app\\src\\layout\\layout-project\\LayoutProject.js":"6","F:\\do_an_frontend\\app\\src\\components\\user\\UserPage.js":"7","F:\\do_an_frontend\\app\\src\\components\\login\\Login.js":"8","F:\\do_an_frontend\\app\\src\\components\\manager\\ManagerPage.js":"9","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\create_voucher\\CreateVoucher.js":"10","F:\\do_an_frontend\\app\\src\\components\\manager\\manager_info\\ManagerInfoPage .js":"11","F:\\do_an_frontend\\app\\src\\common\\menu-project\\MenuProject.js":"12","F:\\do_an_frontend\\app\\src\\components\\voucher\\VoucherPage.js":"13","F:\\do_an_frontend\\app\\src\\redux\\slice\\LoginSlice.js":"14","F:\\do_an_frontend\\app\\src\\redux\\slice\\BooksSlice.js":"15","F:\\do_an_frontend\\app\\src\\components\\user\\components\\get_detail_user\\DetailUser.js":"16","F:\\do_an_frontend\\app\\src\\redux\\slice\\VoucherSlice.js":"17","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\detail_voucher\\DetailVoucher.js":"18","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\update_voucher\\UpdateVoucher.js":"19","F:\\do_an_frontend\\app\\src\\redux\\slice\\BookSlice.js":"20","F:\\do_an_frontend\\app\\src\\redux\\slice\\UserSlice.js":"21","F:\\do_an_frontend\\app\\src\\redux\\slice\\ManagerSlice.js":"22","F:\\do_an_frontend\\app\\src\\redux\\slice\\GroupsSlice.js":"23","F:\\do_an_frontend\\app\\src\\components\\books\\components\\detail_books\\DetailBooks.js":"24","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\toasts\\Toasts.js":"25","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\loading\\Loading.js":"26","F:\\do_an_frontend\\app\\src\\common\\const.js":"27","F:\\do_an_frontend\\app\\src\\common\\utils.js":"28","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\data-table\\DataTable.js":"29","F:\\do_an_frontend\\app\\src\\redux\\action\\BooksAction.js":"30","F:\\do_an_frontend\\app\\src\\redux\\action\\BookAction.js":"31","F:\\do_an_frontend\\app\\src\\redux\\action\\UserAction.js":"32","F:\\do_an_frontend\\app\\src\\redux\\action\\ManagerAction.js":"33","F:\\do_an_frontend\\app\\src\\redux\\action\\VoucherAction.js":"34","F:\\do_an_frontend\\app\\src\\components\\books\\components\\create_books\\CreateBooks.js":"35","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown-v2\\DropDown.js":"36","F:\\do_an_frontend\\app\\src\\redux\\action\\GroupsAction.js":"37","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\modal\\Modal.js":"38","F:\\do_an_frontend\\app\\src\\redux\\service\\LoginService.js":"39","F:\\do_an_frontend\\app\\src\\components\\user\\components\\create_user\\CreateUser.js":"40","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\confirm\\Confirm.js":"41","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\button\\Button.js":"42","F:\\do_an_frontend\\app\\src\\redux\\action\\LoginAction.js":"43","F:\\do_an_frontend\\app\\src\\components\\manager\\get-detail-manager\\DetailManager.js":"44","F:\\do_an_frontend\\app\\src\\components\\manager\\create-manager\\CreateManager.js":"45","F:\\do_an_frontend\\app\\src\\components\\books\\components\\update_books\\UpdateBooks.js":"46","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\user_voucher\\UserPageVoucher.js":"47","F:\\do_an_frontend\\app\\src\\redux\\service\\VoucherService.js":"48","F:\\do_an_frontend\\app\\src\\redux\\service\\BooksService.js":"49","F:\\do_an_frontend\\app\\src\\redux\\service\\GroupsService.js":"50","F:\\do_an_frontend\\app\\src\\redux\\service\\UserService.js":"51","F:\\do_an_frontend\\app\\src\\redux\\service\\commonService.js":"52","F:\\do_an_frontend\\app\\src\\redux\\service\\ManagerService.js":"53","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\pagination\\Pagination.js":"54","F:\\do_an_frontend\\app\\src\\common\\http-commons.js":"55","F:\\do_an_frontend\\app\\src\\redux\\service\\BookService.js":"56","F:\\do_an_frontend\\app\\src\\common\\constImage.js":"57","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown\\DropDown.js":"58","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\sidebar\\SideBar.js":"59","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\menu\\Menu.js":"60"},{"size":158,"mtime":1675852453602,"results":"61","hashOfConfig":"62"},{"size":443,"mtime":1675270513434,"results":"63","hashOfConfig":"62"},{"size":3661,"mtime":1682269049694,"results":"64","hashOfConfig":"62"},{"size":831,"mtime":1677422064415,"results":"65","hashOfConfig":"62"},{"size":15795,"mtime":1676217769595,"results":"66","hashOfConfig":"62"},{"size":3806,"mtime":1682523727432,"results":"67","hashOfConfig":"62"},{"size":14077,"mtime":1682879893194,"results":"68","hashOfConfig":"62"},{"size":6161,"mtime":1682442065398,"results":"69","hashOfConfig":"62"},{"size":14327,"mtime":1682789624044,"results":"70","hashOfConfig":"62"},{"size":18792,"mtime":1682879893076,"results":"71","hashOfConfig":"62"},{"size":18737,"mtime":1682879385506,"results":"72","hashOfConfig":"62"},{"size":4404,"mtime":1682879844763,"results":"73","hashOfConfig":"62"},{"size":17783,"mtime":1682879893187,"results":"74","hashOfConfig":"62"},{"size":547,"mtime":1676995884098,"results":"75","hashOfConfig":"62"},{"size":1352,"mtime":1675959942362,"results":"76","hashOfConfig":"62"},{"size":11301,"mtime":1682527869378,"results":"77","hashOfConfig":"62"},{"size":1374,"mtime":1676658013173,"results":"78","hashOfConfig":"62"},{"size":13396,"mtime":1682879893075,"results":"79","hashOfConfig":"62"},{"size":19989,"mtime":1682879893068,"results":"80","hashOfConfig":"62"},{"size":1341,"mtime":1675960829509,"results":"81","hashOfConfig":"62"},{"size":1341,"mtime":1676217252318,"results":"82","hashOfConfig":"62"},{"size":1374,"mtime":1677421907318,"results":"83","hashOfConfig":"62"},{"size":1007,"mtime":1675609438166,"results":"84","hashOfConfig":"62"},{"size":16122,"mtime":1682532042421,"results":"85","hashOfConfig":"62"},{"size":2581,"mtime":1662523171668,"results":"86","hashOfConfig":"62"},{"size":495,"mtime":1675350796891,"results":"87","hashOfConfig":"62"},{"size":439,"mtime":1682269091423,"results":"88","hashOfConfig":"62"},{"size":7270,"mtime":1682879775409,"results":"89","hashOfConfig":"62"},{"size":7384,"mtime":1675618414731,"results":"90","hashOfConfig":"62"},{"size":5194,"mtime":1676995828447,"results":"91","hashOfConfig":"62"},{"size":3224,"mtime":1676647066379,"results":"92","hashOfConfig":"62"},{"size":4863,"mtime":1682526929027,"results":"93","hashOfConfig":"62"},{"size":7291,"mtime":1682877784613,"results":"94","hashOfConfig":"62"},{"size":5275,"mtime":1676997535044,"results":"95","hashOfConfig":"62"},{"size":18197,"mtime":1682357884225,"results":"96","hashOfConfig":"62"},{"size":2600,"mtime":1675051138368,"results":"97","hashOfConfig":"62"},{"size":1450,"mtime":1675618048971,"results":"98","hashOfConfig":"62"},{"size":1442,"mtime":1675051138370,"results":"99","hashOfConfig":"62"},{"size":1521,"mtime":1682441051324,"results":"100","hashOfConfig":"62"},{"size":17768,"mtime":1682879893194,"results":"101","hashOfConfig":"62"},{"size":1305,"mtime":1676207418749,"results":"102","hashOfConfig":"62"},{"size":439,"mtime":1676565527962,"results":"103","hashOfConfig":"62"},{"size":292,"mtime":1676913945690,"results":"104","hashOfConfig":"62"},{"size":5894,"mtime":1677427451030,"results":"105","hashOfConfig":"62"},{"size":17531,"mtime":1682879893221,"results":"106","hashOfConfig":"62"},{"size":17600,"mtime":1682357886369,"results":"107","hashOfConfig":"62"},{"size":10111,"mtime":1676568166565,"results":"108","hashOfConfig":"62"},{"size":3263,"mtime":1682188919548,"results":"109","hashOfConfig":"62"},{"size":3720,"mtime":1676819220663,"results":"110","hashOfConfig":"62"},{"size":464,"mtime":1675609799319,"results":"111","hashOfConfig":"62"},{"size":2505,"mtime":1682526140385,"results":"112","hashOfConfig":"62"},{"size":543,"mtime":1675610247675,"results":"113","hashOfConfig":"62"},{"size":3970,"mtime":1682879237967,"results":"114","hashOfConfig":"62"},{"size":8928,"mtime":1675048204544,"results":"115","hashOfConfig":"62"},{"size":1334,"mtime":1675439852952,"results":"116","hashOfConfig":"62"},{"size":1184,"mtime":1676212042952,"results":"117","hashOfConfig":"62"},{"size":360,"mtime":1682791982420,"results":"118","hashOfConfig":"62"},{"size":2459,"mtime":1670490531900,"results":"119","hashOfConfig":"62"},{"size":2084,"mtime":1662523171659,"results":"120","hashOfConfig":"62"},{"size":3551,"mtime":1663647612079,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1fs13sb",{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"124"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"124"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"124"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"124"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"124"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},"F:\\do_an_frontend\\app\\src\\index.js",[],["267","268"],"F:\\do_an_frontend\\app\\src\\App.js",[],"F:\\do_an_frontend\\app\\src\\layout\\Layout.js",["269","270"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport \"../share/shared.scss\";\r\nimport Login from '../components/login/Login';\r\nimport './Layout.scss';\r\nimport BooksPage from \"../components/books/BooksPage\";\r\nimport Toasts from \"../share/ecm-base/components/toasts/Toasts\";\r\nimport Loading from \"../share/ecm-base/components/loading/Loading\";\r\nimport MenuProject from \"../common/menu-project/MenuProject\";\r\nimport LayoutProject from \"./layout-project/LayoutProject\";\r\nimport DetailBooks from \"../components/books/components/detail_books/DetailBooks\";\r\nimport UserPage from \"../components/user/UserPage\";\r\nimport DetailUser from \"../components/user/components/get_detail_user/DetailUser\";\r\nimport VoucherPage from \"../components/voucher/VoucherPage\";\r\nimport CreateVoucher from \"../components/voucher/components/create_voucher/CreateVoucher\";\r\nimport DetailVoucher from \"../components/voucher/components/detail_voucher/DetailVoucher\";\r\nimport UpdateVoucher from \"../components/voucher/components/update_voucher/UpdateVoucher\";\r\nimport ManagerPage from \"../components/manager/ManagerPage\";\r\nimport ManagerInfoPage from \"../components/manager/manager_info/ManagerInfoPage \";\r\n\r\nexport let openNotification = null\r\nexport let openLoading = null\r\nexport let addLoading = null\r\nexport let subLoading = null\r\nexport let numberLoading = 0\r\n\r\nconst Layout = ({ prefixPath }) => {\r\n  const [toastList, setToastList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(0)\r\n  const showToast = (type, title, message) => {\r\n    const toastProperties = {\r\n      id: Date.now().toString(),\r\n      type: type,\r\n      title: title,\r\n      message: message,\r\n    };\r\n    setToastList([...toastList, toastProperties]);\r\n  };\r\n  openNotification = showToast\r\n\r\n  const _addLoading = () => {\r\n    setIsLoading(isLoading + 1)\r\n  }\r\n\r\n  const _subLoading = () => {\r\n    setIsLoading(isLoading - 1)\r\n  }\r\n\r\n  //setLoading\r\n  addLoading = _addLoading\r\n  subLoading = _subLoading\r\n  numberLoading = isLoading\r\n\r\n  return (\r\n    <div className=\"do-an-container\">\r\n      <Router>\r\n        <Routes>\r\n          <Route exact path={`${prefixPath}/`} element={<Login prefixPath={prefixPath} showToast={showToast} />} />\r\n          <Route exact path={`${prefixPath}/manager`} element={<LayoutProject prefixPath={prefixPath} />} >\r\n          <Route exact path={`books/list`} element={<BooksPage prefixPath={prefixPath} />} />\r\n          <Route exact path={`books/:code`} element={<DetailBooks prefixPath={prefixPath} />} />\r\n          <Route exact path={`user/list`} element={<UserPage prefixPath={prefixPath} />} />\r\n          <Route exact path={`user/:code`} element={<DetailUser prefixPath={prefixPath} />} />\r\n          <Route exact path={`voucher/list`} element={<VoucherPage prefixPath={prefixPath} />} />\r\n          <Route exact path={`voucher/create`} element={<CreateVoucher prefixPath={prefixPath} />} />\r\n          <Route exact path={`voucher/:voucher_id`} element={<DetailVoucher prefixPath={prefixPath} />} />\r\n          <Route exact path={`voucher/:voucher_id/update`} element={<UpdateVoucher prefixPath={prefixPath} />} />\r\n          <Route exact path={`manager-list`} element={<ManagerPage prefixPath={prefixPath} />} />\r\n          </Route>\r\n          <Route exact path={`${prefixPath}/info-manager/:code`} element={<ManagerInfoPage prefixPath={prefixPath}></ManagerInfoPage>}></Route>\r\n        </Routes>\r\n      </Router>\r\n      <Toasts toastList={toastList} setList={setToastList}></Toasts>\r\n      {(isLoading > 0) && <Loading></Loading>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","F:\\do_an_frontend\\app\\src\\redux\\Store.js",[],"F:\\do_an_frontend\\app\\src\\components\\books\\BooksPage.js",["271","272","273","274","275","276","277","278","279"],"import React, { useEffect, useState } from 'react';\r\nimport './BooksPage.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faFilter, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataTable from \"../../share/ecm-base/components/data-table/DataTable\";\r\nimport BooksAction from \"../../redux/action/BooksAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useSearchParams, Link } from 'react-router-dom';\r\nimport GroupsAction from \"../../redux/action/GroupsAction\";\r\nimport DropDown from '../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport Modal from '../../share/ecm-base/components/modal/Modal';\r\nimport Button from '../../share/ecm-base/components/button/Button';\r\nimport CreateBooks from './components/create_books/CreateBooks';\r\nimport { ListButton } from '../../common/utils';\r\nimport ConstAPI from '../../common/const';\r\nimport Confirm from '../../share/ecm-base/components/confirm/Confirm';\r\n\r\nconst BooksPage = ({ prefixPath }) => {\r\n\r\n\r\n    const columnBooks = [\r\n        {\r\n            title: \"Mã sách\",\r\n            dataIndex: \"code\",\r\n            render: (text) => {\r\n                return <Link to={`${prefixPath}/manager/books/${text}`}>{text}</Link>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên sách\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tác giả\",\r\n            dataIndex: \"author\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Tiêu đề\",\r\n            dataIndex: \"title\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thể loại\",\r\n            dataIndex: \"group_code\",\r\n            render: (text, index) => {\r\n                return <span>{index?.groups?.group_name}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Số lượng\",\r\n            dataIndex: \"total_books\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"code\",\r\n            render: (code) => {\r\n                return (\r\n                    <ListButton\r\n                        onRemoveAction={() => handleDeleteBooks(code)}\r\n                        removeButtonName=\"btnDeleteBooks\"\r\n                    ></ListButton>\r\n                );\r\n            },\r\n            width: \"15%\"\r\n        }\r\n    ]\r\n\r\n    let listOrder = [\r\n        {\r\n            title: \"Tăng dần\",\r\n            value: 1\r\n        },\r\n        {\r\n            title: \"Giảm dần\",\r\n            value: -1\r\n        },\r\n    ]\r\n\r\n    let listOrderBy = [\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            value: \"created_time\"\r\n        },\r\n        {\r\n            title: \"Thời gian sửa\",\r\n            value: \"modified_time\"\r\n        },\r\n    ]\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listBooks = useSelector(state => state.booksReducer.listBooks)\r\n    const filter = useSelector(state => state.booksReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.booksReducer.pagination)\r\n\r\n    const listGroups = useSelector(state => state.groupsReducer.listGroups)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n    const dispatch = useDispatch();\r\n\r\n    const [isHiddenModalCreateBooks, setIsHiddenModalCreateBooks] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let urlParams = { ...initPagingFilter }\r\n        if (searchParams.get('name')) {\r\n            urlParams[\"name\"] = searchParams.get('name')\r\n        }\r\n        if (searchParams.get('code')) {\r\n            urlParams[\"code\"] = searchParams.get('code')\r\n        }\r\n        if (searchParams.get('author')) {\r\n            urlParams[\"author\"] = searchParams.get('author')\r\n        }\r\n        if (searchParams.get('group_code')) {\r\n            urlParams[\"group_code\"] = searchParams.get('group_code')\r\n        }\r\n        if (searchParams.get('page')) {\r\n            urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        }\r\n        if (searchParams.get('size')) {\r\n            urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        }\r\n        if (searchParams.get('order_by')) {\r\n            urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        }\r\n        if (searchParams.get('order')) {\r\n            urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        }\r\n\r\n        setSearchParams(urlParams)\r\n        BooksAction.updateBooksFilterAction(dispatch, urlParams)\r\n        BooksAction.updateBooksPagination(dispatch, {\r\n            ...pagination,\r\n            page: urlParams.page,\r\n            size: urlParams.size\r\n        })\r\n        BooksAction.getListBooksAction(dispatch, urlParams)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        GroupsAction.getListGroupsAction(dispatch)\r\n    }, [])\r\n\r\n    let listDefault = [\r\n        {\r\n            title: \"Tất cả thể loại\",\r\n            value: \"ALL\"\r\n        }\r\n    ]\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState(listDefault)\r\n\r\n\r\n    useEffect(() => {\r\n        let listGrgoupsDropDown = listGroups.map((item) => {\r\n            return {\r\n                title: item?.group_name,\r\n                value: item?.group_code\r\n            }\r\n        })\r\n        setListDefaultDropDown([...listDefault, ...listGrgoupsDropDown])\r\n    }, [listGroups])\r\n\r\n    const onCancel = () => {\r\n        setIsHiddenModalCreateBooks(!isHiddenModalCreateBooks)\r\n    }\r\n\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter }\r\n        if (field === \"group_code\" && value === \"ALL\") {\r\n            delete newSearchFilter.group_code\r\n        } else {\r\n            newSearchFilter = { ...filter, [field]: value }\r\n        }\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        BooksAction.updateBooksFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        BooksAction.getListBooksAction(dispatch, filter)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        console.log(newSize);\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        BooksAction.updateBooksFilterAction(dispatch, newSearchFilter)\r\n        BooksAction.updateBooksPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        BooksAction.getListBooksAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        BooksAction.updateBooksFilterAction(dispatch, newSearchFilter)\r\n        BooksAction.updateBooksPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        BooksAction.getListBooksAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleOpenModalCreate = () => {\r\n        setIsHiddenModalCreateBooks(true)\r\n    }\r\n\r\n    const onSubmitFormCreate = () => {\r\n        document.getElementById(\"do-an-form-create-books-button\").click();\r\n    }\r\n\r\n    const [isOpenConfirmDialog, setIsOpenConfirmDialog] = useState(false);\r\n    const [codeBooksDelete, setCodeBooksDelete] = useState(null);\r\n\r\n    const handleDeleteBooks = (code) => {\r\n        setCodeBooksDelete(code)\r\n        setIsOpenConfirmDialog(true)\r\n    }\r\n\r\n    const handleCancelConfirmDialog = () => {\r\n        setCodeBooksDelete(null)\r\n        setIsOpenConfirmDialog(false)\r\n    }\r\n\r\n    const handleDeleteConfirmDialog = () => {\r\n        BooksAction.removeBooks(dispatch, codeBooksDelete, filter)\r\n        handleCancelConfirmDialog()\r\n    }\r\n\r\n    return (\r\n        <div className=\"do-an__books\">\r\n            <div className=\"do-an__books__image-cover\">\r\n                {/* <img className=\"image-cover\" src={imageCover}></img> */}\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh mục sách</h3>\r\n            </div>\r\n            <div className=\"do-an__books__group-search\">\r\n                <div className=\"do-an__books__group-search__filter\">\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Tên sách:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <input className=\"do-an__books__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"name\", event.target.value)}\r\n                                value={filter?.name || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Mã sách:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <input className=\"do-an__books__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"code\", event.target.value)}\r\n                                value={filter?.code || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Tác giả:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <input className=\"do-an__books__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"author\", event.target.value)}\r\n                                value={filter?.author || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"do-an__books__group-search__filter\">\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Thể loại:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__books__group-search__item__input\"\r\n                                listItem={listDefaultDropDown}\r\n                                selected={filter?.group_code || \"ALL\"}\r\n                                name=\"group_code\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Sắp xếp theo:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__books__group-search__item__input\"\r\n                                listItem={listOrderBy}\r\n                                selected={filter?.order_by || \"created_time\"}\r\n                                name=\"order_by\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Thứ tự:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__books__group-search__item__input\"\r\n                                listItem={listOrder}\r\n                                selected={filter?.order || -1}\r\n                                name=\"order\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__books__group-search__button-search\">\r\n                    <button className=\"button-search\" onClick={handleSearch}>Tìm kiếm</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"do-an__books__group-table\">\r\n                <div className=\"do-an__books__group-table__title\">\r\n                    <button className=\"button-create-new\" onClick={handleOpenModalCreate}>Thêm mới</button>\r\n                </div>\r\n                <div className=\"do-an__books__group-table__table-data\">\r\n                    <DataTable headerData={columnBooks}\r\n                        tableData={listBooks}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        pagination={pagination}\r\n                        onPageChange={handleNumberPagehange}\r\n                    >\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Tạo mới sách\"\r\n                width=\"70%\"\r\n                onCancel={onCancel}\r\n                visible={isHiddenModalCreateBooks}\r\n                footer={\r\n                    <div className='do-an__modal__footer'>\r\n                        <Button\r\n                            type={\"normal-green\"}\r\n                            onClick={onSubmitFormCreate}\r\n                        >\r\n                            Tạo mới\r\n                        </Button>\r\n                        <Button\r\n                            type={\"normal-gray\"}\r\n                            onClick={onCancel}\r\n                        >\r\n                            Hủy bỏ\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            >\r\n                {isHiddenModalCreateBooks && <CreateBooks onCloseModal={onCancel}></CreateBooks>}\r\n            </Modal>\r\n\r\n            <Confirm\r\n                title=\"Xoá sách\"\r\n                width=\"45%\"\r\n                visible={isOpenConfirmDialog}\r\n                onCancel={handleCancelConfirmDialog}\r\n                onOk={handleDeleteConfirmDialog}\r\n            >\r\n                <p>Nếu xóa {codeBooksDelete} thì dữ liệu sách sẽ mất hết, xác nhận xóa?</p>\r\n            </Confirm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BooksPage;","F:\\do_an_frontend\\app\\src\\layout\\layout-project\\LayoutProject.js",["280","281","282"],"import React, { useEffect, useState } from 'react'\r\nimport { Outlet, useNavigate, useLocation } from 'react-router-dom';\r\nimport \"./LayoutProject.scss\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MenuProject from \"../../common/menu-project/MenuProject\";\r\nimport LoginAction from '../../redux/action/LoginAction';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleUser, faAnglesLeft, faAnglesRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport logo from '../../share/image/logo.jpg';\r\n\r\n\r\nexport let openNotification = null\r\nexport let openLoading = null\r\n\r\nconst LayoutProject = ({ prefixPath }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const checkRole = () => {\r\n    const jwt = require('jsonwebtoken');\r\n    const token = window.localStorage.getItem(\"token\");\r\n    // const secret = '123456';\r\n    const decoded = jwt.decode(token);\r\n    LoginAction.updateDataToken(dispatch, decoded)\r\n  }\r\n\r\n  const tokenDecode = useSelector(state => state.loginReducer.dataToken)\r\n\r\n  useEffect(() => {\r\n    checkRole()\r\n  }, [])\r\n\r\n  // useEffect(() => {\r\n  //   ManagerAction.getDetailManagerAction(dispatch, tokenDecode?.code)\r\n  // }, [tokenDecode])\r\n\r\n  const location = useLocation()\r\n\r\n  console.log(location);\r\n\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.setItem(\"token\", \"\")\r\n    navigate(`${prefixPath}/`);\r\n  }\r\n\r\n  const handleOpenInfoManager = () => {\r\n    navigate(`${prefixPath}/info-manager/${tokenDecode.code}`)\r\n  }\r\n\r\n  const [isExpand, setIsExpand] = useState(true);\r\n\r\n\r\n  const handleHiddenSideBar = () => {\r\n    setIsExpand(!isExpand)\r\n  }\r\n\r\n  return (\r\n    <div className=\"do-an__layout-project__container\">\r\n      <div className={isExpand ? \"do-an__layout-project__container__view-expand\" : \"do-an__layout-project__container__view-inexpand\"}>\r\n        {location.pathname === '/manager' ? \r\n            <iframe style={{width:\"100%\", height:\"100%\"}} src='http://thuvienso.actvn.edu.vn/'></iframe> : <Outlet></Outlet>\r\n      }\r\n      </div>\r\n      <div className={`do-an__layout-project__container__menu ${isExpand ? \"\" : \"inexpand\"}`}>\r\n      <div className='do-an__layout-project__container__logo'>\r\n        <img className={`do-an__layout-project__container__logo__image ${isExpand ? \"\" : \"logo-inexpand\"}`} src={logo}></img>\r\n        {/* <div className='do-an__layout-project__container__logo__title'>\r\n              QUẢN LÝ THƯ VIỆN\r\n        </div> */}\r\n      </div>\r\n        <MenuProject prefixPath={prefixPath} isExpand={isExpand}/>\r\n        <div className={`do-an__layout-project__container__manager-info ${isExpand ? \"\" : \"manager-info-inexpand\"}`}>\r\n          <div title='Thông tin cá nhân' className='do-an__layout-project__container__manager-info__icon' onClick={handleOpenInfoManager}>\r\n            <FontAwesomeIcon style={{ height: \"35px\", marginBottom: \"10px\", cursor: \"pointer\", color:\"white\" }} icon={faCircleUser}></FontAwesomeIcon>\r\n          </div>\r\n          <div className={`do-an__layout-project__container__manager-info__username ${isExpand ? \"\" : \"username-inexpand\"}`} onClick={handleOpenInfoManager}>\r\n            {tokenDecode?.username}\r\n          </div>\r\n          <div title='Đăng xuất' className={`do-an__layout-project__container__manager-info__logout ${isExpand ? \"\" : \"logout-inexpand\"}`} onClick={handleLogout}>\r\n            Đăng xuất\r\n          </div>\r\n          <div className='do-an__layout-project__container__manager-info__icon-inexpand'>\r\n            <FontAwesomeIcon style={{ height: \"18px\", marginTop: \"10px\" }} onClick={handleHiddenSideBar} icon={ isExpand===true ? faAnglesLeft : faAnglesRight}></FontAwesomeIcon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayoutProject\r\n","F:\\do_an_frontend\\app\\src\\components\\user\\UserPage.js",["283","284","285","286","287","288","289","290"],"F:\\do_an_frontend\\app\\src\\components\\login\\Login.js",["291","292","293"],"import React, { useState } from \"react\";\r\nimport image from '../../share/image/DRBS.jpg';\r\nimport \"./Login.scss\";\r\nimport { Input, Button } from 'antd';\r\nimport LoginService from '../../redux/service/LoginService';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { startLoading, stopLoading } from \"../../common/const\";\r\n\r\nconst Login = ({ prefixPath, showToast }) => {\r\n\r\n  const { register, formState: { errors }, handleSubmit } = useForm();\r\n  const navigate = useNavigate();\r\n  const [formLogin, setFormLogin] = useState({})\r\n\r\n  const [loginActive, setLoginActive] = useState(true)\r\n\r\n  const handleChangeInput = (name, value) => {\r\n    setFormLogin({\r\n      ...formLogin,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const handleSubmitLogin = () => {\r\n    startLoading();\r\n    LoginService.login(formLogin).then(response => {\r\n      console.log(response);\r\n      if (response.data.status === 200) {\r\n        window.localStorage.setItem(\"token\", response.data.data.token)\r\n        showToast(\"success\", \"Thông báo\", \"Đăng nhập thành công!\");\r\n        navigate(`${prefixPath}/manager`);\r\n        stopLoading();\r\n      } else if (response.data.status === 400) {\r\n        stopLoading();\r\n        showToast(\"error\", \"Thông báo\", \"Mật khẩu không chính xác, vui lòng thử lại!\");\r\n      }\r\n      else {\r\n        stopLoading();\r\n        showToast(\"error\", \"Thông báo\", \"Tài khoản không tồn tại, vui lòng thử lại!\");\r\n      }\r\n    })\r\n  }\r\n\r\n  const [emailInput, setEmailInput] = useState(\"\")\r\n\r\n  const handleOpenFogetPass = () => {\r\n    setLoginActive(!loginActive)\r\n  }\r\n\r\n  const handleChangeEmail = (event) => {\r\n    setEmailInput(event.target.value);\r\n  }\r\n\r\n  const handleClickForgetPass = () => {\r\n    startLoading();\r\n    if (emailInput === \"\" || emailInput.trim().length === 0){\r\n      showToast(\"error\", \"Thông báo\", \"Email nhận mật khẩu không được để trống!\");\r\n      stopLoading();\r\n      return\r\n    }\r\n    LoginService.forgetPassword(emailInput, \"MANAGER\").then(response => {\r\n      console.log(response);\r\n      if(response.data.data === true) {\r\n        showToast(\"success\", \"Thông báo\", \"Mật khẩu mới đã được gửi đến email đăng ký tài khoản, vui lòng kiểm tra!\");\r\n        setEmailInput(\"\")\r\n        stopLoading();\r\n      }\r\n      else if(response.data.data === false){\r\n        showToast(\"error\", \"Thông báo\", \"Email không tồn tại hoặc chưa được đăng ký !\");\r\n        stopLoading();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='do-an-login__container' id=\"do-an-login\" style={{ backgroundImage: `url(${image})` }}>\r\n      {loginActive &&\r\n        <form style={{ width: \"30%\" }} onSubmit={handleSubmit(handleSubmitLogin)}>\r\n          <div className=\"do-an-login__container__form-login\">\r\n            <div className=\"do-an-login__container__form-login__title\">\r\n              <span className=\"do-an-title\">ĐĂNG NHẬP</span>\r\n            </div>\r\n            <div className=\"do-an-login__container__form-login__group-input\">\r\n              {/* <Input className=\"do-an-input\" placeholder=\"Tài khoản\" />\r\n              <Input className=\"do-an-input\" placeholder=\"Mật khẩu\" type=\"password\" /> */}\r\n\r\n              <input className={`form-control do-an-input ${errors.name ? 'is-invalid' : ''}`} placeholder=\"Tài khoản\"\r\n                {...register(\"username\",\r\n                  {\r\n                    required: true,\r\n                    maxLength: 32,\r\n                    validate: value => value.trim().length > 0,\r\n                    onChange: (e) => handleChangeInput(\"username\", e.target.value),\r\n                  }\r\n                )} />\r\n              {errors.username?.type === 'required' &&\r\n                <div className=\"input-value-error\">Tên Username không được để trống!</div>}\r\n              {errors.username?.type === 'maxLength' &&\r\n                <div className=\"input-value-error\">Tên Username không được dài quá 32 ký tự!</div>}\r\n\r\n              <input className={`form-control do-an-input ${errors.name ? 'is-invalid' : ''}`} placeholder=\"Mật khẩu\"\r\n                {...register(\"password\",\r\n                  {\r\n                    required: true,\r\n                    maxLength: 32,\r\n                    validate: value => value.trim().length > 0,\r\n                    onChange: (e) => handleChangeInput(\"password\", e.target.value),\r\n                  }\r\n                )} />\r\n              {errors.password?.type === 'required' &&\r\n                <div className=\"input-value-error\">Mật khẩu không được để trống!</div>}\r\n              {errors.password?.type === 'maxLength' &&\r\n                <div className=\"input-value-error\">Mật khẩu không được dài quá 32 ký tự!</div>}\r\n            </div>\r\n            <div className=\"do-an-login__container__form-login__button-login\">\r\n              <button className=\"do-an-button\" type=\"submit\">Đăng nhập</button>\r\n            </div>\r\n            <div className=\"do-an-login__container__form-login__forget-pass\" onClick={handleOpenFogetPass}>\r\n              Quên mật khẩu?\r\n            </div>\r\n          </div>\r\n        </form>\r\n      }\r\n\r\n      {!loginActive &&\r\n        <div className=\"do-an-login__container__form-login\" style={{ width: \"28%\", height:\"28%\" }}>\r\n          <div className=\"do-an-login__container__form-login__title\">\r\n            <span className=\"do-an-title\">QUÊN MẬT KHẨU</span>\r\n          </div>\r\n          <input value={emailInput} style={{ width: \"95%\" }} className={`form-control do-an-input`} placeholder=\"Email\" onChange={handleChangeEmail} />\r\n\r\n          <div className=\"do-an-login__container__form-login__button-login\">\r\n            <button className=\"do-an-button\" type=\"submit\" onClick={handleClickForgetPass}>Xác nhận gửi</button>\r\n          </div>\r\n          <div className=\"do-an-login__container__form-login__forget-pass\" onClick={handleOpenFogetPass}>\r\n              Quay lại đăng nhập!\r\n            </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\do_an_frontend\\app\\src\\components\\manager\\ManagerPage.js",["294","295","296","297","298","299","300","301","302"],"import React, { useEffect, useState } from 'react';\r\nimport './ManagerPage.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faFilter, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataTable from \"../../share/ecm-base/components/data-table/DataTable\";\r\nimport ManagerAction from \"../../redux/action/ManagerAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useSearchParams, Link } from 'react-router-dom';\r\nimport DropDown from '../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport Modal from '../../share/ecm-base/components/modal/Modal';\r\nimport Button from '../../share/ecm-base/components/button/Button';\r\nimport { ListButton, ListButtonUser } from '../../common/utils';\r\nimport ConstAPI from '../../common/const';\r\nimport Confirm from '../../share/ecm-base/components/confirm/Confirm';\r\nimport CreateManager from './create-manager/CreateManager';\r\nimport DetailManager from './get-detail-manager/DetailManager';\r\n\r\nconst ManagerPage = ({ prefixPath }) => {\r\n\r\n\r\n    const columnManager = [\r\n        {\r\n            title: \"Mã quản lý\",\r\n            dataIndex: \"code\",\r\n            render: (text, index) => {\r\n                return <span style={{textDecoration:\"underline\", color:\"#141ed2\", cursor:\"pointer\"}} onClick={() => handleOpenModalDetail(text)}>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên quản lý\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ngày sinh\",\r\n            dataIndex: \"date_of_birth\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Giới tính\",\r\n            dataIndex: \"gender\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Khóa\",\r\n            dataIndex: \"course\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            dataIndex: \"created_time\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"code\",\r\n            render: (code) => {\r\n                return (\r\n                    <ListButtonUser\r\n                        editDisable = {true}\r\n                        onRemoveAction={() => handleDeleteManager(code)}\r\n                        removeButtonName=\"btnDeleteManager\"\r\n                    ></ListButtonUser>\r\n                );\r\n            },\r\n            width: \"15%\"\r\n        }\r\n    ]\r\n\r\n    let listOrder = [\r\n        {\r\n            title: \"Tăng dần\",\r\n            value: 1\r\n        },\r\n        {\r\n            title: \"Giảm dần\",\r\n            value: -1\r\n        },\r\n    ]\r\n\r\n    let listOrderBy = [\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            value: \"created_time\"\r\n        },\r\n        {\r\n            title: \"Thời gian sửa\",\r\n            value: \"modified_time\"\r\n        },\r\n        {\r\n            title: \"Tên\",\r\n            value: \"name\"\r\n        },\r\n    ]\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listManager = useSelector(state => state.managerReducer.listManager)\r\n    const filter = useSelector(state => state.managerReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.managerReducer.pagination)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n    const dispatch = useDispatch();\r\n\r\n    const [isHiddenModalCreateManager, setIsHiddenModalCreateManager] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let urlParams = { ...initPagingFilter }\r\n        if (searchParams.get('name')) {\r\n            urlParams[\"name\"] = searchParams.get('name')\r\n        }\r\n        if (searchParams.get('code')) {\r\n            urlParams[\"code\"] = searchParams.get('code')\r\n        }\r\n        if (searchParams.get('page')) {\r\n            urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        }\r\n        if (searchParams.get('size')) {\r\n            urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        }\r\n        if (searchParams.get('order_by')) {\r\n            urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        }\r\n        if (searchParams.get('order')) {\r\n            urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        }\r\n\r\n        setSearchParams(urlParams)\r\n        ManagerAction.updateManagerFilterAction(dispatch, urlParams)\r\n        ManagerAction.updateManagerPagination(dispatch, {\r\n            ...pagination,\r\n            page: urlParams.page,\r\n            size: urlParams.size\r\n        })\r\n        ManagerAction.getListManagerAction(dispatch, urlParams)\r\n    }, [])\r\n\r\n    const onCancel = () => {\r\n        setIsHiddenModalCreateManager(!isHiddenModalCreateManager)\r\n    }\r\n\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter ,[field]: value }\r\n        console.log(newSearchFilter);\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        ManagerAction.updateManagerFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        ManagerAction.getListManagerAction(dispatch, filter)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        console.log(newSize);\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        ManagerAction.updateManagerFilterAction(dispatch, newSearchFilter)\r\n        ManagerAction.updateManagerPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        ManagerAction.getListManagerAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        ManagerAction.updateManagerFilterAction(dispatch, newSearchFilter)\r\n        ManagerAction.updateManagerPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        ManagerAction.getListManagerAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleOpenModalCreate = () => {\r\n        setIsHiddenModalCreateManager(true)\r\n    }\r\n\r\n    const onSubmitFormCreate = () => {\r\n        document.getElementById(\"do-an-form-create-manager-button\").click();\r\n    }\r\n\r\n    const [isOpenConfirmDialog, setIsOpenConfirmDialog] = useState(false);\r\n    const [codeManagerDelete, setCodeManagerDelete] = useState(null);\r\n    const [detailManager, setDetailManager] = useState(null)\r\n    const [openModalDetail, setOpenModalDetail] = useState(false)\r\n\r\n    const handleDeleteManager = (code) => {\r\n        setCodeManagerDelete(code)\r\n        setIsOpenConfirmDialog(true)\r\n    }\r\n\r\n    const handleCancelConfirmDialog = () => {\r\n        setCodeManagerDelete(null)\r\n        setIsOpenConfirmDialog(false)\r\n    }\r\n\r\n    const handleDeleteConfirmDialog = () => {\r\n        ManagerAction.removeManager(dispatch, codeManagerDelete, filter)\r\n        handleCancelConfirmDialog()\r\n    }\r\n\r\n    const handleOpenModalDetail = (item) => {\r\n        setDetailManager(item);\r\n        setOpenModalDetail(true)\r\n    }\r\n\r\n    const onCancelDetail = () => {\r\n        setOpenModalDetail(false)\r\n        setDetailManager(null)\r\n    }\r\n\r\n    return (\r\n        <div className=\"do-an__manager\">\r\n            <div className=\"do-an__manager__image-cover\">\r\n                {/* <img className=\"image-cover\" src={imageCover}></img> */}\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh sách người quản lý</h3>\r\n            </div>\r\n            <div className=\"do-an__manager__group-search\">\r\n                <div className=\"do-an__manager__group-search__filter\">\r\n                    <div className=\"do-an__manager__group-search__item\">\r\n                        <div className=\"do-an__manager__group-search__item__title\">\r\n                            Tên quản lý:\r\n                        </div>\r\n                        <div className=\"do-an__manager__group-search__item__input-container\">\r\n                            <input className=\"do-an__manager__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"name\", event.target.value)}\r\n                                value={filter?.name || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__manager__group-search__item\">\r\n                        <div className=\"do-an__manager__group-search__item__title\">\r\n                            Mã quản lý:\r\n                        </div>\r\n                        <div className=\"do-an__manager__group-search__item__input-container\">\r\n                            <input className=\"do-an__manager__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"code\", event.target.value)}\r\n                                value={filter?.code || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__manager__group-search__item\">\r\n                        <div className=\"do-an__manager__group-search__item__title\">\r\n                            Sắp xếp theo:\r\n                        </div>\r\n                        <div className=\"do-an__manager__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__manager__group-search__item__input\"\r\n                                listItem={listOrderBy}\r\n                                selected={filter?.order_by || \"created_time\"}\r\n                                name=\"order_by\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__manager__group-search__item\">\r\n                        <div className=\"do-an__manager__group-search__item__title\">\r\n                            Thứ tự:\r\n                        </div>\r\n                        <div className=\"do-an__manager__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__manager__group-search__item__input\"\r\n                                listItem={listOrder}\r\n                                selected={filter?.order || -1}\r\n                                name=\"order\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__manager__group-search__button-search\">\r\n                    <button className=\"button-search\" onClick={handleSearch}>Tìm kiếm</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"do-an__manager__group-table\">\r\n                <div className=\"do-an__manager__group-table__title\">\r\n                    <button className=\"button-create-new\" onClick={handleOpenModalCreate}>Thêm mới</button>\r\n                </div>\r\n                <div className=\"do-an__manager__group-table__table-data\">\r\n                    <DataTable headerData={columnManager}\r\n                        tableData={listManager}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        pagination={pagination}\r\n                        onPageChange={handleNumberPagehange}\r\n                    >\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Tạo mới quản lý\"\r\n                width=\"50%\"\r\n                onCancel={onCancel}\r\n                visible={isHiddenModalCreateManager}\r\n                footer={\r\n                    <div className='do-an__modal__footer'>\r\n                        <Button\r\n                            type={\"normal-green\"}\r\n                            onClick={onSubmitFormCreate}\r\n                        >\r\n                            Tạo mới\r\n                        </Button>\r\n                        <Button\r\n                            type={\"normal-gray\"}\r\n                            onClick={onCancel}\r\n                        >\r\n                            Hủy bỏ\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            >\r\n                {isHiddenModalCreateManager && <CreateManager onCloseModal={onCancel}></CreateManager>}\r\n            </Modal>\r\n\r\n            <Modal\r\n                title=\"Chi tiết quản lý\"\r\n                width=\"70%\"\r\n                onCancel={onCancelDetail}\r\n                visible={openModalDetail}\r\n                footer={null}\r\n            >\r\n                {openModalDetail && <DetailManager detailManager={detailManager}></DetailManager>}\r\n            </Modal>\r\n\r\n            <Confirm\r\n                title=\"Xoá quản lý\"\r\n                width=\"45%\"\r\n                visible={isOpenConfirmDialog}\r\n                onCancel={handleCancelConfirmDialog}\r\n                onOk={handleDeleteConfirmDialog}\r\n            >\r\n                <p>Nếu xóa {codeManagerDelete} thì dữ liệu thông tin của quản lý sẽ mất hết, xác nhận xóa?</p>\r\n            </Confirm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerPage;","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\create_voucher\\CreateVoucher.js",["303","304","305","306","307","308"],"F:\\do_an_frontend\\app\\src\\components\\manager\\manager_info\\ManagerInfoPage .js",["309","310","311","312","313"],"F:\\do_an_frontend\\app\\src\\common\\menu-project\\MenuProject.js",["314","315","316"],"F:\\do_an_frontend\\app\\src\\components\\voucher\\VoucherPage.js",["317","318","319","320","321","322","323","324","325"],"F:\\do_an_frontend\\app\\src\\redux\\slice\\LoginSlice.js",[],"F:\\do_an_frontend\\app\\src\\redux\\slice\\BooksSlice.js",[],"F:\\do_an_frontend\\app\\src\\components\\user\\components\\get_detail_user\\DetailUser.js",["326","327","328","329","330","331","332","333","334","335"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport \"./DetailUser.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faCircleInfo, faFileLines } from \"@fortawesome/free-solid-svg-icons\";\r\nimport image from '../../../../share/image/123.jpg';\r\nimport UserAction from '../../../../redux/action/UserAction';\r\nimport { useParams, useSearchParams, Link, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ConstAPI from '../../../../common/const';\r\nimport DataTable from '../../../../share/ecm-base/components/data-table/DataTable';\r\nimport Modal from '../../../../share/ecm-base/components/modal/Modal';\r\nimport Button from '../../../../share/ecm-base/components/button/Button';\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport VoucherAction from '../../../../redux/action/VoucherAction';\r\n\r\nconst DetailUser = ({ prefixPath }) => {\r\n\r\n    const columnVoucher = [\r\n        {\r\n            title: \"Mã thẻ mượn\",\r\n            dataIndex: \"voucher_id\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Thời gian mượn\",\r\n            dataIndex: \"start_date\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Hạn trả\",\r\n            dataIndex: \"due_date\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Người duyệt\",\r\n            dataIndex: \"created_by\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Số lượng\",\r\n            dataIndex: \"books_borrowed\",\r\n            render: (text) => {\r\n                return <span>{text.length}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n    ]\r\n\r\n    const userDetail = useSelector(state => state.userReducer.detailUser)\r\n    const listVoucher = useSelector(state => state.voucherReducer.listVoucher)\r\n\r\n    useEffect(() => {\r\n        UserAction.getDetailUserAction(dispatch, code)\r\n\r\n        VoucherAction.getListVoucherAction(dispatch,\r\n            {\r\n                page: 1,\r\n                size: 10,\r\n                order_by: \"created_time\",\r\n                order: -1,\r\n                user_id: code\r\n            }\r\n        )\r\n    }, [])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const { code } = useParams()\r\n\r\n    console.log(listVoucher);\r\n\r\n    return (\r\n        <div className='do-an__view-user-container'>\r\n            <div className='do-an__view-user-container__header'>\r\n                <div className='do-an__view-user-container__header__text'>\r\n                    <button\r\n                        className=\"do-an__view-user-container__header__button\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => navigate(-1)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faArrowLeft} style={{ height: \"20px\", marginTop: \"12px\", marginLeft: \"5px\" }} />\r\n                    </button>\r\n                    <div className='do-an__view-user-container__header__title'>Thông tin chi tiết người dùng</div>\r\n                </div>\r\n            </div>\r\n            <div className='do-an__view-user-container__info'>\r\n                <div className='do-an__view-user-container__info__group-info'>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Tên người dùng:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Mã người dùng:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.code}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Ngày sinh:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.date_of_birth}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Giới tính:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.gender}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Khóa:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.course}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='do-an__view-user-container__info__group-info'>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Tên đại học:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.university}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Số điện thoại:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.phone}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Email:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.email}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Tài khoản:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.user_name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Ngày tạo:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail?.created_time}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='do-an__view-user-container__info__avatar'>\r\n                    <img className=\"do-an-preview-image\" src={userDetail.avatar === null ? image : `${ConstAPI.BASE_HOST_API}${userDetail.avatar}`}></img>\r\n                </div>\r\n            </div>\r\n            <div className='do-an__view-user-container__table'>\r\n                <div className='do-an__view-user-container__table__search'>\r\n                    <div className=\"do-an__view-user-container__table__search__filter\">\r\n                        <div className=\"do-an__view-user-container__table__search__item\">\r\n                            <div className=\"do-an__view-user-container__table__search__item__title\">\r\n                                Tình trạng thẻ mượn:\r\n                            </div>\r\n                            <div className=\"do-an__view-user-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-user-container__table__search__item__input\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-user-container__table__search__item\">\r\n                            <div className=\"do-an__view-user-container__table__search__item__title\">\r\n                                Ngày bắt đầu:\r\n                            </div>\r\n                            <div className=\"do-an__view-user-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-user-container__table__search__item__input\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-user-container__table__search__item\">\r\n                            <div className=\"do-an__view-user-container__table__search__item__title\">\r\n                                Ngày kết thúc:\r\n                            </div>\r\n                            <div className=\"do-an__view-user-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-user-container__table__search__item__input\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-user-container__table__search__item\">\r\n                            <div className=\"do-an__view-user-container__table__search__item__title\">\r\n                                Người duyệt:\r\n                            </div>\r\n                            <div className=\"do-an__view-user-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-user-container__table__search__item__input\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DataTable headerData={columnVoucher}\r\n                            tableData={listVoucher}\r\n\r\n                >\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DetailUser;","F:\\do_an_frontend\\app\\src\\redux\\slice\\VoucherSlice.js",[],"F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\detail_voucher\\DetailVoucher.js",["336","337","338","339","340","341","342","343"],"F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\update_voucher\\UpdateVoucher.js",["344","345","346","347","348","349"],"F:\\do_an_frontend\\app\\src\\redux\\slice\\BookSlice.js",[],"F:\\do_an_frontend\\app\\src\\redux\\slice\\UserSlice.js",[],"F:\\do_an_frontend\\app\\src\\redux\\slice\\ManagerSlice.js",[],"F:\\do_an_frontend\\app\\src\\redux\\slice\\GroupsSlice.js",[],"F:\\do_an_frontend\\app\\src\\components\\books\\components\\detail_books\\DetailBooks.js",["350","351","352","353","354","355","356","357","358","359"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport \"./DetailBooks.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faCircleInfo, faFileLines } from \"@fortawesome/free-solid-svg-icons\";\r\nimport image from '../../../../share/image/123.jpg';\r\nimport BooksAction from '../../../../redux/action/BooksAction';\r\nimport { useParams, useSearchParams, Link, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ConstAPI from '../../../../common/const';\r\nimport DataTable from '../../../../share/ecm-base/components/data-table/DataTable';\r\nimport BookAction from '../../../../redux/action/BookAction';\r\nimport Modal from '../../../../share/ecm-base/components/modal/Modal';\r\nimport Button from '../../../../share/ecm-base/components/button/Button';\r\nimport UpdateBooks from '../update_books/UpdateBooks';\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\n\r\nconst DetailBooks = ({ prefixPath }) => {\r\n\r\n    const columnBook = [\r\n        {\r\n            title: \"Mã sách\",\r\n            dataIndex: \"code_id\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Tình trạng sách\",\r\n            dataIndex: \"status_book\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tình trạng mượn\",\r\n            dataIndex: \"status_borrow\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Người mượn\",\r\n            dataIndex: \"user_borrow\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Mã QR Code\",\r\n            dataIndex: \"qr_code_data\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n    ]\r\n\r\n    let listStatusBook = [\r\n        {\r\n            title: \"Tất cả tình trạng\",\r\n            value: \"ALL\"\r\n        },\r\n        {\r\n            title: \"Sách mới\",\r\n            value: \"NEW\"\r\n        },\r\n        {\r\n            title: \"Sách cũ\",\r\n            value: \"OLD\"\r\n        }\r\n    ]\r\n\r\n    let listStatusBorrow = [\r\n        {\r\n            title: \"Tất cả tình trạng\",\r\n            value: \"ALL\"\r\n        },\r\n        {\r\n            title: \"Đang chờ duyệt\",\r\n            value: \"WAITING\"\r\n        },\r\n        {\r\n            title: \"Chưa được mượn\",\r\n            value: \"READY\"\r\n        },\r\n        {\r\n            title: \"Đang được mượn\",\r\n            value: \"BORROWING\"\r\n        }\r\n    ]\r\n\r\n    const booksDetail = useSelector(state => state.booksReducer.detailBooks)\r\n\r\n    useEffect(() => {\r\n        BooksAction.getDetailBooksAction(dispatch, code)\r\n    }, [])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const { code } = useParams()\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listBook = useSelector(state => state.bookReducer.listBook)\r\n    const filter = useSelector(state => state.bookReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.bookReducer.pagination)\r\n\r\n    useEffect(() => {\r\n        BookAction.getListBookAction(dispatch, code, initPagingFilter)\r\n    }, [])\r\n\r\n    const [openModalUpdate, setOpenModalUpdate] = useState(false)\r\n\r\n    const handleOpenModalUpdate = () => {\r\n        setOpenModalUpdate(true)\r\n    }\r\n\r\n    const onSubmitFormUpdate = () => {\r\n        document.getElementById(\"do-an-form-update-books-button\").click();\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setOpenModalUpdate(false)\r\n    }\r\n\r\n    const [filterBook, setFilterBook] = useState(initPagingFilter)\r\n\r\n    const handleChangeSearchBook = (field, value) => {\r\n        let new_filter_book = { ...filterBook, [field]: value }\r\n        setFilterBook(new_filter_book)\r\n    }\r\n\r\n    const handleChangeDropDown = (field, value) => {\r\n        let new_filter_book = {}\r\n        if(value === \"ALL\"){\r\n            new_filter_book = { ...filterBook, [field]: \"\" }\r\n        }else{\r\n            new_filter_book = { ...filterBook, [field]: value }\r\n        }\r\n        setFilterBook(new_filter_book)\r\n\r\n        BookAction.getListBookAction(dispatch, code, new_filter_book)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            BookAction.getListBookAction(dispatch, code, filterBook)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='do-an__view-books-container'>\r\n            <div className='do-an__view-books-container__header'>\r\n                <div className='do-an__view-books-container__header__text'>\r\n                    <button\r\n                        className=\"do-an__view-books-container__header__button\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => navigate(-1)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faArrowLeft} style={{ height: \"18px\", marginTop: \"5px\", marginLeft: \"5px\" }} />\r\n                    </button>\r\n                    <div className='do-an__view-books-container__header__title'>Thông tin chi tiết sách</div>\r\n                </div>\r\n\r\n                <button\r\n                    className=\"do-an__view-books-container__header__button-edit button-search\"\r\n                    style={{ float: \"right\", margin: \"10px   \" }}\r\n                    onClick={handleOpenModalUpdate}\r\n                >\r\n                    Chỉnh sửa\r\n                </button>\r\n            </div>\r\n            <div className='do-an__view-books-container__info'>\r\n                <div className='do-an__view-books-container__info__group-info'>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Tên sách:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Mã sách:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.code}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Mô tả:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.description}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Ngày tạo:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.created_time}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Người tạo:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.created_by}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='do-an__view-books-container__info__group-info'>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Tác giả:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.author}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Tiêu đề sách:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.title}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Năm xuất bản:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.publishing_year}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Nhà xuất bản:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.origin}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Thể loại:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail?.groups?.group_name}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='do-an__view-books-container__info__avatar'>\r\n                    <img className=\"do-an-preview-image\" src={`${ConstAPI.BASE_HOST_API}${booksDetail.avatar}`}></img>\r\n                </div>\r\n            </div>\r\n            <div className='do-an__view-books-container__table'>\r\n                <div className='do-an__view-books-container__table__search'>\r\n                    <div className=\"do-an__view-books-container__table__search__filter\">\r\n                        <div className=\"do-an__view-books-container__table__search__item\">\r\n                            <div className=\"do-an__view-books-container__table__search__item__title\">\r\n                                Mã sách:\r\n                            </div>\r\n                            <div className=\"do-an__view-books-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-books-container__table__search__item__input\"\r\n                                    onChange={(event) => handleChangeSearchBook(\"code_id\", event.target.value)}\r\n                                    onKeyDown={(event) => handleKeyDown(event)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-books-container__table__search__item\">\r\n                            <div className=\"do-an__view-books-container__table__search__item__title\">\r\n                                Tình trạng sách:\r\n                            </div>\r\n                            <div className=\"do-an__view-books-container__table__search__item__input-container\">\r\n                                <DropDown\r\n                                    className=\"do-an__view-books-container__table__search__item__input\"\r\n                                    listItem={listStatusBook}\r\n                                    selected={filterBook?.status_book || \"ALL\"}\r\n                                    name=\"status_book\"\r\n                                    onSelected={handleChangeDropDown}\r\n                                >\r\n                                </DropDown>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-books-container__table__search__item\">\r\n                            <div className=\"do-an__view-books-container__table__search__item__title\">\r\n                                Tình trạng mượn:\r\n                            </div>\r\n                            <div className=\"do-an__view-books-container__table__search__item__input-container\">\r\n                                <DropDown\r\n                                    className=\"do-an__view-books-container__table__search__item__input\"\r\n                                    listItem={listStatusBorrow}\r\n                                    selected={filterBook?.status_borrow || \"ALL\"}\r\n                                    name=\"status_borrow\"\r\n                                    onSelected={handleChangeDropDown}\r\n                                >\r\n                                </DropDown>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-books-container__table__search__item\">\r\n                            <div className=\"do-an__view-books-container__table__search__item__title\">\r\n                                Người mượn:\r\n                            </div>\r\n                            <div className=\"do-an__view-books-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-books-container__table__search__item__input\"\r\n                                    onChange={(event) => handleChangeSearchBook(\"user_borrow\", event.target.value)}\r\n                                    onKeyDown={(event) => handleKeyDown(event)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DataTable headerData={columnBook}\r\n                    tableData={listBook}\r\n                    pagination={pagination}\r\n                >\r\n                </DataTable>\r\n            </div>\r\n\r\n            {openModalUpdate &&\r\n                <Modal\r\n                    title=\"Cập nhật thông tin sách\"\r\n                    width=\"70%\"\r\n                    onCancel={onCancel}\r\n                    visible={openModalUpdate}\r\n                    footer={\r\n                        <div className='do-an__modal__footer'>\r\n                            <Button\r\n                                type={\"normal-blue\"}\r\n                                onClick={onSubmitFormUpdate}\r\n                            >\r\n                                Cập nhật\r\n                            </Button>\r\n                            <Button\r\n                                type={\"normal-gray\"}\r\n                                onClick={onCancel}\r\n                            >\r\n                                Hủy bỏ\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <UpdateBooks onCloseModal={onCancel}>\r\n\r\n                    </UpdateBooks>\r\n                </Modal>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DetailBooks;","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\toasts\\Toasts.js",["360"],"import React, { useCallback, useEffect } from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleCheck, faTriangleExclamation, faCircleInfo, faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\"\r\nimport './Toasts.scss'\r\n\r\nconst Toasts = ({toastList, setList}) => {\r\n    const deleteToast = useCallback(id => {\r\n        const toastListItem = toastList.filter(e => e.id !== id)\r\n        setList(toastListItem)\r\n    }, [])\r\n\r\n    const dataToast = {\r\n        success: {\r\n            icon: <FontAwesomeIcon icon={faCircleCheck} />,\r\n            background: \"#1fb266\",\r\n        },\r\n        warning: {\r\n            icon: <FontAwesomeIcon icon={faTriangleExclamation} />,\r\n            background: \"#f1b627\",\r\n        },\r\n        info: {\r\n            icon: <FontAwesomeIcon icon={faCircleInfo} />,\r\n            background: \"#141ed2\",\r\n        },\r\n        error: {\r\n            icon: <FontAwesomeIcon icon={faTriangleExclamation} />,\r\n            background: \"#eb2d4b\",\r\n        },\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if(toastList.length){\r\n                deleteToast(toastList[0].id)\r\n            }\r\n        }, 4000)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [toastList, deleteToast])\r\n\r\n    return (\r\n        <div className='toasts-container bottom-right'>\r\n            {\r\n                toastList.map((toast) => {\r\n                    return(\r\n                        <div\r\n                            key={toast.id}\r\n                            className='notification toast bottom-right'\r\n                        >\r\n                            <div \r\n                                className='logo'\r\n                                style={{color: dataToast[toast.type].background}}\r\n                            >{dataToast[toast.type].icon}</div>\r\n                            <div className='info'>\r\n                                <div className='title'>{toast.title}</div>\r\n                                <div className='message'> {toast.message}</div>\r\n                            </div>\r\n                            <div className='button'><button onClick={() => deleteToast(toast.id)}><FontAwesomeIcon icon={faXmark} /></button></div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nToasts.prototype = {\r\n    toastList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setList: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Toasts","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\loading\\Loading.js",[],"F:\\do_an_frontend\\app\\src\\common\\const.js",[],"F:\\do_an_frontend\\app\\src\\common\\utils.js",["361"],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\data-table\\DataTable.js",["362","363","364","365","366","367","368","369"],"import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faAngleDown, faAngleUp} from \"@fortawesome/free-solid-svg-icons\";\r\nimport './DataTable.scss'\r\nimport Pagination from \"../pagination/Pagination\"\r\nimport Utils from '../../../../common/utils';\r\nimport $ from \"jquery\"\r\n\r\nconst defaulPagination =  {\r\n    page: 1,\r\n    size: 5,\r\n    totalPage: 0,\r\n    totalItem: 0,\r\n  }\r\n\r\nconst DataTable = ({tableData, headerData, pagination, sort, onSort, showPagination = true, onPageChange = Function(), onNumberItemChange = Function(), onClickRow = Function(), rowClassName}) => {\r\n    const [isDecrement, setIsDecrement] = useState(false)\r\n    const [dataView, setDataView] = useState([])\r\n    const [paginationTable, setPaginationTable] = useState(defaulPagination)\r\n\r\n    useEffect(() => {\r\n        let newPagination = setPagination();\r\n        setPaginationTable(newPagination)\r\n    },[tableData, pagination])\r\n\r\n    // $(document).ready(function () {\r\n    //     Utils.showTooltip()\r\n    // })\r\n\r\n    useEffect(() => {\r\n        let newDataView = [...tableData]\r\n        if(tableData && tableData.length > paginationTable.size ) {\r\n            newDataView = tableData?.slice((paginationTable.page - 1)* paginationTable.size, paginationTable.size * paginationTable.page);\r\n        }\r\n        setDataView(newDataView)\r\n    },[paginationTable])\r\n\r\n\r\n    const setPagination = () => {\r\n        if(pagination) {\r\n            return pagination\r\n        }\r\n        const numberTotalPage = tableData?.length > 0 ? tableData?.length/paginationTable.size : 0\r\n        const numberTotalPageFixed = Math.floor(numberTotalPage)\r\n        return {\r\n            ...paginationTable,\r\n            totalPage: numberTotalPage > numberTotalPageFixed ? numberTotalPageFixed + 1 : numberTotalPageFixed,\r\n            totalItem: tableData?.length || 0,\r\n        }\r\n    }\r\n\r\n    const handleOnPageChange = (newPage) => {\r\n        setPaginationTable({...paginationTable, page: newPage})\r\n        onPageChange(newPage)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        const numberTotalPage = tableData?.length > 0 ? tableData?.length/newSize : 0\r\n        const numberTotalPageFixed = Math.floor(numberTotalPage)\r\n        const totalPage = numberTotalPage > numberTotalPageFixed ? numberTotalPageFixed + 1 : numberTotalPageFixed\r\n        setPaginationTable({...paginationTable, size: newSize, page: newPage, totalPage: totalPage})\r\n        onNumberItemChange(newSize, newPage)\r\n    }\r\n\r\n    const data = dataView?.map((row, index) => {\r\n        let rowData = [];\r\n        for (let header of headerData) {\r\n            rowData.push({\r\n                key: header.dataIndex,\r\n                value: header.render ? header.render(row[header.dataIndex], row): row[header.dataIndex],\r\n                className: header?.className ? header?.className : \"\",\r\n                titleClassName: header?.titleClassName ? header?.titleClassName : \"\",\r\n                properties: header?.propertiesRow ? header?.propertiesRow(row) : {}\r\n            });\r\n        }\r\n        return (\r\n            <tr className={(rowClassName) ? rowClassName(row) : \"\"} key={index} onClick={(e) => {onClickRow(row, e)}}\r\n            >\r\n                {paginationTable ? <td>{(paginationTable.page - 1) * paginationTable.size + index + 1}</td>:\r\n                              <td>{index + 1}</td>}\r\n                {rowData.map((item, indexItem) => {\r\n                        return (<td key={indexItem} className={item.className} {...item.properties}>\r\n                            {item.value}\r\n                        </td>)\r\n                    }\r\n                )}\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    // Show a spinner while the profile is loading\r\n\r\n    const handleSort = (field, value) => {\r\n        if (sort && field === \"Ngày tạo\") {\r\n            setIsDecrement(value)\r\n\r\n            const elements = document.getElementsByClassName(\"table-container__table__header\");\r\n            for (let element of elements) {\r\n                const title = element.childNodes[0]\r\n                const buttonSort = element.childNodes[1]\r\n                buttonSort.classList.add(\"table-container__hidden\")\r\n                if (title.textContent === field && title.id != \"table-container-no\") {\r\n                    buttonSort.classList.remove(\"table-container__hidden\")\r\n                    if (onSort) {\r\n                        onSort(field, value ? \"desc\" : \"asc\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='table-container'>\r\n            <div className='table-container__content'>\r\n            <table className='table-container__table'>\r\n                <thead>\r\n                <tr>\r\n                    <th style={{width:\"5%\"}}>\r\n                        <div className='table-container__table__header'>\r\n                            <div id=\"table-container-no\" className='table-container__table__header__title'>STT</div>\r\n                            <div className='table-container__table__header__btn-sort table-container__hidden'>\r\n                                <FontAwesomeIcon icon={isDecrement ? faAngleDown : faAngleUp}/>\r\n                            </div>\r\n                        </div>\r\n                    </th>\r\n                    {headerData.map((col, index) => (\r\n                        <th style={{width: col.width}} key={index}>\r\n                            <div className={`table-container__table__header ${col.titleClassName ? col.titleClassName : \"\"}`}\r\n                                 onClick={() => handleSort(col.title, !isDecrement)}>\r\n                                <div className='table-container__table__header__title'>{col.title}</div>\r\n                                {<div className='table-container__table__header__btn-sort table-container__hidden'>\r\n                                    <FontAwesomeIcon icon={isDecrement ? faAngleDown : faAngleUp}/>\r\n                                </div>}\r\n                            </div>\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n                </thead>\r\n                <React.Suspense fallback={<div>Loading...</div>}>\r\n                    <tbody>\r\n                    {(tableData && tableData.length >= 1) && data}\r\n                    </tbody>\r\n                </React.Suspense>\r\n\r\n            </table>\r\n            </div>\r\n            {(!tableData || tableData.length < 1) &&\r\n            <div className='empty'>\r\n                <div className='logo'></div>\r\n                <div className='text'>Không có dữ liệu</div>\r\n            </div>\r\n            }\r\n            {showPagination && <Pagination\r\n                pagination={paginationTable}\r\n                onPageChange={handleOnPageChange}\r\n                onNumberItemChange={handleNumberItemChange}\r\n            ></Pagination>}\r\n        </div>\r\n    )\r\n}\r\n\r\nDataTable.propTypes = {\r\n    tableData: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    headerData: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onPageChange: PropTypes.func,\r\n    onNumberItemChange: PropTypes.func,\r\n    pagination: PropTypes.object,\r\n    sort: PropTypes.bool,\r\n    onSort: PropTypes.func,\r\n    showPagination: PropTypes.bool,\r\n}\r\n\r\nexport default DataTable","F:\\do_an_frontend\\app\\src\\redux\\action\\BooksAction.js",["370","371"],"import { openNotificationCommon, startLoading, stopLoading } from \"../../common/const\";\r\nimport Utils from \"../../common/utils\";\r\nimport booksService from \"../../redux/service/BooksService\";\r\nimport BooksService from \"../../redux/service/BooksService\";\r\nimport { BooksSlice } from \"../../redux/slice/BooksSlice\";\r\n\r\n/**\r\n *[LiST] - Get list Project Action\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\nconst getListBooksAction = async (dispatch, paging) => {\r\n  try {\r\n    // get response from api\r\n    const response = await BooksService.getList(paging);\r\n    if (\r\n      Utils.isNotNullOrUndefined(response) &&\r\n      Utils.isNotNullOrUndefined(response.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data.result) &&\r\n      Utils.isNotNullOrUndefined(response.data.data.pagination)\r\n    ) {\r\n      var listResults = response.data.data.result;\r\n      var pagingResult = response.data.data.pagination;\r\n\r\n      // dispath data to reducer\r\n      dispatch(\r\n        BooksSlice.actions.loadListBooksReducer(\r\n          listResults\r\n        )\r\n      );\r\n\r\n      // dispatch paging\r\n      dispatch(\r\n        BooksSlice.actions.setPagination({\r\n          page: pagingResult.page,\r\n          size: pagingResult.limit,\r\n          totalPage: pagingResult.total_page,\r\n          totalItem: pagingResult.total_records,\r\n        })\r\n      );\r\n    } else {\r\n      // dispath data to reducer - empty\r\n      dispatch(\r\n        BooksSlice.actions.loadListBooksReducer([])\r\n      );\r\n      dispatch(\r\n        BooksSlice.actions.setPagination({\r\n          page: 1,\r\n          size: paging.size,\r\n          totalPage: 0,\r\n          totalItem: 0,\r\n        })\r\n      );\r\n    }\r\n  } catch (err) {\r\n    console.log(\"getListBooksAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n *[LiST] - Load Filter Data\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\nconst updateBooksFilterAction = (dispatch, filter, newFilter) => {\r\n  // dispath data to reducer\r\n  dispatch(\r\n    BooksSlice.actions.loadPaginationFilter(filter)\r\n  );\r\n};\r\n\r\nconst updateBooksPagination = (dispatch, pagination) => {\r\n  dispatch(\r\n    BooksSlice.actions.setPagination(pagination)\r\n  );\r\n}\r\n\r\n/**\r\n * [CREATE] - Create Project data\r\n * @param {*} formData\r\n */\r\nexport const createBooksAction = async (formData, dispatch, filter) => {\r\n  try {\r\n    const response = await BooksService.create(\r\n      formData\r\n    );\r\n\r\n    if (response.data.status === 201) {\r\n      openNotificationCommon(\"success\", \"Thông báo\", \"Thêm mới sách thành công!\")\r\n      getListBooksAction(dispatch, filter)\r\n      return true\r\n    } else {\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Thêm mới sách thất bại!\")\r\n    }\r\n    return response\r\n  } catch (err) {\r\n    console.log(\"createBooksAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n};\r\n\r\nconst getDetailBooksAction = async (dispatch, code) => {\r\n  try {\r\n    const response = await booksService.getDetail(code)\r\n    console.log(response);\r\n    if (\r\n      Utils.isNotNullOrUndefined(response) &&\r\n      Utils.isNotNullOrUndefined(response.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data)\r\n    ) {\r\n      dispatch(\r\n        BooksSlice.actions.saveDetailBooks(\r\n          response.data.data\r\n        )\r\n      )\r\n    }\r\n  } catch (error) {\r\n    console.log(\"BooksAction || getDetail || Cause by \", error)\r\n  };\r\n}\r\n\r\nconst updateBooksAction = async (dispatch,code, formData) => {\r\n  try {\r\n    const response = await booksService.updateBooks(code, formData)\r\n    if (response.data.status === 200){\r\n      openNotificationCommon(\"success\", \"Thông báo\", `Cập nhật thành công!`)\r\n      dispatch(\r\n            BooksSlice.actions.saveDetailBooks(\r\n              response.data.data\r\n            )\r\n      )\r\n      return true\r\n  }else{\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Cập nhật thất bại!`)\r\n  }\r\n    return false;\r\n  } catch (err) {\r\n    console.log(\"UpdateBooks Action - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n}\r\n\r\nconst removeBooks = async (dispatch, code, filter) => {\r\n  try {\r\n      const response = await booksService.remove(code)\r\n      if (response.data.status === 204){\r\n          openNotificationCommon(\"success\", \"Thông báo\", `Xóa sách ${code} thành công!`)\r\n          getListBooksAction(dispatch, filter)\r\n          return true\r\n      }else{\r\n          openNotificationCommon(\"error\", \"Thông báo\", `Xóa sách ${code} thất bại!`)\r\n      }\r\n      return false\r\n  } catch (error) {\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Xóa sách ${code} thất bại!`)\r\n      console.log(\"BooksAction || remove || Cause by \", error)\r\n      return false\r\n  }\r\n}\r\n\r\n\r\nconst BooksAction = {\r\n  getListBooksAction,\r\n  updateBooksFilterAction,\r\n  updateBooksPagination,\r\n  createBooksAction,\r\n  getDetailBooksAction,\r\n  updateBooksAction,\r\n  removeBooks\r\n}\r\n\r\nexport default BooksAction;\r\n","F:\\do_an_frontend\\app\\src\\redux\\action\\BookAction.js",["372","373"],"import { openNotificationCommon, startLoading, stopLoading } from \"../../common/const\";\r\nimport Utils from \"../../common/utils\";\r\nimport BookService from \"../../redux/service/BookService\";\r\nimport { BookSlice } from \"../../redux/slice/BookSlice\";\r\n\r\n/**\r\n *[LiST] - Get list Project Action\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\n const getListBookAction = async (dispatch,code_books ,paging) => {\r\n    try {\r\n      console.log(paging);\r\n      // get response from api\r\n      const response = await BookService.getListBook(paging, code_books);\r\n      if (\r\n        Utils.isNotNullOrUndefined(response) &&\r\n        Utils.isNotNullOrUndefined(response.data) &&\r\n        Utils.isNotNullOrUndefined(response.data.data) &&\r\n        Utils.isNotNullOrUndefined(response.data.data.result) &&\r\n        Utils.isNotNullOrUndefined(response.data.data.pagination)\r\n      ) {\r\n        var listResults = response.data.data.result;\r\n        var pagingResult = response.data.data.pagination;\r\n  \r\n        // dispath data to reducer\r\n        dispatch(\r\n          BookSlice.actions.loadListBookReducer(\r\n            listResults\r\n          )\r\n        );\r\n  \r\n        // dispatch paging\r\n        dispatch(\r\n          BookSlice.actions.setPagination({\r\n            page: pagingResult.page,\r\n            size: pagingResult.limit,\r\n            totalPage: pagingResult.total_page,\r\n            totalItem: pagingResult.total_records,\r\n          })\r\n        );\r\n      } else {\r\n        // dispath data to reducer - empty\r\n        dispatch(\r\n          BookSlice.actions.loadListBookReducer([])\r\n        );\r\n        dispatch(\r\n            BookSlice.actions.setPagination({\r\n            page: 1,\r\n            size: paging.size,\r\n            totalPage: 0,\r\n            totalItem: 0,\r\n          })\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.log(\"getListBookAction - error: \", err);\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  /**\r\n   *[LiST] - Load Filter Data\r\n   *\r\n   * @param {*} dispatch\r\n   * @param {*} params\r\n   */\r\n  const updateBookFilterAction = (dispatch, filter, newFilter) => {\r\n    // dispath data to reducer\r\n    dispatch(\r\n      BookSlice.actions.loadPaginationFilter(filter)\r\n    );\r\n  };\r\n\r\n  const updateBookPagination = (dispatch, pagination) => {\r\n    dispatch(\r\n        BookSlice.actions.setPagination(pagination)\r\n      );\r\n  }\r\n\r\nconst getDetailBookAction = async (dispatch, code_id) => {\r\n  try {\r\n      const response = await BookService.getDetailBook(code_id)\r\n    console.log(response);\r\n      if (\r\n          Utils.isNotNullOrUndefined(response) &&\r\n          Utils.isNotNullOrUndefined(response.data) &&\r\n          Utils.isNotNullOrUndefined(response.data.data) \r\n      ){\r\n          dispatch(\r\n              BookSlice.actions.saveDetailBook(\r\n                  response.data.data\r\n              )\r\n          )\r\n          return response\r\n      }\r\n  } catch (error) {\r\n      console.log(\"BooksAction || getDetail || Cause by \", error)\r\n  }\r\n  \r\n}\r\n\r\n\r\n const BookAction = {\r\n    getListBookAction,\r\n    updateBookFilterAction,\r\n    updateBookPagination,\r\n    getDetailBookAction\r\n } \r\n\r\n export default BookAction;\r\n","F:\\do_an_frontend\\app\\src\\redux\\action\\UserAction.js",[],"F:\\do_an_frontend\\app\\src\\redux\\action\\ManagerAction.js",[],"F:\\do_an_frontend\\app\\src\\redux\\action\\VoucherAction.js",["374","375"],"import { openNotificationCommon, startLoading, stopLoading } from \"../../common/const\";\r\nimport Utils from \"../../common/utils\";\r\nimport VoucherService from \"../service/VoucherService\";\r\nimport { VoucherSlice } from \"../slice/VoucherSlice\";\r\n\r\n/**\r\n *[LiST] - Get list Project Action\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\nconst getListVoucherAction = async (dispatch, paging) => {\r\n  try {\r\n    // get response from api\r\n    const response = await VoucherService.getList(paging);\r\n    if (\r\n      Utils.isNotNullOrUndefined(response) &&\r\n      Utils.isNotNullOrUndefined(response.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data.result) &&\r\n      Utils.isNotNullOrUndefined(response.data.data.pagination)\r\n    ) {\r\n      var listResults = response.data.data.result;\r\n      var pagingResult = response.data.data.pagination;\r\n\r\n      // dispath data to reducer\r\n      dispatch(\r\n        VoucherSlice.actions.loadListVoucherReducer(\r\n          listResults\r\n        )\r\n      );\r\n      console.log(listResults);\r\n\r\n      // dispatch paging\r\n      dispatch(\r\n        VoucherSlice.actions.setPagination({\r\n          page: pagingResult.page,\r\n          size: pagingResult.limit,\r\n          totalPage: pagingResult.total_page,\r\n          totalItem: pagingResult.total_records,\r\n        })\r\n      );\r\n    } else {\r\n      // dispath data to reducer - empty\r\n      dispatch(\r\n        VoucherSlice.actions.loadListVoucherReducer([])\r\n      );\r\n      dispatch(\r\n        VoucherSlice.actions.setPagination({\r\n          page: 1,\r\n          size: paging.size,\r\n          totalPage: 0,\r\n          totalItem: 0,\r\n        })\r\n      );\r\n    }\r\n  } catch (err) {\r\n    console.log(\"getListVoucherAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n *[LiST] - Load Filter Data\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\nconst updateVoucherFilterAction = (dispatch, filter, newFilter) => {\r\n  // dispath data to reducer\r\n  dispatch(\r\n    VoucherSlice.actions.loadPaginationFilter(filter)\r\n  );\r\n};\r\n\r\nconst updateVoucherPagination = (dispatch, pagination) => {\r\n  dispatch(\r\n    VoucherSlice.actions.setPagination(pagination)\r\n  );\r\n}\r\n\r\nconst createVoucherAction = async (formData, dispatch, filter) => {\r\n  try {\r\n    const response = await VoucherService.create(\r\n      formData\r\n    );\r\n\r\n    if (response.data.status === 201) {\r\n      openNotificationCommon(\"success\", \"Thông báo\", \"Thêm mới phiếu mượn thành công!\")\r\n      getListVoucherAction(dispatch, filter)\r\n      return true\r\n    } else {\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Thêm mới phiếu mượn thất bại!\")\r\n    }\r\n    return response\r\n  } catch (err) {\r\n    console.log(\"createVoucherAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n}\r\n\r\nconst getDetailVoucherAction = async (dispatch, voucher_id) => {\r\n  try {\r\n    const response = await VoucherService.getDetail(voucher_id)\r\n    console.log(response);\r\n    if (\r\n      Utils.isNotNullOrUndefined(response) &&\r\n      Utils.isNotNullOrUndefined(response.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data)\r\n    ) {\r\n      dispatch(\r\n        VoucherSlice.actions.saveDetailVoucher(\r\n          response.data.data\r\n        )\r\n      )\r\n      return response.data.data\r\n    }\r\n  } catch (error) {\r\n    console.log(\"BooksAction || getDetail || Cause by \", error)\r\n  };\r\n}\r\n\r\nconst updateVoucherAction = async (dispatch, voucher_id, formData) => {\r\n  try {\r\n    const response = await VoucherService.updateVoucher(voucher_id, formData)\r\n    if (response.data.status === 200){\r\n      openNotificationCommon(\"success\", \"Thông báo\", `Cập nhật thành công!`)\r\n      dispatch(\r\n            VoucherSlice.actions.saveDetailVoucher(\r\n              response.data.data\r\n            )\r\n      )\r\n      return true\r\n  }else{\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Cập nhật thất bại!`)\r\n  }\r\n    return false;\r\n  } catch (err) {\r\n    console.log(\"UpdateBooks Action - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n}\r\n\r\nconst updateStatusVoucher = async (dispatch, voucher_id, status_update, filter) => {\r\n  try {\r\n    const response = await VoucherService.updateStatus(voucher_id, status_update)\r\n    if (response.data.status === 200) {\r\n      openNotificationCommon(\"success\", \"Thông báo\", `Cập nhật thành công!`)\r\n      dispatch(\r\n        VoucherSlice.actions.saveDetailVoucher(\r\n          response.data.data\r\n        )\r\n      )\r\n      VoucherAction.getListVoucherAction(dispatch, filter)\r\n      return true\r\n    } else {\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Cập nhật thất bại!`)\r\n    }\r\n    return false\r\n  } catch (error) {\r\n    console.log(\"BooksAction || getDetail || Cause by \", error)\r\n  };\r\n}\r\n\r\nconst VoucherAction = {\r\n  getListVoucherAction,\r\n  updateVoucherFilterAction,\r\n  updateVoucherPagination,\r\n  createVoucherAction,\r\n  getDetailVoucherAction,\r\n  updateStatusVoucher,\r\n  updateVoucherAction\r\n}\r\n\r\nexport default VoucherAction;","F:\\do_an_frontend\\app\\src\\components\\books\\components\\create_books\\CreateBooks.js",["376","377","378"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './CreateBooks.scss';\r\nimport image2 from '../../../../share/image/123.jpg';\r\nimport ConstAPI from '../../../../common/const';\r\nimport constImage from \"../../../../common/constImage\";\r\nimport BooksAction from \"../../../../redux/action/BooksAction\";\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport GroupsAction from \"../../../../redux/action/GroupsAction\";\r\n\r\n\r\nconst CreateBooks = ({ onCloseModal }) => {\r\n\r\n    const { setValue, register, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(image2)\r\n    const filter = useSelector(state => state.booksReducer.paginationFilter)\r\n    const listGroups = useSelector(state => state.groupsReducer.listGroups)\r\n\r\n    const [formCreate, setFormCreate] = useState(\r\n        {\r\n            name: \"\",\r\n            description: \"\",\r\n            title: \"\",\r\n            author: \"\",\r\n            name_university: \"\",\r\n            publishing_year: \"\",\r\n            origin: \"\",\r\n            group_code: \"GROUPS_1673458766\",\r\n            amount: 1,\r\n            avatar: null\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        GroupsAction.getListGroupsAction(dispatch)\r\n        setValue(\"amount\", formCreate.amount)\r\n    }, [])\r\n\r\n\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState([])\r\n\r\n    useEffect(() => {\r\n        let listGrgoupsDropDown = listGroups.map((item) => {\r\n            return {\r\n                title: item?.group_name,\r\n                value: item?.group_code\r\n            }\r\n        })\r\n        setListDefaultDropDown([...listGrgoupsDropDown])\r\n    }, [listGroups])\r\n\r\n    const checkFileTypeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { type } = files[0];\r\n            return (constImage.LIST_FILE_TYPE_AVATAR.findIndex(item => `IMAGE/${item}` === type.toLocaleUpperCase()) > -1)\r\n        }\r\n        return true\r\n    }\r\n    const checkFileSizeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { size } = files[0];\r\n            return (size / 1024 / 1024 <= 5)\r\n        }\r\n        return true\r\n    }\r\n\r\n    const onImageChange = async (event) => {\r\n        if (event.target.files && event.target.files[0] && event.target.files[0]['type'].split('/')[0] === 'image') {\r\n            console.log(event.target.files);\r\n\r\n            setImage(URL.createObjectURL(event.target.files[0]));\r\n            handleChangeInput(\"avatar\", event.target.files[0])\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        console.log(value, field);\r\n        const newFormData = { ...formCreate, [field]: value };\r\n        setFormCreate(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        BooksAction.createBooksAction(formCreate, dispatch, filter)\r\n        onCloseModal()\r\n    }\r\n\r\n    console.log(formCreate);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <form id=\"do-an-form-create-books\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n            <div className=\"do-an-form-create-books__body\">\r\n                {/* <div className=\"do-an-form-create-books__body__title\">\r\n                    Thông tin:\r\n                </div> */}\r\n\r\n                <div className=\"do-an-form-create-books__body__content\">\r\n                    <div className=\"do-an-form-create-books__body__content__info\">\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Tên Sách: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên sách không được trống!</div>}\r\n                                {errors.name?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Thể loại: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <DropDown className=\"do-an-dropdown-create\"\r\n                                    listItem={listDefaultDropDown}\r\n                                    selected={formCreate.group_code || listDefaultDropDown[0]?.value}\r\n                                    name=\"group_code\"\r\n                                    onSelected={handleChangeInput}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Mô tả:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"description\",\r\n                                        {\r\n                                            maxLength: 500,\r\n                                            onChange: (e) => handleChangeInput(\"description\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.description?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Mô tả sách không được vượt quá 500 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Tiêu đề: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"title\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"title\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.title?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tiêu đề sách không được trống!</div>}\r\n                                {errors.title?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tiêu đề sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Tác giả: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"author\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"author\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.author?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tác giả sách không được trống!</div>}\r\n                                {errors.author?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tác giả sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Thuộc đại học: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name_university\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"name_university\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name_university?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học sở hữu sách không được vượt quá 100 ký tự!</div>}\r\n                                {errors.name_university?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học sở hữu sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Năm xuất bản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"publishing_year\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 4,\r\n                                            onChange: (e) => handleChangeInput(\"publishing_year\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                    type=\"number\"\r\n                                />\r\n                                {errors.publishing_year?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Năm xuất bản sách không được trống!</div>}\r\n                                {errors.publishing_year?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Năm xuất bản sách không được vượt quá 4 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Nhà xuất bản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"origin\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"origin\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.origin?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Nhà xuất bản sách không được trống!</div>}\r\n                                {errors.origin?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Nhà xuất bản sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Nhập số lượng: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    type={\"number\"}\r\n                                    className={`do-an__input do-an-input-name input-number ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"amount\",\r\n                                        {\r\n                                            min: 1,\r\n                                            onChange: (e) => handleChangeInput(\"amount\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.amount?.type === \"min\" &&\r\n                                    <div className=\"input-value-error\">Số lượng sách không được nhỏ hơn 0!</div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an-form-create-books__body__content__avatar\">\r\n                        <div className=\"do-an-form-create-books__body__group-input__input-add-image\">\r\n                            <div>\r\n                                <input type=\"file\" accept=\"image/*\" className={`ocr-designer-input-add-image ${errors.image ? 'is-invalid' : ''}`}\r\n                                    {...register(\"avatar\",\r\n                                        {\r\n                                            onChange: (e) => onImageChange(e),\r\n                                            required: true,\r\n                                            validate: {\r\n                                                checkFileType: files => checkFileTypeAvatar(files) || `Ảnh đại diện chỉ nhận các file ${constImage.LIST_FILE_TYPE_AVATAR.join(\", \")}`,\r\n                                                checkFileSize: files => checkFileSizeAvatar(files) || \"Ảnh đại diện không vượt quá 5MB\"\r\n                                            }\r\n                                        }\r\n                                    )} />\r\n                                {errors.avatar?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Ảnh sách không được trống!</div>}\r\n                                {errors.avatar?.message &&\r\n                                    <div className=\"input-value-error\">{errors.avatar?.message}</div>}\r\n                            </div>\r\n                            <img className=\"do-an-preview-image\" src={image}></img>\r\n                            <div className=\"do-an-title-avatar\">\r\n                                Ảnh đại diện\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button id=\"do-an-form-create-books-button\" type=\"submit\" hidden={true}></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateBooks;","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown-v2\\DropDown.js",["379","380"],"import React, { useState } from 'react'\r\nimport './DropDown.scss'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst DropDown = ({ className, name, selected, listItem, onSelected, placeholder, placement = \"bottom\", disable = false , indexTable}) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    return (\r\n        <div className={`${className ? className : \"\"} dropdown-container ${disable === true ? \"dropdown-container__no-drop\" : \"\"}`}>\r\n            <div\r\n                className={`dropdown-container__overlay ${isOpen ? \"dropdown-container__overlay__active\" : \"\"}`}\r\n                onClick={() => setIsOpen(!isOpen)}\r\n            ></div>\r\n            <div className={`dropdown-container__header`}\r\n                onClick={() => {\r\n                    if (disable === false ) {\r\n                        setIsOpen(!isOpen)\r\n                    } else {\r\n                        setIsOpen(false)\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <div className='dropdown-container__header__text'>\r\n                    {(selected !== \"undefine\" && selected !== \"\") ? listItem?.find(item => item.value === selected)?.title : placeholder}\r\n                </div>\r\n                <div\r\n                    className='dropdown-container__header__icon'\r\n                >\r\n                    <FontAwesomeIcon icon={(placement == \"top\") ? faAngleUp : faAngleDown} />\r\n                </div>\r\n            </div>\r\n            <div className={`ecm-base__scroll dropdown-container__select-box ${isOpen ? \"open\" : \"\"} ${(placement == \"top\") ? \"dropdown-container__select-box__top\" : \"\"}`}>\r\n                {\r\n                    listItem.map((item, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className='dropdown-container__select-box__item'\r\n                            onClick={() => {\r\n                                onSelected(name, item.value, indexTable)\r\n                                setIsOpen(!isOpen)\r\n                            }}\r\n                        >{item.title}</div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nDropDown.propTypes = {\r\n    className: PropTypes.string,\r\n    name: PropTypes.string,\r\n    selected: PropTypes.string,\r\n    listItem: PropTypes.arrayOf(PropTypes.any),\r\n    onSelected: PropTypes.func,\r\n    placement: PropTypes.string\r\n}\r\n\r\nexport default DropDown","F:\\do_an_frontend\\app\\src\\redux\\action\\GroupsAction.js",["381","382"],"import { openNotificationCommon, startLoading, stopLoading } from \"../../common/const\";\r\nimport Utils from \"../../common/utils\";\r\nimport GroupsService from \"../../redux/service/GroupsService\";\r\nimport { GroupsSlice } from \"../../redux/slice/GroupsSlice\";\r\n\r\n/**\r\n *[LiST] - Get list Project Action\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\n const getListGroupsAction = async (dispatch) => {\r\n    try {\r\n      // get response from api\r\n      const response = await GroupsService.getList();\r\n      console.log(response);\r\n      if (\r\n        Utils.isNotNullOrUndefined(response) &&\r\n        Utils.isNotNullOrUndefined(response.data) &&\r\n        Utils.isNotNullOrUndefined(response.data.data) &&\r\n        Utils.isNotNullOrUndefined(response.data.data.result)\r\n      ) {\r\n        var listResults = response.data.data.result;\r\n    \r\n        // dispath data to reducer\r\n        dispatch(\r\n          GroupsSlice.actions.loadListGroupsReducer(\r\n            listResults\r\n          )\r\n        );\r\n  \r\n      } else {\r\n        // dispath data to reducer - empty\r\n        dispatch(\r\n            GroupsSlice.actions.loadListGroupsReducer([])\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.log(\"getListGroupsAction - error: \", err);\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n      return null;\r\n    }\r\n  };\r\n\r\n\r\n const GroupsAction = {\r\n    getListGroupsAction\r\n } \r\n\r\n export default GroupsAction;\r\n","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\modal\\Modal.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\LoginService.js",["383"],"import { axiosClient, httpAccess, JSON_CONTENT_TYPE } from \"../../common/http-commons\";\r\nimport Utils from \"../../common/utils\";\r\nimport CommonService from \"./commonService\";\r\n\r\nconst login = async (dataLogin) => {\r\n    var loginResponse = null;\r\n    try {\r\n        const loginPath = process.env.REACT_APP_LOGIN_MANAGER_PATH;\r\n        loginResponse = await httpAccess(JSON_CONTENT_TYPE).post(\r\n            loginPath, JSON.stringify(dataLogin));\r\n        return loginResponse;\r\n    } catch (error) {\r\n        console.log(\"[Login]- Fail\", error);\r\n        return CommonService.errorServiceHandle(error);\r\n    }\r\n\r\n}\r\n\r\nconst changePassword = async (dataPassChange) => {\r\n    try {\r\n        const dataPassword = {\r\n            oldpass: dataPassChange.oldpass,\r\n            newpass: dataPassChange.newpass\r\n        }\r\n\r\n        return axiosClient.put(process.env.REACT_APP_CHANGE_PASSWORD_PATH, dataPassword);\r\n    } catch (error) {\r\n        console.log(\"[Manager - ChangePassword]\", error);\r\n    }\r\n}\r\n\r\nconst forgetPassword = async (email, role) => {\r\n    try {\r\n        // const dataPassword = {\r\n        //     oldpass: dataPassChange.oldpass,\r\n        //     newpass: dataPassChange.newpass\r\n        // }\r\n\r\n        return axiosClient.put(process.env.REACT_APP_FORGOT_PASSWORD_PATH.replace(\"{role}\", role) ,email);\r\n    } catch (error) {\r\n        console.log(\"[Manager - ChangePassword]\", error);\r\n    }\r\n}\r\n\r\nconst LoginService = {\r\n    login,\r\n    changePassword,\r\n    forgetPassword\r\n}\r\n\r\nexport default LoginService;","F:\\do_an_frontend\\app\\src\\components\\user\\components\\create_user\\CreateUser.js",["384","385","386","387","388","389","390"],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\confirm\\Confirm.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\button\\Button.js",[],"F:\\do_an_frontend\\app\\src\\redux\\action\\LoginAction.js",[],"F:\\do_an_frontend\\app\\src\\components\\manager\\get-detail-manager\\DetailManager.js",["391","392","393","394","395","396","397"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport \"./DetailManager.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faCircleInfo, faFileLines } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ConstAPI from '../../../common/const';\r\nimport ManagerAction from '../../../redux/action/ManagerAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst DetailManager = ({ detailManager }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const managerDetail = useSelector(state => state.managerReducer.detailManager)\r\n\r\n    useEffect(() => {\r\n        ManagerAction.getDetailManagerAction(dispatch, detailManager)\r\n    }, [detailManager])\r\n\r\n    return (\r\n        <div className='do-an__view-manager-container'>\r\n            <div className='do-an__view-manager-container__info'>\r\n                <div className='do-an__view-manager-container__info__group-info'>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Tên quản lý:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Mã người dùng:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.code}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Ngày sinh:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.date_of_birth}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Giới tính:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.gender}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Khóa:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.course}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='do-an__view-manager-container__info__group-info'>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Tên đại học:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.university}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Số điện thoại:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.phone}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Email:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.email}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Tài khoản:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.user_name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Ngày tạo:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.created_time}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='do-an__view-manager-container__info__avatar'>\r\n                    <img className=\"do-an-preview-image\" src={`${ConstAPI.BASE_HOST_API}${managerDetail?.avatar}`}></img>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DetailManager;","F:\\do_an_frontend\\app\\src\\components\\manager\\create-manager\\CreateManager.js",["398","399","400","401","402","403","404"],"F:\\do_an_frontend\\app\\src\\components\\books\\components\\update_books\\UpdateBooks.js",["405","406","407","408"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './UpdateBooks.scss';\r\nimport image2 from '../../../../share/image/123.jpg';\r\nimport ConstAPI from '../../../../common/const';\r\nimport constImage from \"../../../../common/constImage\";\r\nimport BooksAction from \"../../../../redux/action/BooksAction\";\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport GroupsAction from \"../../../../redux/action/GroupsAction\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst UpdateBooks = ({ onCloseModal }) => {\r\n\r\n    const { register, setValue, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(image2)\r\n    const filter = useSelector(state => state.booksReducer.paginationFilter)\r\n    const listGroups = useSelector(state => state.groupsReducer.listGroups)\r\n    const booksDetail = useSelector(state => state.booksReducer.detailBooks)\r\n\r\n    const { code } = useParams()\r\n\r\n    useEffect(() => {\r\n        BooksAction.getDetailBooksAction(dispatch, code)\r\n        GroupsAction.getListGroupsAction(dispatch)\r\n    }, [])\r\n\r\n    const [formUpdateBooks, setFormUpdateBooks] = useState({})\r\n\r\n    useEffect(() => {\r\n        setValue(\"name\", booksDetail?.name)\r\n        setValue(\"description\", booksDetail?.description)\r\n        setValue(\"title\", booksDetail?.title)\r\n        setValue(\"author\", booksDetail?.author)\r\n        setValue(\"name_university\", booksDetail?.name_university)\r\n        setValue(\"publishing_year\", booksDetail?.publishing_year)\r\n        setValue(\"origin\", booksDetail?.origin)\r\n        setValue(\"group_code\", booksDetail?.group_code)\r\n        setImage(`${ConstAPI.BASE_HOST_API}${booksDetail?.avatar}`)\r\n        setFormUpdateBooks({\r\n            \"name\": booksDetail?.name,\r\n            \"description\": booksDetail?.description,\r\n            \"title\": booksDetail?.title,\r\n            \"author\": booksDetail?.author,\r\n            \"name_university\": booksDetail?.name_university,\r\n            \"publishing_year\": booksDetail?.publishing_year,\r\n            \"origin\": booksDetail?.origin,\r\n            \"group_code\": booksDetail?.group_code,\r\n        })\r\n    }, [booksDetail])\r\n\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState([])\r\n\r\n    useEffect(() => {\r\n        let listGrgoupsDropDown = listGroups.map((item) => {\r\n            return {\r\n                title: item?.group_name,\r\n                value: item?.group_code\r\n            }\r\n        })\r\n        setListDefaultDropDown([...listGrgoupsDropDown])\r\n    }, [listGroups])\r\n\r\n    const checkFileTypeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { type } = files[0];\r\n            return (constImage.LIST_FILE_TYPE_AVATAR.findIndex(item => `IMAGE/${item}` === type.toLocaleUpperCase()) > -1)\r\n        }\r\n        return true\r\n    }\r\n    const checkFileSizeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { size } = files[0];\r\n            return (size / 1024 / 1024 <= 5)\r\n        }\r\n        return true\r\n    }\r\n\r\n    const onImageChange = async (event) => {\r\n        if (event.target.files && event.target.files[0] && event.target.files[0]['type'].split('/')[0] === 'image') {\r\n            console.log(event.target.files);\r\n\r\n            setImage(URL.createObjectURL(event.target.files[0]));\r\n            handleChangeInput(\"avatar\", event.target.files[0])\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        const newFormData = { ...formUpdateBooks, [field]: value };\r\n        setFormUpdateBooks(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        BooksAction.updateBooksAction(dispatch, code, formUpdateBooks)\r\n        onCloseModal()\r\n    }\r\n\r\n    return (\r\n        <form id=\"do-an-form-update-books\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n            <div className=\"do-an-form-update-books__body\">\r\n                {/* <div className=\"do-an-form-update-books__body__title\">\r\n                    Thông tin:\r\n                </div> */}\r\n\r\n                <div className=\"do-an-form-update-books__body__content\">\r\n                    <div className=\"do-an-form-update-books__body__content__info\">\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Tên Sách: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên sách không được trống!</div>}\r\n                                {errors.name?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Thể loại: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <DropDown className=\"do-an-dropdown-update\"\r\n                                    listItem={listDefaultDropDown}\r\n                                    selected={formUpdateBooks.group_code || listDefaultDropDown[0]?.value}\r\n                                    name=\"group_code\"\r\n                                    onSelected={handleChangeInput}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Mô tả:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"description\",\r\n                                        {\r\n                                            maxLength: 500,\r\n                                            onChange: (e) => handleChangeInput(\"description\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.description?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Mô tả sách không được vượt quá 500 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Tiêu đề: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"title\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"title\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.title?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tiêu đề sách không được trống!</div>}\r\n                                {errors.title?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tiêu đề sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Tác giả: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"author\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"author\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.author?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tác giả sách không được trống!</div>}\r\n                                {errors.author?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tác giả sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Thuộc đại học: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name_university\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"name_university\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name_university?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học sở hữu sách không được trống!</div>}\r\n                                {errors.name_university?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học sở hữu sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Năm xuất bản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name input-number ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"publishing_year\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 4,\r\n                                            onChange: (e) => handleChangeInput(\"publishing_year\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.publishing_year?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Năm xuất bản sách không được trống!</div>}\r\n                                {errors.publishing_year?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Năm xuất bản sách không được vượt quá 4 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Nhà xuất bản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"origin\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"origin\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.author?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Nhà xuất bản sách không được trống!</div>}\r\n                                {errors.origin?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Nhà xuất bản sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an-form-update-books__body__content__avatar\">\r\n                        <div className=\"do-an-form-update-books__body__group-input__input-add-image\">\r\n                            <div>\r\n                                <input type=\"file\" accept=\"image/*\" className={`ocr-designer-input-add-image ${errors.image ? 'is-invalid' : ''}`}\r\n                                    {...register(\"avatar\",\r\n                                        {\r\n                                            onChange: (e) => onImageChange(e),\r\n                                            validate: {\r\n                                                checkFileType: files => checkFileTypeAvatar(files) || `Ảnh đại diện chỉ nhận các file ${constImage.LIST_FILE_TYPE_AVATAR.join(\", \")}`,\r\n                                                checkFileSize: files => checkFileSizeAvatar(files) || \"Ảnh đại diện không vượt quá 5MB\"\r\n                                            }\r\n                                        }\r\n                                    )} />\r\n                                {/* {errors.avatar?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Ảnh sách không được trống!</div>} */}\r\n                                {errors.avatar?.message &&\r\n                                    <div className=\"input-value-error\">{errors.avatar?.message}</div>}\r\n                            </div>\r\n                            <img className=\"do-an-preview-image\" src={image}></img>\r\n                            <div className=\"do-an-title-avatar\">\r\n                                Ảnh đại diện\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button id=\"do-an-form-update-books-button\" type=\"submit\" hidden={true}></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UpdateBooks;","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\user_voucher\\UserPageVoucher.js",["409","410","411","412","413","414","415","416","417"],"import React, { useEffect, useState } from 'react';\r\nimport './UserPageVoucher.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faFilter, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataTable from \"../../../../share/ecm-base/components/data-table/DataTable\";\r\nimport UserAction from \"../../../../redux/action/UserAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useSearchParams, Link } from 'react-router-dom';\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport ConstAPI from '../../../../common/const';\r\n\r\nconst UserPageVoucher = ({ prefixPath, handleSelectUser }) => {\r\n\r\n\r\n    const columnUser = [\r\n        {\r\n            title: \"Mã người dùng\",\r\n            dataIndex: \"code\",\r\n            render: (text) => {\r\n                return <span \r\n                onClick={() => handleSelectUser(text)}\r\n                style={{textDecoration:\"underline\", color:\"#141ed2\", cursor:\"pointer\"}}>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên người dùng\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ngày sinh\",\r\n            dataIndex: \"date_of_birth\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Giới tính\",\r\n            dataIndex: \"gender\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Khóa\",\r\n            dataIndex: \"course\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            dataIndex: \"created_time\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n    ]\r\n\r\n    let listOrder = [\r\n        {\r\n            title: \"Tăng dần\",\r\n            value: 1\r\n        },\r\n        {\r\n            title: \"Giảm dần\",\r\n            value: -1\r\n        },\r\n    ]\r\n\r\n    let listOrderBy = [\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            value: \"created_time\"\r\n        },\r\n        {\r\n            title: \"Thời gian sửa\",\r\n            value: \"modified_time\"\r\n        },\r\n        {\r\n            title: \"Tên\",\r\n            value: \"name\"\r\n        },\r\n    ]\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listUser = useSelector(state => state.userReducer.listUser)\r\n    const filter = useSelector(state => state.userReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.userReducer.pagination)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let urlParams = { ...initPagingFilter }\r\n        if (searchParams.get('name')) {\r\n            urlParams[\"name\"] = searchParams.get('name')\r\n        }\r\n        if (searchParams.get('code')) {\r\n            urlParams[\"code\"] = searchParams.get('code')\r\n        }\r\n        if (searchParams.get('page')) {\r\n            urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        }\r\n        if (searchParams.get('size')) {\r\n            urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        }\r\n        if (searchParams.get('order_by')) {\r\n            urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        }\r\n        if (searchParams.get('order')) {\r\n            urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        }\r\n\r\n        setSearchParams(urlParams)\r\n        UserAction.updateUserFilterAction(dispatch, urlParams)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            page: urlParams.page,\r\n            size: urlParams.size\r\n        })\r\n        UserAction.getListUserAction(dispatch, urlParams)\r\n    }, [])\r\n\r\n\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter ,[field]: value }\r\n        console.log(newSearchFilter);\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        UserAction.getListUserAction(dispatch, filter)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        console.log(newSize);\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        UserAction.getListUserAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        UserAction.getListUserAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"do-an__user\">\r\n            <div className=\"do-an__user__image-cover\">\r\n                {/* <img className=\"image-cover\" src={imageCover}></img> */}\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh sách người dùng</h3>\r\n            </div>\r\n            <div className=\"do-an__user__group-search\">\r\n                <div className=\"do-an__user__group-search__filter\">\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Tên người dùng:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <input className=\"do-an__user__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"name\", event.target.value)}\r\n                                value={filter?.name || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Mã người dùng:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <input className=\"do-an__user__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"code\", event.target.value)}\r\n                                value={filter?.code || \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Sắp xếp theo:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__user__group-search__item__input\"\r\n                                listItem={listOrderBy}\r\n                                selected={filter?.order_by || \"created_time\"}\r\n                                name=\"order_by\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Thứ tự:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__user__group-search__item__input\"\r\n                                listItem={listOrder}\r\n                                selected={filter?.order || -1}\r\n                                name=\"order\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__user__group-search__button-search\">\r\n                    <button className=\"button-search\" onClick={handleSearch}>Tìm kiếm</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"do-an__user__group-table\">\r\n                <div className=\"do-an__user__group-table__table-data\">\r\n                    <DataTable headerData={columnUser}\r\n                        tableData={listUser}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        pagination={pagination}\r\n                        onPageChange={handleNumberPagehange}\r\n                    >\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPageVoucher;","F:\\do_an_frontend\\app\\src\\redux\\service\\VoucherService.js",["418"],"import { data } from 'jquery';\r\nimport {axiosClient} from '../../common/http-commons';\r\nimport Utils from '../../common/utils';\r\n\r\nconst VoucherService = {\r\n    getList : (paging) => {\r\n        try {\r\n            // Get data with default\r\n            if (!Utils.isNotNullOrUndefined(paging)) {\r\n                return axiosClient.get(\r\n                    process.env.REACT_APP_GET_LIST_AND_CREATE_VOUCHER\r\n                );\r\n                // Get data with parameters\r\n            } else {\r\n                return axiosClient.get(\r\n                    process.env.REACT_APP_GET_LIST_AND_CREATE_VOUCHER,\r\n                    { params: paging }\r\n                );\r\n            }\r\n        } catch (error) {\r\n            console.log(\"[Voucher - Get list]\", error);\r\n        }\r\n    },\r\n\r\n    create: (formDataVoucher) => {\r\n        try {\r\n            return axiosClient.post(process.env.REACT_APP_GET_LIST_AND_CREATE_VOUCHER, formDataVoucher)\r\n                // { headers: { \"Content-Type\": \"multipart/form-data\" } });\r\n        } catch (error) {\r\n            console.log(\"[BookVoucherService - create]\", error);\r\n        }\r\n    },\r\n\r\n    getDetail: (voucher_id) => {\r\n        try {\r\n            // Get data with default\r\n                return axiosClient.get(\r\n                    process.env.REACT_APP_RUD_VOUCHER.replace('{voucher_id}', voucher_id)\r\n                );\r\n        } catch (error) {\r\n            console.log(\"[BookVoucherService - Get detail]\", error);\r\n        }\r\n    },\r\n\r\n    updateVoucher: (voucher_id, formDataVoucher) => {\r\n        try {\r\n            // Get data with default\r\n                return axiosClient.put(\r\n                    process.env.REACT_APP_RUD_VOUCHER.replace('{voucher_id}', voucher_id), formDataVoucher\r\n                );\r\n        } catch (error) {\r\n            console.log(\"[VoucherService - Update voucher]\", error);\r\n        }\r\n    },\r\n\r\n    // ------------------------------------------------------------------------------------------------------------\r\n    remove: (voucher_id) => {\r\n        try {\r\n            return axiosClient.delete(\r\n                process.env.REACT_APP_RUD_VOUCHER.replace(\"{voucher_id}\", voucher_id)\r\n            )\r\n        } catch (error) {\r\n            console.log(\"VoucherService || Delete || Cause by \", error)\r\n        }\r\n    },\r\n    // ------------------------------------------------------------------------------------------------------------\r\n    updateStatus: (voucher_id, status_update) => {\r\n        console.log(status_update);\r\n        const formUpdate = {\r\n            \"status_update\" : status_update\r\n        }\r\n        try {\r\n            if (!Utils.isNotNullOrUndefined(status_update)) {\r\n                return  axiosClient.put(\r\n                    process.env.REACT_APP_UPDATE_STATUS_VOUCHER.replace(\"{voucher_id}\", voucher_id)\r\n                )\r\n                // Get data with parameters\r\n            } else {\r\n            return axiosClient.put(\r\n                process.env.REACT_APP_UPDATE_STATUS_VOUCHER.replace(\"{voucher_id}\", voucher_id),\r\n                formUpdate\r\n            )\r\n            }\r\n        } catch (error) {\r\n            console.log(\"VoucherService || Update status || Cause by \", error)\r\n        }\r\n    },\r\n}\r\n\r\nexport default VoucherService;","F:\\do_an_frontend\\app\\src\\redux\\service\\BooksService.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\GroupsService.js",["419"],"import {axiosClient} from '../../common/http-commons';\r\nimport Utils from '../../common/utils';\r\n\r\nconst groupsService = {\r\n    getList : () => {\r\n        try {\r\n            // Get data with default\r\n                return axiosClient.get(\r\n                    process.env.REACT_APP_GET_ALL_AND_CREATE_GROUP\r\n                );\r\n        } catch (error) {\r\n            console.log(\"[Groups - Get list]\", error);\r\n        }\r\n    }\r\n}\r\n\r\nexport default groupsService;","F:\\do_an_frontend\\app\\src\\redux\\service\\UserService.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\commonService.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\ManagerService.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\pagination\\Pagination.js",["420","421"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Pagination.scss'\r\nimport Toasts from '../toasts/Toasts';\r\nimport DropDown from '../dropdown/DropDown';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Pagination = ({ pagination, onPageChange, onNumberItemChange, placement =\"top\" }) => {\r\n\r\n    const refContainer = useRef(null)\r\n    if (!pagination) {\r\n        pagination = {\r\n            page: 0,\r\n            size: 0,\r\n            totalPage: 0,\r\n            totalItem: 0,\r\n        }\r\n    }\r\n    const { page, size, totalPage, totalItem } = pagination;\r\n\r\n    const numberOfPages = []\r\n    for (let i = 1; i <= totalPage; i++) {\r\n        numberOfPages.push(i)\r\n    }\r\n\r\n    const [valueGo, setValueGo] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(page)\r\n    const [arrOfCurrentPage, setArrOfCurrentPage] = useState([])\r\n    const [toastList, setToastList] = useState([])\r\n    const [numberShow, setNumberShow] = useState(size)\r\n    const [showTotal, setShowTotal] = useState(true)\r\n    let toastProperties = null\r\n\r\n    useEffect(() => {\r\n        const widthPagination = refContainer.current.clientWidth\r\n        if(widthPagination && widthPagination <= 600){\r\n            setShowTotal(false)\r\n        }else {\r\n            setShowTotal(true)\r\n        }\r\n      }, [refContainer])\r\n\r\n    useEffect(() => {\r\n        setNumberShow(size)\r\n    }, [size])\r\n\r\n    const showToast = (type, title, message) => {\r\n        toastProperties = {\r\n            id: toastList.length + 1,\r\n            type: type,\r\n            title: title,\r\n            message: message\r\n        }\r\n        setToastList([...toastList, toastProperties])\r\n    }\r\n\r\n    const listNumberShow = [\r\n       5, 10, 20, 50\r\n    ]\r\n\r\n    const leftDots = '... '\r\n    const midDots = '...'\r\n    const rightDots = ' ...'\r\n\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(pagination.page)\r\n        let tempNumberOfPage = [...arrOfCurrentPage]\r\n\r\n        if (numberOfPages.length <= 4 && !showTotal) {\r\n            tempNumberOfPage = numberOfPages\r\n        }else\r\n        if (numberOfPages.length <= 8 && showTotal) {\r\n            tempNumberOfPage = numberOfPages\r\n        }\r\n        else if (currentPage >= 1 && currentPage <= 4 && showTotal) {\r\n            tempNumberOfPage = [1, 2, 3, 4 , 5, midDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage >= 1 && currentPage <= 3 && !showTotal) {\r\n            tempNumberOfPage = [1, 2, 3, midDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage > 4 && currentPage < numberOfPages.length - 2 && showTotal) {\r\n            const sliceLeft = numberOfPages.slice(currentPage - 2, currentPage)\r\n            const sliceRight = numberOfPages.slice(currentPage, currentPage + 1)\r\n            tempNumberOfPage = [1, leftDots, ...sliceLeft, ...sliceRight, rightDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage >= 4 && currentPage < numberOfPages.length - 2 && !showTotal) {\r\n            const sliceLeft = numberOfPages.slice(currentPage - 2, currentPage)\r\n            tempNumberOfPage = [1, leftDots, ...sliceLeft, rightDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage > numberOfPages.length - 3 && showTotal) {\r\n            const slice = numberOfPages.slice(numberOfPages.length - 5, numberOfPages.length)\r\n            tempNumberOfPage = [1, leftDots, ...slice]\r\n        }\r\n        else if (currentPage > numberOfPages.length - 3 && !showTotal) {\r\n            const slice = numberOfPages.slice(numberOfPages.length - 3, numberOfPages.length)\r\n            tempNumberOfPage = [1, leftDots, ...slice]\r\n        }\r\n        else if (currentPage === midDots) {\r\n            setCurrentPage(arrOfCurrentPage[arrOfCurrentPage.length - 3] + 1)\r\n        }\r\n        else if (currentPage === rightDots) {\r\n            setCurrentPage(arrOfCurrentPage[3] + 2)\r\n        }\r\n        else if (currentPage === leftDots) {\r\n            setCurrentPage(arrOfCurrentPage[3] - 2)\r\n        }\r\n        setArrOfCurrentPage(tempNumberOfPage)\r\n    }, [currentPage, pagination])\r\n\r\n    function handlePageChange(newPage) {\r\n        setCurrentPage(newPage)\r\n        if (newPage === midDots) {\r\n            newPage = arrOfCurrentPage[arrOfCurrentPage.length - 3] + 1\r\n        }\r\n        else if (newPage === rightDots) {\r\n            newPage = arrOfCurrentPage[3] + 2\r\n        }\r\n        else if (newPage === leftDots) {\r\n            newPage = arrOfCurrentPage[3] - 2\r\n        }\r\n        onPageChange(newPage)\r\n    }\r\n\r\n    function handleGo(event) {\r\n        if (event.key == 'Enter') {\r\n            let regex = /^[0-9]+$/\r\n            let value = event.target.value\r\n            if (value.match(regex)) {\r\n                if (value <= 0) {\r\n                    showToast(\"warning\", \"Cảnh báo\", \"Số trang phải lơn hơn 0!\")\r\n                } else if (value <= numberOfPages.length) {\r\n                    handlePageChange(Number(value))\r\n                }\r\n                else {\r\n                    showToast(\"warning\", \"Cảnh báo\", \"Số trang này không tồn tại!\")\r\n                }\r\n            }\r\n            else {\r\n                showToast(\"warning\", \"Cảnh báo\", \"Xin vui lòng nhập số!\")\r\n            }\r\n            setValueGo('')\r\n        }\r\n    }\r\n\r\n    function handleChangeInput(event) {\r\n        setValueGo(event.target.value)\r\n    }\r\n\r\n    function handleChangeNumberShow(_name, value) {\r\n        const numberTotalPage = totalItem/value\r\n        const numberTotalPageFixed = Math.floor(numberTotalPage) || 0\r\n        const newTotalPage = numberTotalPage > numberTotalPageFixed ? numberTotalPageFixed + 1 : numberTotalPageFixed\r\n        const newPage = page <= newTotalPage ? page: newTotalPage\r\n        setNumberShow(value)\r\n        onNumberItemChange(value, newPage || 1)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='paginition-container' ref={refContainer}>\r\n            <div className={`info ${showTotal ? null: \"paginition-container__info-view-small\"}`}>\r\n                {showTotal && <div className='info__item'>\r\n                    Hiển thị {totalItem > 0 ? (page - 1) * size + 1 : 0}-\r\n                    {((page - 1) * size + size) < totalItem ? ((page - 1) * size + size) : totalItem} của {totalItem}\r\n                </div>\r\n                }\r\n                <DropDown\r\n                    selected={numberShow}\r\n                    listItem={listNumberShow}\r\n                    onSelected={handleChangeNumberShow}\r\n                    placement={placement}\r\n\r\n                    className=\"info__drop-down info__item\"\r\n                ></DropDown>\r\n            </div>\r\n            <div className={`handle-box ${showTotal ? null: \"paginition-container__handle-box-view-small\"}`}>\r\n                <div className='buttons'>\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={currentPage === 1 || totalPage ===0? true : false}\r\n                        className='button btn-pre-page'\r\n                        onClick={() => handlePageChange(currentPage - 1)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faAngleLeft} />\r\n                    </button>\r\n                    {arrOfCurrentPage.map((pageItem, index) => {\r\n                        return (\r\n                            <button\r\n                                type=\"button\"\r\n                                key={index}\r\n                                className={'button' + ((pageItem === currentPage) ? ' button-active' : '')}\r\n                                onClick={() => handlePageChange(pageItem)}\r\n                            >{pageItem}\r\n                            </button>\r\n                        )\r\n                    })}\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={(currentPage === totalPage || totalPage === 0) ? true : false}\r\n                        className='button btn-next-page'\r\n                        onClick={() => handlePageChange(currentPage + 1)}>\r\n                        <FontAwesomeIcon icon={faAngleRight} />\r\n                    </button>\r\n                </div>\r\n                <div className='jump'>\r\n                    <span>Đến:</span>\r\n                    <input disabled={totalPage === 0} onKeyDown={handleGo} type=\"number\" min=\"1\" value={valueGo} onChange={handleChangeInput}></input>\r\n                </div>\r\n            </div>\r\n            <Toasts toastList={toastList} setList={setToastList}></Toasts>\r\n        </div>\r\n    )\r\n}\r\n\r\nPagination.propTypes = {\r\n    pagination: PropTypes.object.isRequired,\r\n    onPageChange: PropTypes.func,\r\n    onNumberItemChange: PropTypes.func,\r\n    placement: PropTypes.string\r\n}\r\n\r\nPagination.defaultProps = {\r\n    onPageChange: null,\r\n}\r\n\r\nexport default Pagination","F:\\do_an_frontend\\app\\src\\common\\http-commons.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\BookService.js",[],"F:\\do_an_frontend\\app\\src\\common\\constImage.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown\\DropDown.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\sidebar\\SideBar.js",[],["422","423"],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\menu\\Menu.js",[],["424","425"],{"ruleId":"426","replacedBy":"427"},{"ruleId":"428","replacedBy":"429"},{"ruleId":"430","severity":1,"message":"431","line":1,"column":27,"nodeType":"432","messageId":"433","endLine":1,"endColumn":36},{"ruleId":"430","severity":1,"message":"434","line":9,"column":8,"nodeType":"432","messageId":"433","endLine":9,"endColumn":19},{"ruleId":"430","severity":1,"message":"435","line":3,"column":10,"nodeType":"432","messageId":"433","endLine":3,"endColumn":25},{"ruleId":"430","severity":1,"message":"436","line":4,"column":10,"nodeType":"432","messageId":"433","endLine":4,"endColumn":26},{"ruleId":"430","severity":1,"message":"437","line":4,"column":28,"nodeType":"432","messageId":"433","endLine":4,"endColumn":36},{"ruleId":"430","severity":1,"message":"438","line":4,"column":38,"nodeType":"432","messageId":"433","endLine":4,"endColumn":46},{"ruleId":"430","severity":1,"message":"439","line":8,"column":10,"nodeType":"432","messageId":"433","endLine":8,"endColumn":19},{"ruleId":"440","severity":1,"message":"441","line":50,"column":40,"nodeType":"442","endLine":50,"endColumn":112},{"ruleId":"443","severity":1,"message":"444","line":168,"column":8,"nodeType":"445","endLine":168,"endColumn":10,"suggestions":"446"},{"ruleId":"443","severity":1,"message":"447","line":172,"column":8,"nodeType":"445","endLine":172,"endColumn":10,"suggestions":"448"},{"ruleId":"443","severity":1,"message":"449","line":192,"column":8,"nodeType":"445","endLine":192,"endColumn":20,"suggestions":"450"},{"ruleId":"443","severity":1,"message":"451","line":32,"column":6,"nodeType":"445","endLine":32,"endColumn":8,"suggestions":"452"},{"ruleId":"453","severity":1,"message":"454","line":63,"column":13,"nodeType":"442","endLine":63,"endColumn":96},{"ruleId":"440","severity":1,"message":"441","line":68,"column":9,"nodeType":"442","endLine":68,"endColumn":120},{"ruleId":"430","severity":1,"message":"435","line":3,"column":10,"nodeType":"432","messageId":"433","endLine":3,"endColumn":25},{"ruleId":"430","severity":1,"message":"436","line":4,"column":10,"nodeType":"432","messageId":"433","endLine":4,"endColumn":26},{"ruleId":"430","severity":1,"message":"437","line":4,"column":28,"nodeType":"432","messageId":"433","endLine":4,"endColumn":36},{"ruleId":"430","severity":1,"message":"438","line":4,"column":38,"nodeType":"432","messageId":"433","endLine":4,"endColumn":46},{"ruleId":"430","severity":1,"message":"439","line":8,"column":10,"nodeType":"432","messageId":"433","endLine":8,"endColumn":19},{"ruleId":"430","severity":1,"message":"455","line":12,"column":10,"nodeType":"432","messageId":"433","endLine":12,"endColumn":20},{"ruleId":"440","severity":1,"message":"441","line":73,"column":40,"nodeType":"442","endLine":73,"endColumn":112},{"ruleId":"443","severity":1,"message":"444","line":167,"column":8,"nodeType":"445","endLine":167,"endColumn":10,"suggestions":"456"},{"ruleId":"430","severity":1,"message":"457","line":4,"column":10,"nodeType":"432","messageId":"433","endLine":4,"endColumn":15},{"ruleId":"430","severity":1,"message":"458","line":4,"column":17,"nodeType":"432","messageId":"433","endLine":4,"endColumn":23},{"ruleId":"430","severity":1,"message":"439","line":7,"column":10,"nodeType":"432","messageId":"433","endLine":7,"endColumn":19},{"ruleId":"430","severity":1,"message":"435","line":3,"column":10,"nodeType":"432","messageId":"433","endLine":3,"endColumn":25},{"ruleId":"430","severity":1,"message":"436","line":4,"column":10,"nodeType":"432","messageId":"433","endLine":4,"endColumn":26},{"ruleId":"430","severity":1,"message":"437","line":4,"column":28,"nodeType":"432","messageId":"433","endLine":4,"endColumn":36},{"ruleId":"430","severity":1,"message":"438","line":4,"column":38,"nodeType":"432","messageId":"433","endLine":4,"endColumn":46},{"ruleId":"430","severity":1,"message":"439","line":8,"column":10,"nodeType":"432","messageId":"433","endLine":8,"endColumn":19},{"ruleId":"430","severity":1,"message":"459","line":8,"column":38,"nodeType":"432","messageId":"433","endLine":8,"endColumn":42},{"ruleId":"430","severity":1,"message":"455","line":12,"column":10,"nodeType":"432","messageId":"433","endLine":12,"endColumn":20},{"ruleId":"440","severity":1,"message":"441","line":74,"column":40,"nodeType":"442","endLine":74,"endColumn":112},{"ruleId":"443","severity":1,"message":"444","line":165,"column":8,"nodeType":"445","endLine":165,"endColumn":10,"suggestions":"460"},{"ruleId":"430","severity":1,"message":"461","line":5,"column":23,"nodeType":"432","messageId":"433","endLine":5,"endColumn":29},{"ruleId":"430","severity":1,"message":"455","line":10,"column":10,"nodeType":"432","messageId":"433","endLine":10,"endColumn":20},{"ruleId":"430","severity":1,"message":"462","line":19,"column":8,"nodeType":"432","messageId":"433","endLine":19,"endColumn":14},{"ruleId":"440","severity":1,"message":"441","line":45,"column":40,"nodeType":"442","endLine":45,"endColumn":112},{"ruleId":"443","severity":1,"message":"463","line":104,"column":8,"nodeType":"445","endLine":104,"endColumn":30,"suggestions":"464"},{"ruleId":"430","severity":1,"message":"465","line":180,"column":11,"nodeType":"432","messageId":"433","endLine":180,"endColumn":23},{"ruleId":"430","severity":1,"message":"466","line":11,"column":8,"nodeType":"432","messageId":"433","endLine":11,"endColumn":14},{"ruleId":"430","severity":1,"message":"467","line":31,"column":33,"nodeType":"432","messageId":"433","endLine":31,"endColumn":55},{"ruleId":"443","severity":1,"message":"468","line":61,"column":8,"nodeType":"445","endLine":61,"endColumn":14,"suggestions":"469"},{"ruleId":"443","severity":1,"message":"463","line":82,"column":8,"nodeType":"445","endLine":82,"endColumn":23,"suggestions":"470"},{"ruleId":"440","severity":1,"message":"441","line":150,"column":25,"nodeType":"442","endLine":150,"endColumn":137},{"ruleId":"430","severity":1,"message":"471","line":2,"column":10,"nodeType":"432","messageId":"433","endLine":2,"endColumn":21},{"ruleId":"443","severity":1,"message":"472","line":67,"column":8,"nodeType":"445","endLine":67,"endColumn":16,"suggestions":"473"},{"ruleId":"443","severity":1,"message":"474","line":71,"column":8,"nodeType":"445","endLine":71,"endColumn":15,"suggestions":"475"},{"ruleId":"430","severity":1,"message":"435","line":3,"column":10,"nodeType":"432","messageId":"433","endLine":3,"endColumn":25},{"ruleId":"430","severity":1,"message":"436","line":4,"column":10,"nodeType":"432","messageId":"433","endLine":4,"endColumn":26},{"ruleId":"430","severity":1,"message":"437","line":4,"column":28,"nodeType":"432","messageId":"433","endLine":4,"endColumn":36},{"ruleId":"430","severity":1,"message":"438","line":4,"column":38,"nodeType":"432","messageId":"433","endLine":4,"endColumn":46},{"ruleId":"430","severity":1,"message":"439","line":8,"column":10,"nodeType":"432","messageId":"433","endLine":8,"endColumn":19},{"ruleId":"430","severity":1,"message":"462","line":12,"column":8,"nodeType":"432","messageId":"433","endLine":12,"endColumn":14},{"ruleId":"430","severity":1,"message":"476","line":166,"column":12,"nodeType":"432","messageId":"433","endLine":166,"endColumn":38},{"ruleId":"430","severity":1,"message":"477","line":166,"column":40,"nodeType":"432","messageId":"433","endLine":166,"endColumn":69},{"ruleId":"443","severity":1,"message":"444","line":205,"column":8,"nodeType":"445","endLine":205,"endColumn":10,"suggestions":"478"},{"ruleId":"430","severity":1,"message":"479","line":1,"column":28,"nodeType":"432","messageId":"433","endLine":1,"endColumn":36},{"ruleId":"430","severity":1,"message":"480","line":5,"column":23,"nodeType":"432","messageId":"433","endLine":5,"endColumn":35},{"ruleId":"430","severity":1,"message":"481","line":5,"column":37,"nodeType":"432","messageId":"433","endLine":5,"endColumn":48},{"ruleId":"430","severity":1,"message":"482","line":8,"column":21,"nodeType":"432","messageId":"433","endLine":8,"endColumn":36},{"ruleId":"430","severity":1,"message":"459","line":8,"column":38,"nodeType":"432","messageId":"433","endLine":8,"endColumn":42},{"ruleId":"430","severity":1,"message":"483","line":12,"column":8,"nodeType":"432","messageId":"433","endLine":12,"endColumn":13},{"ruleId":"430","severity":1,"message":"458","line":13,"column":8,"nodeType":"432","messageId":"433","endLine":13,"endColumn":14},{"ruleId":"430","severity":1,"message":"484","line":14,"column":8,"nodeType":"432","messageId":"433","endLine":14,"endColumn":16},{"ruleId":"443","severity":1,"message":"485","line":77,"column":8,"nodeType":"445","endLine":77,"endColumn":10,"suggestions":"486"},{"ruleId":"440","severity":1,"message":"441","line":186,"column":21,"nodeType":"442","endLine":186,"endColumn":149},{"ruleId":"430","severity":1,"message":"461","line":5,"column":23,"nodeType":"432","messageId":"433","endLine":5,"endColumn":29},{"ruleId":"430","severity":1,"message":"487","line":6,"column":8,"nodeType":"432","messageId":"433","endLine":6,"endColumn":13},{"ruleId":"430","severity":1,"message":"482","line":7,"column":21,"nodeType":"432","messageId":"433","endLine":7,"endColumn":36},{"ruleId":"430","severity":1,"message":"459","line":7,"column":38,"nodeType":"432","messageId":"433","endLine":7,"endColumn":42},{"ruleId":"430","severity":1,"message":"484","line":9,"column":8,"nodeType":"432","messageId":"433","endLine":9,"endColumn":16},{"ruleId":"440","severity":1,"message":"441","line":54,"column":40,"nodeType":"442","endLine":54,"endColumn":112},{"ruleId":"443","severity":1,"message":"447","line":73,"column":8,"nodeType":"445","endLine":73,"endColumn":20,"suggestions":"488"},{"ruleId":"440","severity":1,"message":"441","line":188,"column":21,"nodeType":"442","endLine":188,"endColumn":123},{"ruleId":"430","severity":1,"message":"461","line":5,"column":23,"nodeType":"432","messageId":"433","endLine":5,"endColumn":29},{"ruleId":"430","severity":1,"message":"455","line":10,"column":10,"nodeType":"432","messageId":"433","endLine":10,"endColumn":20},{"ruleId":"440","severity":1,"message":"441","line":43,"column":40,"nodeType":"442","endLine":43,"endColumn":112},{"ruleId":"443","severity":1,"message":"489","line":98,"column":8,"nodeType":"445","endLine":98,"endColumn":20,"suggestions":"490"},{"ruleId":"443","severity":1,"message":"491","line":134,"column":8,"nodeType":"445","endLine":134,"endColumn":23,"suggestions":"492"},{"ruleId":"430","severity":1,"message":"493","line":137,"column":9,"nodeType":"432","messageId":"433","endLine":137,"endColumn":25},{"ruleId":"430","severity":1,"message":"480","line":5,"column":23,"nodeType":"432","messageId":"433","endLine":5,"endColumn":35},{"ruleId":"430","severity":1,"message":"481","line":5,"column":37,"nodeType":"432","messageId":"433","endLine":5,"endColumn":48},{"ruleId":"430","severity":1,"message":"487","line":6,"column":8,"nodeType":"432","messageId":"433","endLine":6,"endColumn":13},{"ruleId":"430","severity":1,"message":"482","line":8,"column":21,"nodeType":"432","messageId":"433","endLine":8,"endColumn":36},{"ruleId":"430","severity":1,"message":"459","line":8,"column":38,"nodeType":"432","messageId":"433","endLine":8,"endColumn":42},{"ruleId":"440","severity":1,"message":"441","line":57,"column":40,"nodeType":"442","endLine":57,"endColumn":112},{"ruleId":"443","severity":1,"message":"485","line":101,"column":8,"nodeType":"445","endLine":101,"endColumn":10,"suggestions":"494"},{"ruleId":"430","severity":1,"message":"495","line":114,"column":11,"nodeType":"432","messageId":"433","endLine":114,"endColumn":17},{"ruleId":"443","severity":1,"message":"496","line":119,"column":8,"nodeType":"445","endLine":119,"endColumn":10,"suggestions":"497"},{"ruleId":"440","severity":1,"message":"441","line":270,"column":21,"nodeType":"442","endLine":270,"endColumn":113},{"ruleId":"443","severity":1,"message":"498","line":11,"column":8,"nodeType":"445","endLine":11,"endColumn":10,"suggestions":"499"},{"ruleId":"430","severity":1,"message":"436","line":3,"column":10,"nodeType":"432","messageId":"433","endLine":3,"endColumn":26},{"ruleId":"430","severity":1,"message":"500","line":7,"column":8,"nodeType":"432","messageId":"433","endLine":7,"endColumn":13},{"ruleId":"430","severity":1,"message":"501","line":8,"column":8,"nodeType":"432","messageId":"433","endLine":8,"endColumn":9},{"ruleId":"502","severity":1,"message":"503","line":17,"column":108,"nodeType":"504","messageId":"505","endLine":17,"endColumn":118},{"ruleId":"502","severity":1,"message":"503","line":17,"column":141,"nodeType":"504","messageId":"505","endLine":17,"endColumn":151},{"ruleId":"502","severity":1,"message":"503","line":17,"column":166,"nodeType":"504","messageId":"505","endLine":17,"endColumn":176},{"ruleId":"443","severity":1,"message":"506","line":25,"column":7,"nodeType":"445","endLine":25,"endColumn":30,"suggestions":"507"},{"ruleId":"443","severity":1,"message":"508","line":37,"column":7,"nodeType":"445","endLine":37,"endColumn":24,"suggestions":"509"},{"ruleId":"510","severity":1,"message":"511","line":103,"column":61,"nodeType":"512","messageId":"513","endLine":103,"endColumn":63},{"ruleId":"430","severity":1,"message":"514","line":1,"column":34,"nodeType":"432","messageId":"433","endLine":1,"endColumn":46},{"ruleId":"430","severity":1,"message":"515","line":1,"column":48,"nodeType":"432","messageId":"433","endLine":1,"endColumn":59},{"ruleId":"430","severity":1,"message":"514","line":1,"column":34,"nodeType":"432","messageId":"433","endLine":1,"endColumn":46},{"ruleId":"430","severity":1,"message":"515","line":1,"column":48,"nodeType":"432","messageId":"433","endLine":1,"endColumn":59},{"ruleId":"430","severity":1,"message":"514","line":1,"column":34,"nodeType":"432","messageId":"433","endLine":1,"endColumn":46},{"ruleId":"430","severity":1,"message":"515","line":1,"column":48,"nodeType":"432","messageId":"433","endLine":1,"endColumn":59},{"ruleId":"430","severity":1,"message":"516","line":7,"column":8,"nodeType":"432","messageId":"433","endLine":7,"endColumn":16},{"ruleId":"443","severity":1,"message":"517","line":40,"column":8,"nodeType":"445","endLine":40,"endColumn":10,"suggestions":"518"},{"ruleId":"440","severity":1,"message":"441","line":306,"column":29,"nodeType":"442","endLine":306,"endColumn":78},{"ruleId":"510","severity":1,"message":"519","line":31,"column":55,"nodeType":"512","messageId":"513","endLine":31,"endColumn":57},{"ruleId":"510","severity":1,"message":"519","line":34,"column":115,"nodeType":"512","messageId":"513","endLine":34,"endColumn":117},{"ruleId":"430","severity":1,"message":"514","line":1,"column":34,"nodeType":"432","messageId":"433","endLine":1,"endColumn":46},{"ruleId":"430","severity":1,"message":"515","line":1,"column":48,"nodeType":"432","messageId":"433","endLine":1,"endColumn":59},{"ruleId":"430","severity":1,"message":"500","line":2,"column":8,"nodeType":"432","messageId":"433","endLine":2,"endColumn":13},{"ruleId":"430","severity":1,"message":"431","line":1,"column":17,"nodeType":"432","messageId":"433","endLine":1,"endColumn":26},{"ruleId":"430","severity":1,"message":"516","line":7,"column":8,"nodeType":"432","messageId":"433","endLine":7,"endColumn":16},{"ruleId":"430","severity":1,"message":"520","line":17,"column":12,"nodeType":"432","messageId":"433","endLine":17,"endColumn":17},{"ruleId":"430","severity":1,"message":"467","line":36,"column":33,"nodeType":"432","messageId":"433","endLine":36,"endColumn":55},{"ruleId":"430","severity":1,"message":"521","line":48,"column":11,"nodeType":"432","messageId":"433","endLine":48,"endColumn":30},{"ruleId":"430","severity":1,"message":"522","line":56,"column":11,"nodeType":"432","messageId":"433","endLine":56,"endColumn":30},{"ruleId":"430","severity":1,"message":"523","line":65,"column":11,"nodeType":"432","messageId":"433","endLine":65,"endColumn":24},{"ruleId":"430","severity":1,"message":"479","line":1,"column":28,"nodeType":"432","messageId":"433","endLine":1,"endColumn":36},{"ruleId":"430","severity":1,"message":"435","line":4,"column":10,"nodeType":"432","messageId":"433","endLine":4,"endColumn":25},{"ruleId":"430","severity":1,"message":"524","line":5,"column":10,"nodeType":"432","messageId":"433","endLine":5,"endColumn":21},{"ruleId":"430","severity":1,"message":"480","line":5,"column":23,"nodeType":"432","messageId":"433","endLine":5,"endColumn":35},{"ruleId":"430","severity":1,"message":"481","line":5,"column":37,"nodeType":"432","messageId":"433","endLine":5,"endColumn":48},{"ruleId":"443","severity":1,"message":"447","line":18,"column":8,"nodeType":"445","endLine":18,"endColumn":23,"suggestions":"525"},{"ruleId":"440","severity":1,"message":"441","line":110,"column":21,"nodeType":"442","endLine":110,"endColumn":116},{"ruleId":"430","severity":1,"message":"431","line":1,"column":17,"nodeType":"432","messageId":"433","endLine":1,"endColumn":26},{"ruleId":"430","severity":1,"message":"516","line":7,"column":8,"nodeType":"432","messageId":"433","endLine":7,"endColumn":16},{"ruleId":"430","severity":1,"message":"520","line":17,"column":12,"nodeType":"432","messageId":"433","endLine":17,"endColumn":17},{"ruleId":"430","severity":1,"message":"467","line":36,"column":33,"nodeType":"432","messageId":"433","endLine":36,"endColumn":55},{"ruleId":"430","severity":1,"message":"521","line":48,"column":11,"nodeType":"432","messageId":"433","endLine":48,"endColumn":30},{"ruleId":"430","severity":1,"message":"522","line":56,"column":11,"nodeType":"432","messageId":"433","endLine":56,"endColumn":30},{"ruleId":"430","severity":1,"message":"523","line":65,"column":11,"nodeType":"432","messageId":"433","endLine":65,"endColumn":24},{"ruleId":"430","severity":1,"message":"495","line":20,"column":11,"nodeType":"432","messageId":"433","endLine":20,"endColumn":17},{"ruleId":"443","severity":1,"message":"485","line":29,"column":8,"nodeType":"445","endLine":29,"endColumn":10,"suggestions":"526"},{"ruleId":"443","severity":1,"message":"463","line":53,"column":8,"nodeType":"445","endLine":53,"endColumn":21,"suggestions":"527"},{"ruleId":"440","severity":1,"message":"441","line":290,"column":29,"nodeType":"442","endLine":290,"endColumn":78},{"ruleId":"430","severity":1,"message":"479","line":1,"column":28,"nodeType":"432","messageId":"433","endLine":1,"endColumn":36},{"ruleId":"430","severity":1,"message":"435","line":3,"column":10,"nodeType":"432","messageId":"433","endLine":3,"endColumn":25},{"ruleId":"430","severity":1,"message":"436","line":4,"column":10,"nodeType":"432","messageId":"433","endLine":4,"endColumn":26},{"ruleId":"430","severity":1,"message":"437","line":4,"column":28,"nodeType":"432","messageId":"433","endLine":4,"endColumn":36},{"ruleId":"430","severity":1,"message":"438","line":4,"column":38,"nodeType":"432","messageId":"433","endLine":4,"endColumn":46},{"ruleId":"430","severity":1,"message":"439","line":8,"column":10,"nodeType":"432","messageId":"433","endLine":8,"endColumn":19},{"ruleId":"430","severity":1,"message":"459","line":8,"column":38,"nodeType":"432","messageId":"433","endLine":8,"endColumn":42},{"ruleId":"440","severity":1,"message":"441","line":70,"column":40,"nodeType":"442","endLine":70,"endColumn":112},{"ruleId":"443","severity":1,"message":"444","line":145,"column":8,"nodeType":"445","endLine":145,"endColumn":10,"suggestions":"528"},{"ruleId":"430","severity":1,"message":"529","line":1,"column":10,"nodeType":"432","messageId":"433","endLine":1,"endColumn":14},{"ruleId":"430","severity":1,"message":"500","line":2,"column":8,"nodeType":"432","messageId":"433","endLine":2,"endColumn":13},{"ruleId":"443","severity":1,"message":"530","line":110,"column":8,"nodeType":"445","endLine":110,"endColumn":33,"suggestions":"531"},{"ruleId":"510","severity":1,"message":"519","line":127,"column":23,"nodeType":"512","messageId":"513","endLine":127,"endColumn":25},{"ruleId":"426","replacedBy":"532"},{"ruleId":"428","replacedBy":"533"},{"ruleId":"426","replacedBy":"534"},{"ruleId":"428","replacedBy":"535"},"no-native-reassign",["536"],"no-negated-in-lhs",["537"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'MenuProject' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faFileCirclePlus' is defined but never used.","'faFilter' is defined but never used.","'faSearch' is defined but never used.","'useParams' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'initPagingFilter', 'pagination', 'searchParams', and 'setSearchParams'. Either include them or remove the dependency array.","ArrayExpression",["538"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["539"],"React Hook useEffect has a missing dependency: 'listDefault'. Either include it or remove the dependency array.",["540"],"React Hook useEffect has a missing dependency: 'checkRole'. Either include it or remove the dependency array.",["541"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'ListButton' is defined but never used.",["542"],"'Input' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.",["543"],"'faBook' is defined but never used.","'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["544"],"'managerToken' is assigned a value but never used.","'image2' is defined but never used.","'setListDefaultDropDown' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ditpatch'. Either include it or remove the dependency array.",["545"],["546"],"'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'prefixPath'. Either include it or remove the dependency array. If 'setMenus' needs the current value of 'prefixPath', you can also switch to useReducer instead of useState and read 'prefixPath' in the reducer.",["547"],"React Hook useEffect has missing dependencies: 'location?.pathname' and 'prefixPath'. Either include them or remove the dependency array. If 'setIsActive' needs the current value of 'prefixPath', you can also switch to useReducer instead of useState and read 'prefixPath' in the reducer.",["548"],"'isHiddenModalCreateVoucher' is assigned a value but never used.","'setIsHiddenModalCreateVoucher' is assigned a value but never used.",["549"],"'useState' is defined but never used.","'faCircleInfo' is defined but never used.","'faFileLines' is defined but never used.","'useSearchParams' is defined but never used.","'Modal' is defined but never used.","'DropDown' is defined but never used.","React Hook useEffect has missing dependencies: 'code' and 'dispatch'. Either include them or remove the dependency array.",["550"],"'image' is defined but never used.",["551"],"React Hook useEffect has missing dependencies: 'detailVoucher' and 'dispatch'. Either include them or remove the dependency array.",["552"],"React Hook useEffect has missing dependencies: 'listBookTable', 'listBookUpdate', and 'setValue'. Either include them or remove the dependency array.",["553"],"'initPagingFilter' is assigned a value but never used.",["554"],"'filter' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'code', 'dispatch', and 'initPagingFilter'. Either include them or remove the dependency array.",["555"],"React Hook useCallback has missing dependencies: 'setList' and 'toastList'. Either include them or remove the dependency array. If 'setList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["556"],"'Utils' is defined but never used.","'$' is defined but never used.","no-new-func","The Function constructor is eval.","CallExpression","noFunctionConstructor","React Hook useEffect has a missing dependency: 'setPagination'. Either include it or remove the dependency array.",["557"],"React Hook useEffect has a missing dependency: 'tableData'. Either include it or remove the dependency array.",["558"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'startLoading' is defined but never used.","'stopLoading' is defined but never used.","'ConstAPI' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'formCreate.amount', and 'setValue'. Either include them or remove the dependency array.",["559"],"Expected '===' and instead saw '=='.","'image' is assigned a value but never used.","'checkFileTypeAvatar' is assigned a value but never used.","'checkFileSizeAvatar' is assigned a value but never used.","'onImageChange' is assigned a value but never used.","'faArrowLeft' is defined but never used.",["560"],["561"],["562"],["563"],"'data' is defined but never used.","React Hook useEffect has missing dependencies: 'arrOfCurrentPage', 'numberOfPages', and 'showTotal'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentPage' needs the current value of 'arrOfCurrentPage'.",["564"],["536"],["537"],["536"],["537"],"no-global-assign","no-unsafe-negation",{"desc":"565","fix":"566"},{"desc":"567","fix":"568"},{"desc":"569","fix":"570"},{"desc":"571","fix":"572"},{"desc":"565","fix":"573"},{"desc":"565","fix":"574"},{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},{"desc":"565","fix":"585"},{"desc":"586","fix":"587"},{"desc":"588","fix":"589"},{"desc":"590","fix":"591"},{"desc":"592","fix":"593"},{"desc":"586","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"586","fix":"607"},{"desc":"608","fix":"609"},{"desc":"565","fix":"610"},{"desc":"611","fix":"612"},"Update the dependencies array to be: [dispatch, initPagingFilter, pagination, searchParams, setSearchParams]",{"range":"613","text":"614"},"Update the dependencies array to be: [dispatch]",{"range":"615","text":"616"},"Update the dependencies array to be: [listDefault, listGroups]",{"range":"617","text":"618"},"Update the dependencies array to be: [checkRole]",{"range":"619","text":"620"},{"range":"621","text":"614"},{"range":"622","text":"614"},"Update the dependencies array to be: [formCreate?.due_date, setValue]",{"range":"623","text":"624"},"Update the dependencies array to be: [code, ditpatch]",{"range":"625","text":"626"},"Update the dependencies array to be: [detailManager, setValue]",{"range":"627","text":"628"},"Update the dependencies array to be: [decode, prefixPath]",{"range":"629","text":"630"},"Update the dependencies array to be: [location?.pathname, menus, prefixPath]",{"range":"631","text":"632"},{"range":"633","text":"614"},"Update the dependencies array to be: [code, dispatch]",{"range":"634","text":"635"},"Update the dependencies array to be: [dispatch, voucher_id]",{"range":"636","text":"637"},"Update the dependencies array to be: [detailVoucher, dispatch, voucher_id]",{"range":"638","text":"639"},"Update the dependencies array to be: [detailVoucher, listBookTable, listBookUpdate, setValue]",{"range":"640","text":"641"},{"range":"642","text":"635"},"Update the dependencies array to be: [code, dispatch, initPagingFilter]",{"range":"643","text":"644"},"Update the dependencies array to be: [setList, toastList]",{"range":"645","text":"646"},"Update the dependencies array to be: [tableData, pagination, setPagination]",{"range":"647","text":"648"},"Update the dependencies array to be: [paginationTable, tableData]",{"range":"649","text":"650"},"Update the dependencies array to be: [dispatch, formCreate.amount, setValue]",{"range":"651","text":"652"},"Update the dependencies array to be: [detailManager, dispatch]",{"range":"653","text":"654"},{"range":"655","text":"635"},"Update the dependencies array to be: [booksDetail, setValue]",{"range":"656","text":"657"},{"range":"658","text":"614"},"Update the dependencies array to be: [arrOfCurrentPage, currentPage, numberOfPages, pagination, showTotal]",{"range":"659","text":"660"},[5537,5539],"[dispatch, initPagingFilter, pagination, searchParams, setSearchParams]",[5626,5628],"[dispatch]",[6137,6149],"[listDefault, listGroups]",[1115,1117],"[checkRole]",[5412,5414],[5468,5470],[3934,3956],"[formCreate?.due_date, setValue]",[1912,1918],"[code, ditpatch]",[2720,2735],"[detailManager, setValue]",[2409,2417],"[decode, prefixPath]",[2511,2518],"[location?.pathname, menus, prefixPath]",[7174,7176],[2595,2597],"[code, dispatch]",[2415,2427],"[dispatch, voucher_id]",[3600,3612],"[detailVoucher, dispatch, voucher_id]",[4808,4823],"[detailVoucher, listBookTable, listBookUpdate, setValue]",[3115,3117],[3687,3689],"[code, dispatch, initPagingFilter]",[491,493],"[setList, toastList]",[984,1007],"[tableData, pagination, setPagination]",[1422,1439],"[paginationTable, tableData]",[1462,1464],"[dispatch, formCreate.amount, setValue]",[694,709],"[detailManager, dispatch]",[1261,1263],[2315,2328],"[booksDetail, setValue]",[4550,4552],[4168,4193],"[arrOfCurrentPage, currentPage, numberOfPages, pagination, showTotal]"]