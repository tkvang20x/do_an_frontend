[{"F:\\do_an_frontend\\app\\src\\index.js":"1","F:\\do_an_frontend\\app\\src\\App.js":"2","F:\\do_an_frontend\\app\\src\\layout\\Layout.js":"3","F:\\do_an_frontend\\app\\src\\redux\\Store.js":"4","F:\\do_an_frontend\\app\\src\\components\\books\\BooksPage.js":"5","F:\\do_an_frontend\\app\\src\\layout\\layout-project\\LayoutProject.js":"6","F:\\do_an_frontend\\app\\src\\components\\user\\UserPage.js":"7","F:\\do_an_frontend\\app\\src\\components\\login\\Login.js":"8","F:\\do_an_frontend\\app\\src\\components\\manager\\ManagerPage.js":"9","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\create_voucher\\CreateVoucher.js":"10","F:\\do_an_frontend\\app\\src\\components\\manager\\manager_info\\ManagerInfoPage .js":"11","F:\\do_an_frontend\\app\\src\\common\\menu-project\\MenuProject.js":"12","F:\\do_an_frontend\\app\\src\\components\\voucher\\VoucherPage.js":"13","F:\\do_an_frontend\\app\\src\\redux\\slice\\LoginSlice.js":"14","F:\\do_an_frontend\\app\\src\\redux\\slice\\BooksSlice.js":"15","F:\\do_an_frontend\\app\\src\\components\\user\\components\\get_detail_user\\DetailUser.js":"16","F:\\do_an_frontend\\app\\src\\redux\\slice\\VoucherSlice.js":"17","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\detail_voucher\\DetailVoucher.js":"18","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\update_voucher\\UpdateVoucher.js":"19","F:\\do_an_frontend\\app\\src\\redux\\slice\\BookSlice.js":"20","F:\\do_an_frontend\\app\\src\\redux\\slice\\UserSlice.js":"21","F:\\do_an_frontend\\app\\src\\redux\\slice\\ManagerSlice.js":"22","F:\\do_an_frontend\\app\\src\\redux\\slice\\GroupsSlice.js":"23","F:\\do_an_frontend\\app\\src\\components\\books\\components\\detail_books\\DetailBooks.js":"24","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\toasts\\Toasts.js":"25","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\loading\\Loading.js":"26","F:\\do_an_frontend\\app\\src\\common\\const.js":"27","F:\\do_an_frontend\\app\\src\\common\\utils.js":"28","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\data-table\\DataTable.js":"29","F:\\do_an_frontend\\app\\src\\redux\\action\\BooksAction.js":"30","F:\\do_an_frontend\\app\\src\\redux\\action\\BookAction.js":"31","F:\\do_an_frontend\\app\\src\\redux\\action\\UserAction.js":"32","F:\\do_an_frontend\\app\\src\\redux\\action\\ManagerAction.js":"33","F:\\do_an_frontend\\app\\src\\redux\\action\\VoucherAction.js":"34","F:\\do_an_frontend\\app\\src\\components\\books\\components\\create_books\\CreateBooks.js":"35","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown-v2\\DropDown.js":"36","F:\\do_an_frontend\\app\\src\\redux\\action\\GroupsAction.js":"37","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\modal\\Modal.js":"38","F:\\do_an_frontend\\app\\src\\redux\\service\\LoginService.js":"39","F:\\do_an_frontend\\app\\src\\components\\user\\components\\create_user\\CreateUser.js":"40","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\confirm\\Confirm.js":"41","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\button\\Button.js":"42","F:\\do_an_frontend\\app\\src\\redux\\action\\LoginAction.js":"43","F:\\do_an_frontend\\app\\src\\components\\manager\\get-detail-manager\\DetailManager.js":"44","F:\\do_an_frontend\\app\\src\\components\\manager\\create-manager\\CreateManager.js":"45","F:\\do_an_frontend\\app\\src\\components\\books\\components\\update_books\\UpdateBooks.js":"46","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\user_voucher\\UserPageVoucher.js":"47","F:\\do_an_frontend\\app\\src\\redux\\service\\VoucherService.js":"48","F:\\do_an_frontend\\app\\src\\redux\\service\\BooksService.js":"49","F:\\do_an_frontend\\app\\src\\redux\\service\\GroupsService.js":"50","F:\\do_an_frontend\\app\\src\\redux\\service\\UserService.js":"51","F:\\do_an_frontend\\app\\src\\redux\\service\\commonService.js":"52","F:\\do_an_frontend\\app\\src\\redux\\service\\ManagerService.js":"53","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\pagination\\Pagination.js":"54","F:\\do_an_frontend\\app\\src\\common\\http-commons.js":"55","F:\\do_an_frontend\\app\\src\\redux\\service\\BookService.js":"56","F:\\do_an_frontend\\app\\src\\common\\constImage.js":"57","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown\\DropDown.js":"58","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\sidebar\\SideBar.js":"59","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\menu\\Menu.js":"60","F:\\do_an_frontend\\app\\src\\components\\group\\GroupPage.js":"61","F:\\do_an_frontend\\app\\src\\components\\group\\create_group\\CreateGroup.js":"62","F:\\do_an_frontend\\app\\src\\components\\group\\update_group\\UpdateGroup.js":"63","F:\\do_an_frontend\\app\\src\\components\\chart\\ChartVoucher.js":"64","F:\\do_an_frontend\\app\\src\\components\\books\\components\\create_book_single\\CreateBook.js":"65","F:\\do_an_frontend\\app\\src\\components\\books\\components\\update_book_single\\UpdateBook.js":"66"},{"size":158,"mtime":1675852453602,"results":"67","hashOfConfig":"68"},{"size":443,"mtime":1675270513434,"results":"69","hashOfConfig":"68"},{"size":3987,"mtime":1684337743472,"results":"70","hashOfConfig":"68"},{"size":831,"mtime":1677422064415,"results":"71","hashOfConfig":"68"},{"size":19257,"mtime":1685718750714,"results":"72","hashOfConfig":"68"},{"size":3806,"mtime":1682523727432,"results":"73","hashOfConfig":"68"},{"size":15741,"mtime":1684250369908,"results":"74","hashOfConfig":"68"},{"size":6231,"mtime":1686162043821,"results":"75","hashOfConfig":"68"},{"size":15027,"mtime":1685719731354,"results":"76","hashOfConfig":"68"},{"size":19445,"mtime":1685724121065,"results":"77","hashOfConfig":"68"},{"size":18745,"mtime":1684261266552,"results":"78","hashOfConfig":"68"},{"size":5335,"mtime":1685718145434,"results":"79","hashOfConfig":"68"},{"size":18611,"mtime":1685722343638,"results":"80","hashOfConfig":"68"},{"size":547,"mtime":1676995884098,"results":"81","hashOfConfig":"68"},{"size":1352,"mtime":1675959942362,"results":"82","hashOfConfig":"68"},{"size":16844,"mtime":1685721182926,"results":"83","hashOfConfig":"68"},{"size":1504,"mtime":1684424496879,"results":"84","hashOfConfig":"68"},{"size":16827,"mtime":1685720174417,"results":"85","hashOfConfig":"68"},{"size":20212,"mtime":1684949672353,"results":"86","hashOfConfig":"68"},{"size":1335,"mtime":1685087457404,"results":"87","hashOfConfig":"68"},{"size":1341,"mtime":1676217252318,"results":"88","hashOfConfig":"68"},{"size":1374,"mtime":1677421907318,"results":"89","hashOfConfig":"68"},{"size":1252,"mtime":1684075029252,"results":"90","hashOfConfig":"68"},{"size":23274,"mtime":1685087710007,"results":"91","hashOfConfig":"68"},{"size":2581,"mtime":1662523171668,"results":"92","hashOfConfig":"68"},{"size":495,"mtime":1675350796891,"results":"93","hashOfConfig":"68"},{"size":439,"mtime":1682269091423,"results":"94","hashOfConfig":"68"},{"size":7201,"mtime":1684940613919,"results":"95","hashOfConfig":"68"},{"size":7384,"mtime":1675618414731,"results":"96","hashOfConfig":"68"},{"size":5194,"mtime":1676995828447,"results":"97","hashOfConfig":"68"},{"size":5477,"mtime":1684945869794,"results":"98","hashOfConfig":"68"},{"size":4854,"mtime":1684081363237,"results":"99","hashOfConfig":"68"},{"size":7291,"mtime":1682877784613,"results":"100","hashOfConfig":"68"},{"size":5886,"mtime":1684346553210,"results":"101","hashOfConfig":"68"},{"size":19760,"mtime":1685085915544,"results":"102","hashOfConfig":"68"},{"size":2600,"mtime":1675051138368,"results":"103","hashOfConfig":"68"},{"size":4460,"mtime":1684258041519,"results":"104","hashOfConfig":"68"},{"size":1442,"mtime":1675051138370,"results":"105","hashOfConfig":"68"},{"size":1521,"mtime":1682441051324,"results":"106","hashOfConfig":"68"},{"size":24059,"mtime":1684166721893,"results":"107","hashOfConfig":"68"},{"size":1305,"mtime":1676207418749,"results":"108","hashOfConfig":"68"},{"size":439,"mtime":1676565527962,"results":"109","hashOfConfig":"68"},{"size":292,"mtime":1676913945690,"results":"110","hashOfConfig":"68"},{"size":5894,"mtime":1677427451030,"results":"111","hashOfConfig":"68"},{"size":17514,"mtime":1684260873238,"results":"112","hashOfConfig":"68"},{"size":18150,"mtime":1684249905997,"results":"113","hashOfConfig":"68"},{"size":10750,"mtime":1685722130649,"results":"114","hashOfConfig":"68"},{"size":3598,"mtime":1684337043776,"results":"115","hashOfConfig":"68"},{"size":3768,"mtime":1685087863058,"results":"116","hashOfConfig":"68"},{"size":2507,"mtime":1684257921417,"results":"117","hashOfConfig":"68"},{"size":2662,"mtime":1684166393407,"results":"118","hashOfConfig":"68"},{"size":543,"mtime":1675610247675,"results":"119","hashOfConfig":"68"},{"size":3970,"mtime":1682879237967,"results":"120","hashOfConfig":"68"},{"size":8928,"mtime":1675048204544,"results":"121","hashOfConfig":"68"},{"size":1334,"mtime":1675439852952,"results":"122","hashOfConfig":"68"},{"size":2699,"mtime":1684949601831,"results":"123","hashOfConfig":"68"},{"size":360,"mtime":1682791982420,"results":"124","hashOfConfig":"68"},{"size":2459,"mtime":1670490531900,"results":"125","hashOfConfig":"68"},{"size":2084,"mtime":1662523171659,"results":"126","hashOfConfig":"68"},{"size":3551,"mtime":1663647612079,"results":"127","hashOfConfig":"68"},{"size":11010,"mtime":1684260460046,"results":"128","hashOfConfig":"68"},{"size":4449,"mtime":1685725373992,"results":"129","hashOfConfig":"68"},{"size":4554,"mtime":1684256115800,"results":"130","hashOfConfig":"68"},{"size":6223,"mtime":1685718332282,"results":"131","hashOfConfig":"68"},{"size":5884,"mtime":1684423541842,"results":"132","hashOfConfig":"68"},{"size":5448,"mtime":1684945964385,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"1fs13sb",{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"136"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"136"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"136"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"136"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"136"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"136"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"136"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"136"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"136"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"136"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"136"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"136"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"136"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"136"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"136"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"136"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"136"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"136"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"283"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"286"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"136"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"136"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"136"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"136"},"F:\\do_an_frontend\\app\\src\\index.js",[],["305","306"],"F:\\do_an_frontend\\app\\src\\App.js",[],"F:\\do_an_frontend\\app\\src\\layout\\Layout.js",["307","308"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport \"../share/shared.scss\";\r\nimport Login from '../components/login/Login';\r\nimport './Layout.scss';\r\nimport BooksPage from \"../components/books/BooksPage\";\r\nimport Toasts from \"../share/ecm-base/components/toasts/Toasts\";\r\nimport Loading from \"../share/ecm-base/components/loading/Loading\";\r\nimport MenuProject from \"../common/menu-project/MenuProject\";\r\nimport LayoutProject from \"./layout-project/LayoutProject\";\r\nimport DetailBooks from \"../components/books/components/detail_books/DetailBooks\";\r\nimport UserPage from \"../components/user/UserPage\";\r\nimport DetailUser from \"../components/user/components/get_detail_user/DetailUser\";\r\nimport VoucherPage from \"../components/voucher/VoucherPage\";\r\nimport CreateVoucher from \"../components/voucher/components/create_voucher/CreateVoucher\";\r\nimport DetailVoucher from \"../components/voucher/components/detail_voucher/DetailVoucher\";\r\nimport UpdateVoucher from \"../components/voucher/components/update_voucher/UpdateVoucher\";\r\nimport ManagerPage from \"../components/manager/ManagerPage\";\r\nimport ManagerInfoPage from \"../components/manager/manager_info/ManagerInfoPage \";\r\nimport GroupPage from \"../components/group/GroupPage\";\r\nimport ChartVoucher from \"../components/chart/ChartVoucher\";\r\n\r\nexport let openNotification = null\r\nexport let openLoading = null\r\nexport let addLoading = null\r\nexport let subLoading = null\r\nexport let numberLoading = 0\r\n\r\nconst Layout = ({ prefixPath }) => {\r\n  const [toastList, setToastList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(0)\r\n  const showToast = (type, title, message) => {\r\n    const toastProperties = {\r\n      id: Date.now().toString(),\r\n      type: type,\r\n      title: title,\r\n      message: message,\r\n    };\r\n    setToastList([...toastList, toastProperties]);\r\n  };\r\n  openNotification = showToast\r\n\r\n  const _addLoading = () => {\r\n    setIsLoading(isLoading + 1)\r\n  }\r\n\r\n  const _subLoading = () => {\r\n    setIsLoading(isLoading - 1)\r\n  }\r\n\r\n  //setLoading\r\n  addLoading = _addLoading\r\n  subLoading = _subLoading\r\n  numberLoading = isLoading\r\n\r\n  return (\r\n    <div className=\"do-an-container\">\r\n      <Router>\r\n        <Routes>\r\n          <Route exact path={`${prefixPath}/`} element={<Login prefixPath={prefixPath} showToast={showToast} />} />\r\n          <Route exact path={`${prefixPath}/manager`} element={<LayoutProject prefixPath={prefixPath} />} >\r\n            <Route exact path={`books/list`} element={<BooksPage prefixPath={prefixPath} />} />\r\n            <Route exact path={`books/:code`} element={<DetailBooks prefixPath={prefixPath} />} />\r\n            <Route exact path={`user/list`} element={<UserPage prefixPath={prefixPath} />} />\r\n            <Route exact path={`user/:code`} element={<DetailUser prefixPath={prefixPath} />} />\r\n            <Route exact path={`voucher/list`} element={<VoucherPage prefixPath={prefixPath} />} />\r\n            <Route exact path={`voucher/create`} element={<CreateVoucher prefixPath={prefixPath} />} />\r\n            <Route exact path={`voucher/:voucher_id`} element={<DetailVoucher prefixPath={prefixPath} />} />\r\n            <Route exact path={`voucher/:voucher_id/update`} element={<UpdateVoucher prefixPath={prefixPath} />} />\r\n            <Route exact path={`manager-list`} element={<ManagerPage prefixPath={prefixPath} />} />\r\n            <Route exact path={`group/list`} element={<GroupPage prefixPath={prefixPath} />}/>\r\n            <Route exact path={`chart`} element={<ChartVoucher prefixPath={prefixPath} />}/>\r\n          </Route>\r\n          <Route exact path={`${prefixPath}/info-manager/:code`} element={<ManagerInfoPage prefixPath={prefixPath}></ManagerInfoPage>}></Route>\r\n        </Routes>\r\n      </Router>\r\n      <Toasts toastList={toastList} setList={setToastList}></Toasts>\r\n      {(isLoading > 0) && <Loading></Loading>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","F:\\do_an_frontend\\app\\src\\redux\\Store.js",[],"F:\\do_an_frontend\\app\\src\\components\\books\\BooksPage.js",["309","310","311","312","313","314","315","316","317"],"import React, { useEffect, useState } from 'react';\r\nimport './BooksPage.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faFilter, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataTable from \"../../share/ecm-base/components/data-table/DataTable\";\r\nimport BooksAction from \"../../redux/action/BooksAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useSearchParams, Link } from 'react-router-dom';\r\nimport GroupsAction from \"../../redux/action/GroupsAction\";\r\nimport DropDown from '../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport Modal from '../../share/ecm-base/components/modal/Modal';\r\nimport Button from '../../share/ecm-base/components/button/Button';\r\nimport CreateBooks from './components/create_books/CreateBooks';\r\nimport { ListButton } from '../../common/utils';\r\nimport ConstAPI from '../../common/const';\r\nimport Confirm from '../../share/ecm-base/components/confirm/Confirm';\r\nimport UpdateBooks from './components/update_books/UpdateBooks';\r\n\r\nconst BooksPage = ({ prefixPath }) => {\r\n\r\n\r\n    const columnBooks = [\r\n        {\r\n            title: \"Mã sách\",\r\n            dataIndex: \"code\",\r\n            render: (text) => {\r\n                return <Link to={`${prefixPath}/manager/books/${text}`}>{text}</Link>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên sách\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span\r\n                    title={text}\r\n                    style={{\r\n                        textOverflow: \"ellipsis\",\r\n                        overflow: \"hidden\",\r\n                        whiteSpace: \"nowrap\",\r\n                        display: \"inline-block\",\r\n                        width: \"200px\"\r\n                    }}\r\n                >{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tác giả\",\r\n            dataIndex: \"author\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Tiêu đề\",\r\n            dataIndex: \"title\",\r\n            render: (text) => {\r\n                return <span\r\n                title={text}\r\n                style={{\r\n                    textOverflow: \"ellipsis\",\r\n                    overflow: \"hidden\",\r\n                    whiteSpace: \"nowrap\",\r\n                    display: \"inline-block\",\r\n                    width: \"150px\"\r\n                }}\r\n                >{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thể loại\",\r\n            dataIndex: \"group_code\",\r\n            render: (text, index) => {\r\n                return <span>{index?.groups?.group_name}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Tủ đựng\",\r\n            dataIndex: \"cabinet\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"8%\"\r\n        },\r\n        {\r\n            title: \"Số lượng\",\r\n            dataIndex: \"total_books\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"code\",\r\n            render: (code) => {\r\n                return (\r\n                    <ListButton\r\n                        onRemoveAction={() => handleDeleteBooks(code)}\r\n                        removeButtonName=\"btnDeleteBooks\"\r\n                        onEditAction={() => {handleEditBooks(code)}}\r\n                    ></ListButton>\r\n                );\r\n            },\r\n            width: \"15%\"\r\n        }\r\n    ]\r\n\r\n    let listOrder = [\r\n        {\r\n            title: \"Tăng dần\",\r\n            value: 1\r\n        },\r\n        {\r\n            title: \"Giảm dần\",\r\n            value: -1\r\n        },\r\n    ]\r\n\r\n    let listOrderBy = [\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            value: \"created_time\"\r\n        },\r\n        {\r\n            title: \"Thời gian sửa\",\r\n            value: \"modified_time\"\r\n        },\r\n    ]\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listBooks = useSelector(state => state.booksReducer.listBooks)\r\n    const filter = useSelector(state => state.booksReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.booksReducer.pagination)\r\n\r\n    const listGroups = useSelector(state => state.groupsReducer.listGroups)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n    const dispatch = useDispatch();\r\n\r\n    const [isHiddenModalCreateBooks, setIsHiddenModalCreateBooks] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let urlParams = { ...initPagingFilter }\r\n        if (searchParams.get('name')) {\r\n            urlParams[\"name\"] = searchParams.get('name')\r\n        }\r\n        if (searchParams.get('code')) {\r\n            urlParams[\"code\"] = searchParams.get('code')\r\n        }\r\n        if (searchParams.get('author')) {\r\n            urlParams[\"author\"] = searchParams.get('author')\r\n        }\r\n        if (searchParams.get('group_code')) {\r\n            urlParams[\"group_code\"] = searchParams.get('group_code')\r\n        }\r\n        if (searchParams.get('page')) {\r\n            urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        }\r\n        if (searchParams.get('size')) {\r\n            urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        }\r\n        if (searchParams.get('order_by')) {\r\n            urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        }\r\n        if (searchParams.get('order')) {\r\n            urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        }\r\n\r\n        setSearchParams(urlParams)\r\n        BooksAction.updateBooksFilterAction(dispatch, urlParams)\r\n        BooksAction.updateBooksPagination(dispatch, {\r\n            ...pagination,\r\n            page: urlParams.page,\r\n            size: urlParams.size\r\n        })\r\n        BooksAction.getListBooksAction(dispatch, urlParams)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        GroupsAction.getListGroupsAction(dispatch)\r\n    }, [])\r\n\r\n    let listDefault = [\r\n        {\r\n            title: \"Tất cả thể loại\",\r\n            value: \"ALL\"\r\n        }\r\n    ]\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState(listDefault)\r\n\r\n\r\n    useEffect(() => {\r\n        let listGrgoupsDropDown = listGroups.map((item) => {\r\n            return {\r\n                title: item?.group_name,\r\n                value: item?.group_code\r\n            }\r\n        })\r\n        setListDefaultDropDown([...listDefault, ...listGrgoupsDropDown])\r\n    }, [listGroups])\r\n\r\n    const onCancel = () => {\r\n        setIsHiddenModalCreateBooks(!isHiddenModalCreateBooks)\r\n    }\r\n\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter }\r\n        if (field === \"group_code\" && value === \"ALL\") {\r\n            delete newSearchFilter.group_code\r\n        } else {\r\n            newSearchFilter = { ...filter, [field]: value }\r\n        }\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        BooksAction.updateBooksFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSelectDropdown = (field, value) => {\r\n        let newSearchFilter = { ...filter }\r\n        if (field === \"group_code\" && value === \"ALL\") {\r\n            delete newSearchFilter.group_code\r\n        } else {\r\n            newSearchFilter = { ...filter, [field]: value }\r\n        }\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n        setSearchParams(newSearchFilter)\r\n        BooksAction.updateBooksFilterAction(dispatch, newSearchFilter)\r\n        BooksAction.getListBooksAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        BooksAction.getListBooksAction(dispatch, filter)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        console.log(newSize);\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        BooksAction.updateBooksFilterAction(dispatch, newSearchFilter)\r\n        BooksAction.updateBooksPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        BooksAction.getListBooksAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        BooksAction.updateBooksFilterAction(dispatch, newSearchFilter)\r\n        BooksAction.updateBooksPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        BooksAction.getListBooksAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleOpenModalCreate = () => {\r\n        setIsHiddenModalCreateBooks(true)\r\n    }\r\n\r\n    const onSubmitFormCreate = () => {\r\n        document.getElementById(\"do-an-form-create-books-button\").click();\r\n    }\r\n\r\n    const [isOpenConfirmDialog, setIsOpenConfirmDialog] = useState(false);\r\n    const [codeBooksDelete, setCodeBooksDelete] = useState(null);\r\n\r\n    const handleDeleteBooks = (code) => {\r\n        setCodeBooksDelete(code)\r\n        setIsOpenConfirmDialog(true)\r\n    }\r\n\r\n    const handleCancelConfirmDialog = () => {\r\n        setCodeBooksDelete(null)\r\n        setIsOpenConfirmDialog(false)\r\n    }\r\n\r\n    const handleDeleteConfirmDialog = () => {\r\n        BooksAction.removeBooks(dispatch, codeBooksDelete, filter)\r\n        handleCancelConfirmDialog()\r\n    }\r\n\r\n    const [openModalUpdate, setOpenModalUpdate] = useState(false)\r\n    const [idUpdate, setIdUpdate] = useState(null)\r\n\r\n    const handleEditBooks = (code) => {\r\n        setIdUpdate(code)\r\n        setOpenModalUpdate(true)\r\n    }\r\n\r\n    const onSubmitFormUpdate = () => {\r\n        document.getElementById(\"do-an-form-update-books-button\").click();\r\n        \r\n    }\r\n\r\n    const onCancelUpdate = () =>{\r\n        setOpenModalUpdate(false)\r\n        setIdUpdate(null)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            handleSearch()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"do-an__books\">\r\n            <div className=\"do-an__books__image-cover\">\r\n                {/* <img className=\"image-cover\" src={imageCover}></img> */}\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh mục sách</h3>\r\n            </div>\r\n            <div className=\"do-an__books__group-search\">\r\n                <div className=\"do-an__books__group-search__filter\">\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Tên sách:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <input className=\"do-an__books__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"name\", event.target.value)}\r\n                                value={filter?.name || \"\"}\r\n                                onKeyDown={(event) => handleKeyDown(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Mã sách:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <input className=\"do-an__books__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"code\", event.target.value)}\r\n                                value={filter?.code || \"\"}\r\n                                onKeyDown={(event) => handleKeyDown(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Tác giả:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <input className=\"do-an__books__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"author\", event.target.value)}\r\n                                value={filter?.author || \"\"}\r\n                                onKeyDown={(event) => handleKeyDown(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"do-an__books__group-search__filter\">\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Thể loại:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__books__group-search__item__input\"\r\n                                listItem={listDefaultDropDown}\r\n                                selected={filter?.group_code || \"ALL\"}\r\n                                name=\"group_code\"\r\n                                onSelected={handleSelectDropdown}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Sắp xếp theo:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__books__group-search__item__input\"\r\n                                listItem={listOrderBy}\r\n                                selected={filter?.order_by || \"created_time\"}\r\n                                name=\"order_by\"\r\n                                onSelected={handleSelectDropdown}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__books__group-search__item\">\r\n                        <div className=\"do-an__books__group-search__item__title\">\r\n                            Thứ tự:\r\n                        </div>\r\n                        <div className=\"do-an__books__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__books__group-search__item__input\"\r\n                                listItem={listOrder}\r\n                                selected={filter?.order || -1}\r\n                                name=\"order\"\r\n                                onSelected={handleSelectDropdown}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__books__group-search__button-search\">\r\n                    <button className=\"button-search\" onClick={handleSearch}>Tìm kiếm</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"do-an__books__group-table\">\r\n                <div className=\"do-an__books__group-table__title\">\r\n                    <button className=\"button-create-new\" onClick={handleOpenModalCreate}>Thêm mới</button>\r\n                </div>\r\n                <div className=\"do-an__books__group-table__table-data\">\r\n                    <DataTable headerData={columnBooks}\r\n                        tableData={listBooks}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        pagination={pagination}\r\n                        onPageChange={handleNumberPagehange}\r\n                    >\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Tạo mới sách\"\r\n                width=\"70%\"\r\n                onCancel={onCancel}\r\n                visible={isHiddenModalCreateBooks}\r\n                footer={\r\n                    <div className='do-an__modal__footer'>\r\n                        <Button\r\n                            type={\"normal-green\"}\r\n                            onClick={onSubmitFormCreate}\r\n                        >\r\n                            Tạo mới\r\n                        </Button>\r\n                        <Button\r\n                            type={\"normal-gray\"}\r\n                            onClick={onCancel}\r\n                        >\r\n                            Hủy bỏ\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            >\r\n                {isHiddenModalCreateBooks && <CreateBooks onCloseModal={onCancel}></CreateBooks>}\r\n            </Modal>\r\n\r\n            <Confirm\r\n                title=\"Xoá sách\"\r\n                width=\"45%\"\r\n                visible={isOpenConfirmDialog}\r\n                onCancel={handleCancelConfirmDialog}\r\n                onOk={handleDeleteConfirmDialog}\r\n            >\r\n                <p>Nếu xóa {codeBooksDelete} thì dữ liệu sách sẽ mất hết, xác nhận xóa?</p>\r\n            </Confirm>\r\n\r\n            {openModalUpdate &&\r\n                <Modal\r\n                    title=\"Cập nhật thông tin sách\"\r\n                    width=\"70%\"\r\n                    onCancel={onCancelUpdate}\r\n                    visible={openModalUpdate}\r\n                    footer={\r\n                        <div className='do-an__modal__footer'>\r\n                            <Button\r\n                                type={\"normal-blue\"}\r\n                                onClick={onSubmitFormUpdate}\r\n                            >\r\n                                Cập nhật\r\n                            </Button>\r\n                            <Button\r\n                                type={\"normal-gray\"}\r\n                                onClick={onCancelUpdate}\r\n                            >\r\n                                Hủy bỏ\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <UpdateBooks onCloseModal={onCancelUpdate} codeBooks={idUpdate}>\r\n\r\n                    </UpdateBooks>\r\n                </Modal>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BooksPage;","F:\\do_an_frontend\\app\\src\\layout\\layout-project\\LayoutProject.js",["318","319","320"],"import React, { useEffect, useState } from 'react'\r\nimport { Outlet, useNavigate, useLocation } from 'react-router-dom';\r\nimport \"./LayoutProject.scss\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MenuProject from \"../../common/menu-project/MenuProject\";\r\nimport LoginAction from '../../redux/action/LoginAction';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleUser, faAnglesLeft, faAnglesRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport logo from '../../share/image/logo.jpg';\r\n\r\n\r\nexport let openNotification = null\r\nexport let openLoading = null\r\n\r\nconst LayoutProject = ({ prefixPath }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const checkRole = () => {\r\n    const jwt = require('jsonwebtoken');\r\n    const token = window.localStorage.getItem(\"token\");\r\n    // const secret = '123456';\r\n    const decoded = jwt.decode(token);\r\n    LoginAction.updateDataToken(dispatch, decoded)\r\n  }\r\n\r\n  const tokenDecode = useSelector(state => state.loginReducer.dataToken)\r\n\r\n  useEffect(() => {\r\n    checkRole()\r\n  }, [])\r\n\r\n  // useEffect(() => {\r\n  //   ManagerAction.getDetailManagerAction(dispatch, tokenDecode?.code)\r\n  // }, [tokenDecode])\r\n\r\n  const location = useLocation()\r\n\r\n  console.log(location);\r\n\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.setItem(\"token\", \"\")\r\n    navigate(`${prefixPath}/`);\r\n  }\r\n\r\n  const handleOpenInfoManager = () => {\r\n    navigate(`${prefixPath}/info-manager/${tokenDecode.code}`)\r\n  }\r\n\r\n  const [isExpand, setIsExpand] = useState(true);\r\n\r\n\r\n  const handleHiddenSideBar = () => {\r\n    setIsExpand(!isExpand)\r\n  }\r\n\r\n  return (\r\n    <div className=\"do-an__layout-project__container\">\r\n      <div className={isExpand ? \"do-an__layout-project__container__view-expand\" : \"do-an__layout-project__container__view-inexpand\"}>\r\n        {location.pathname === '/manager' ? \r\n            <iframe style={{width:\"100%\", height:\"100%\"}} src='http://thuvienso.actvn.edu.vn/'></iframe> : <Outlet></Outlet>\r\n      }\r\n      </div>\r\n      <div className={`do-an__layout-project__container__menu ${isExpand ? \"\" : \"inexpand\"}`}>\r\n      <div className='do-an__layout-project__container__logo'>\r\n        <img className={`do-an__layout-project__container__logo__image ${isExpand ? \"\" : \"logo-inexpand\"}`} src={logo}></img>\r\n        {/* <div className='do-an__layout-project__container__logo__title'>\r\n              QUẢN LÝ THƯ VIỆN\r\n        </div> */}\r\n      </div>\r\n        <MenuProject prefixPath={prefixPath} isExpand={isExpand}/>\r\n        <div className={`do-an__layout-project__container__manager-info ${isExpand ? \"\" : \"manager-info-inexpand\"}`}>\r\n          <div title='Thông tin cá nhân' className='do-an__layout-project__container__manager-info__icon' onClick={handleOpenInfoManager}>\r\n            <FontAwesomeIcon style={{ height: \"35px\", marginBottom: \"10px\", cursor: \"pointer\", color:\"white\" }} icon={faCircleUser}></FontAwesomeIcon>\r\n          </div>\r\n          <div className={`do-an__layout-project__container__manager-info__username ${isExpand ? \"\" : \"username-inexpand\"}`} onClick={handleOpenInfoManager}>\r\n            {tokenDecode?.username}\r\n          </div>\r\n          <div title='Đăng xuất' className={`do-an__layout-project__container__manager-info__logout ${isExpand ? \"\" : \"logout-inexpand\"}`} onClick={handleLogout}>\r\n            Đăng xuất\r\n          </div>\r\n          <div className='do-an__layout-project__container__manager-info__icon-inexpand'>\r\n            <FontAwesomeIcon style={{ height: \"18px\", marginTop: \"10px\" }} onClick={handleHiddenSideBar} icon={ isExpand===true ? faAnglesLeft : faAnglesRight}></FontAwesomeIcon>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayoutProject\r\n","F:\\do_an_frontend\\app\\src\\components\\user\\UserPage.js",["321","322","323","324","325"],"import React, { useEffect, useState } from 'react';\r\nimport './UserPage.scss';\r\nimport DataTable from \"../../share/ecm-base/components/data-table/DataTable\";\r\nimport UserAction from \"../../redux/action/UserAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useSearchParams, Link } from 'react-router-dom';\r\nimport DropDown from '../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport Modal from '../../share/ecm-base/components/modal/Modal';\r\nimport Button from '../../share/ecm-base/components/button/Button';\r\nimport { ListButton, ListButtonUser } from '../../common/utils';\r\nimport ConstAPI from '../../common/const';\r\nimport Confirm from '../../share/ecm-base/components/confirm/Confirm';\r\nimport CreateUser from './components/create_user/CreateUser';\r\nimport { event } from 'jquery';\r\n\r\nconst UserPage = ({ prefixPath }) => {\r\n\r\n\r\n    const columnUser = [\r\n        {\r\n            title: \"Mã người dùng\",\r\n            dataIndex: \"code\",\r\n            render: (text) => {\r\n                return <Link to={`${prefixPath}/manager/user/${text}`}>{text}</Link>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên người dùng\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ngày sinh\",\r\n            dataIndex: \"date_of_birth\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Giới tính\",\r\n            dataIndex: \"gender\",\r\n            render: (text) => {\r\n                return <span>{text === \"MALE\" ? \"Nam\" : \"Nữ\"}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Phân quyền\",\r\n            dataIndex: \"role\",\r\n            render: (text) => {\r\n                return <span>{text === \"STUDENT\" ? \"Sinh viên\" : \"Giảng viên\"}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            dataIndex: \"created_time\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"code\",\r\n            render: (code) => {\r\n                return (\r\n                    <ListButtonUser\r\n                        editDisable = {true}\r\n                        onRemoveAction={() => handleDeleteUser(code)}\r\n                        removeButtonName=\"btnDeleteUser\"\r\n                    ></ListButtonUser>\r\n                );\r\n            },\r\n            width: \"15%\"\r\n        }\r\n    ]\r\n\r\n    let listOrder = [\r\n        {\r\n            title: \"Tăng dần\",\r\n            value: 1\r\n        },\r\n        {\r\n            title: \"Giảm dần\",\r\n            value: -1\r\n        },\r\n    ]\r\n\r\n    const listRole= [\r\n        {\r\n            title: \"Tất cả\",\r\n            value: \"ALL\"\r\n        },\r\n        {\r\n            title: \"Sinh viên\",\r\n            value: \"STUDENT\"\r\n        },\r\n        {\r\n            title: \"Giảng viên\",\r\n            value: \"TEACHER\"\r\n        }\r\n    ]\r\n\r\n    let listOrderBy = [\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            value: \"created_time\"\r\n        },\r\n        {\r\n            title: \"Thời gian sửa\",\r\n            value: \"modified_time\"\r\n        },\r\n        {\r\n            title: \"Tên\",\r\n            value: \"name\"\r\n        },\r\n    ]\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listUser = useSelector(state => state.userReducer.listUser)\r\n    const filter = useSelector(state => state.userReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.userReducer.pagination)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n    const dispatch = useDispatch();\r\n\r\n    const [isHiddenModalCreateUser, setIsHiddenModalCreateUser] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let urlParams = { ...initPagingFilter }\r\n        if (searchParams.get('name')) {\r\n            urlParams[\"name\"] = searchParams.get('name')\r\n        }\r\n        if (searchParams.get('code')) {\r\n            urlParams[\"code\"] = searchParams.get('code')\r\n        }\r\n        if (searchParams.get('course')) {\r\n            urlParams[\"course\"] = searchParams.get('course')\r\n        }\r\n        if (searchParams.get('page')) {\r\n            urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        }\r\n        if (searchParams.get('size')) {\r\n            urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        }\r\n        if (searchParams.get('order_by')) {\r\n            urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        }\r\n        if (searchParams.get('order')) {\r\n            urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        }\r\n        if (searchParams.get('role')) {\r\n            urlParams[\"role\"] = parseInt(searchParams.get('role'))\r\n        }\r\n\r\n        setSearchParams(urlParams)\r\n        UserAction.updateUserFilterAction(dispatch, urlParams)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            page: urlParams.page,\r\n            size: urlParams.size\r\n        })\r\n        UserAction.getListUserAction(dispatch, urlParams)\r\n    }, [])\r\n\r\n    const onCancel = () => {\r\n        setIsHiddenModalCreateUser(!isHiddenModalCreateUser)\r\n    }\r\n\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = {}\r\n        if(field === \"role\" && value === \"ALL\"){\r\n            newSearchFilter = { ...filter ,[field]: \"\" }\r\n        }\r\n         else{\r\n            newSearchFilter = { ...filter ,[field]: value }\r\n         }\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleChangeDropdownSearch= (field, value) => {\r\n        let newSearchFilter = {}\r\n        if(field === \"role\" && value === \"ALL\"){\r\n            newSearchFilter = { ...filter ,[field]: \"\" }\r\n        }\r\n         else{\r\n            newSearchFilter = { ...filter ,[field]: value }\r\n         }\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n         setSearchParams(newSearchFilter);\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter);\r\n        UserAction.getListUserAction(dispatch, newSearchFilter);\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        UserAction.getListUserAction(dispatch, filter)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        UserAction.getListUserAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        UserAction.getListUserAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleOpenModalCreate = () => {\r\n        setIsHiddenModalCreateUser(true)\r\n    }\r\n\r\n    const onSubmitFormCreate = () => {\r\n        document.getElementById(\"do-an-form-create-user-button\").click();\r\n    }\r\n\r\n    const [isOpenConfirmDialog, setIsOpenConfirmDialog] = useState(false);\r\n    const [codeUserDelete, setCodeUserDelete] = useState(null);\r\n\r\n    const handleDeleteUser = (code) => {\r\n        setCodeUserDelete(code)\r\n        setIsOpenConfirmDialog(true)\r\n    }\r\n\r\n    const handleCancelConfirmDialog = () => {\r\n        setCodeUserDelete(null)\r\n        setIsOpenConfirmDialog(false)\r\n    }\r\n\r\n    const handleDeleteConfirmDialog = () => {\r\n        UserAction.removeUser(dispatch, codeUserDelete, filter)\r\n        handleCancelConfirmDialog()\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            handleSearch()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"do-an__user\">\r\n            <div className=\"do-an__user__image-cover\">\r\n                {/* <img className=\"image-cover\" src={imageCover}></img> */}\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh sách người dùng</h3>\r\n            </div>\r\n            <div className=\"do-an__user__group-search\">\r\n                <div className=\"do-an__user__group-search__filter\">\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Tên người dùng:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <input className=\"do-an__user__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"name\", event.target.value)}\r\n                                value={filter?.name || \"\"}\r\n                                onKeyDown={(event) => handleKeyDown(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Mã người dùng:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <input className=\"do-an__user__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"code\", event.target.value)}\r\n                                value={filter?.code || \"\"}\r\n                                onKeyDown={(event) => handleKeyDown(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Sắp xếp theo:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__user__group-search__item__input\"\r\n                                listItem={listOrderBy}\r\n                                selected={filter?.order_by || \"created_time\"}\r\n                                name=\"order_by\"\r\n                                onSelected={handleChangeDropdownSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Thứ tự:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__user__group-search__item__input\"\r\n                                listItem={listOrder}\r\n                                selected={filter?.order || -1}\r\n                                name=\"order\"\r\n                                onSelected={handleChangeDropdownSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Phân quyền:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            {/* <input className=\"do-an__user__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"course\", event.target.value)}\r\n                                value={filter?.course || \"\"}\r\n                            /> */}\r\n                            <DropDown className=\"do-an__user__group-search__item__input\"\r\n                                listItem={listRole}\r\n                                selected={filter?.role || \"ALL\"}\r\n                                name=\"role\"\r\n                                onSelected={handleChangeDropdownSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__user__group-search__button-search\">\r\n                    <button className=\"button-search\" onClick={handleSearch}>Tìm kiếm</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"do-an__user__group-table\">\r\n                <div className=\"do-an__user__group-table__title\">\r\n                    <button className=\"button-create-new\" onClick={handleOpenModalCreate}>Thêm mới</button>\r\n                </div>\r\n                <div className=\"do-an__user__group-table__table-data\">\r\n                    <DataTable headerData={columnUser}\r\n                        tableData={listUser}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        pagination={pagination}\r\n                        onPageChange={handleNumberPagehange}\r\n                    >\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Tạo mới người dùng\"\r\n                width=\"50%\"\r\n                onCancel={onCancel}\r\n                visible={isHiddenModalCreateUser}\r\n                footer={\r\n                    <div className='do-an__modal__footer'>\r\n                        <Button\r\n                            type={\"normal-green\"}\r\n                            onClick={onSubmitFormCreate}\r\n                        >\r\n                            Tạo mới\r\n                        </Button>\r\n                        <Button\r\n                            type={\"normal-gray\"}\r\n                            onClick={onCancel}\r\n                        >\r\n                            Hủy bỏ\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            >\r\n                {isHiddenModalCreateUser && <CreateUser onCloseModal={onCancel}></CreateUser>}\r\n            </Modal>\r\n\r\n            <Confirm\r\n                title=\"Xoá người dùng\"\r\n                width=\"45%\"\r\n                visible={isOpenConfirmDialog}\r\n                onCancel={handleCancelConfirmDialog}\r\n                onOk={handleDeleteConfirmDialog}\r\n            >\r\n                <p>Nếu xóa {codeUserDelete} thì dữ liệu thông tin và mượn sách của người dùng sẽ mất hết, xác nhận xóa?</p>\r\n            </Confirm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPage;","F:\\do_an_frontend\\app\\src\\components\\login\\Login.js",["326","327","328"],"F:\\do_an_frontend\\app\\src\\components\\manager\\ManagerPage.js",["329","330","331","332","333","334","335","336","337","338"],"import React, { useEffect, useState } from 'react';\r\nimport './ManagerPage.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faFilter, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataTable from \"../../share/ecm-base/components/data-table/DataTable\";\r\nimport ManagerAction from \"../../redux/action/ManagerAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useSearchParams, Link } from 'react-router-dom';\r\nimport DropDown from '../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport Modal from '../../share/ecm-base/components/modal/Modal';\r\nimport Button from '../../share/ecm-base/components/button/Button';\r\nimport { ListButton, ListButtonUser } from '../../common/utils';\r\nimport ConstAPI from '../../common/const';\r\nimport Confirm from '../../share/ecm-base/components/confirm/Confirm';\r\nimport CreateManager from './create-manager/CreateManager';\r\nimport DetailManager from './get-detail-manager/DetailManager';\r\nimport { event } from 'jquery';\r\n\r\nconst ManagerPage = ({ prefixPath }) => {\r\n\r\n\r\n    const columnManager = [\r\n        {\r\n            title: \"Mã quản lý\",\r\n            dataIndex: \"code\",\r\n            render: (text, index) => {\r\n                return <span style={{textDecoration:\"underline\", color:\"#141ed2\", cursor:\"pointer\"}} onClick={() => handleOpenModalDetail(text)}>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên quản lý\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ngày sinh\",\r\n            dataIndex: \"date_of_birth\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Giới tính\",\r\n            dataIndex: \"gender\",\r\n            render: (text) => {\r\n                return <span>{text===\"MALE\" ? \"Nam\" : \"Nữ\"}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Tài khoản\",\r\n            dataIndex: \"user_name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            dataIndex: \"created_time\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"code\",\r\n            render: (code) => {\r\n                return (\r\n                    <ListButtonUser\r\n                        editDisable = {true}\r\n                        onRemoveAction={() => handleDeleteManager(code)}\r\n                        removeButtonName=\"btnDeleteManager\"\r\n                    ></ListButtonUser>\r\n                );\r\n            },\r\n            width: \"15%\"\r\n        }\r\n    ]\r\n\r\n    let listOrder = [\r\n        {\r\n            title: \"Tăng dần\",\r\n            value: 1\r\n        },\r\n        {\r\n            title: \"Giảm dần\",\r\n            value: -1\r\n        },\r\n    ]\r\n\r\n    let listOrderBy = [\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            value: \"created_time\"\r\n        },\r\n        {\r\n            title: \"Thời gian sửa\",\r\n            value: \"modified_time\"\r\n        },\r\n        {\r\n            title: \"Tên\",\r\n            value: \"name\"\r\n        },\r\n    ]\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listManager = useSelector(state => state.managerReducer.listManager)\r\n    const filter = useSelector(state => state.managerReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.managerReducer.pagination)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n    const dispatch = useDispatch();\r\n\r\n    const [isHiddenModalCreateManager, setIsHiddenModalCreateManager] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let urlParams = { ...initPagingFilter }\r\n        if (searchParams.get('name')) {\r\n            urlParams[\"name\"] = searchParams.get('name')\r\n        }\r\n        if (searchParams.get('code')) {\r\n            urlParams[\"code\"] = searchParams.get('code')\r\n        }\r\n        if (searchParams.get('page')) {\r\n            urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        }\r\n        if (searchParams.get('size')) {\r\n            urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        }\r\n        if (searchParams.get('order_by')) {\r\n            urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        }\r\n        if (searchParams.get('order')) {\r\n            urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        }\r\n\r\n        setSearchParams(urlParams)\r\n        ManagerAction.updateManagerFilterAction(dispatch, urlParams)\r\n        ManagerAction.updateManagerPagination(dispatch, {\r\n            ...pagination,\r\n            page: urlParams.page,\r\n            size: urlParams.size\r\n        })\r\n        ManagerAction.getListManagerAction(dispatch, urlParams)\r\n    }, [])\r\n\r\n    const onCancel = () => {\r\n        setIsHiddenModalCreateManager(!isHiddenModalCreateManager)\r\n    }\r\n\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter ,[field]: value }\r\n        console.log(newSearchFilter);\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        ManagerAction.updateManagerFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleChangeDropdownSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter ,[field]: value }\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        ManagerAction.updateManagerFilterAction(dispatch, newSearchFilter)\r\n        ManagerAction.getListManagerAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        ManagerAction.getListManagerAction(dispatch, filter)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        console.log(newSize);\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        ManagerAction.updateManagerFilterAction(dispatch, newSearchFilter)\r\n        ManagerAction.updateManagerPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        ManagerAction.getListManagerAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        ManagerAction.updateManagerFilterAction(dispatch, newSearchFilter)\r\n        ManagerAction.updateManagerPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        ManagerAction.getListManagerAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleOpenModalCreate = () => {\r\n        setIsHiddenModalCreateManager(true)\r\n    }\r\n\r\n    const onSubmitFormCreate = () => {\r\n        document.getElementById(\"do-an-form-create-manager-button\").click();\r\n    }\r\n\r\n    const [isOpenConfirmDialog, setIsOpenConfirmDialog] = useState(false);\r\n    const [codeManagerDelete, setCodeManagerDelete] = useState(null);\r\n    const [detailManager, setDetailManager] = useState(null)\r\n    const [openModalDetail, setOpenModalDetail] = useState(false)\r\n\r\n    const handleDeleteManager = (code) => {\r\n        setCodeManagerDelete(code)\r\n        setIsOpenConfirmDialog(true)\r\n    }\r\n\r\n    const handleCancelConfirmDialog = () => {\r\n        setCodeManagerDelete(null)\r\n        setIsOpenConfirmDialog(false)\r\n    }\r\n\r\n    const handleDeleteConfirmDialog = () => {\r\n        ManagerAction.removeManager(dispatch, codeManagerDelete, filter)\r\n        handleCancelConfirmDialog()\r\n    }\r\n\r\n    const handleOpenModalDetail = (item) => {\r\n        setDetailManager(item);\r\n        setOpenModalDetail(true)\r\n    }\r\n\r\n    const onCancelDetail = () => {\r\n        setOpenModalDetail(false)\r\n        setDetailManager(null)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            handleSearch()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"do-an__manager\">\r\n            <div className=\"do-an__manager__image-cover\">\r\n                {/* <img className=\"image-cover\" src={imageCover}></img> */}\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh sách người quản lý</h3>\r\n            </div>\r\n            <div className=\"do-an__manager__group-search\">\r\n                <div className=\"do-an__manager__group-search__filter\">\r\n                    <div className=\"do-an__manager__group-search__item\">\r\n                        <div className=\"do-an__manager__group-search__item__title\">\r\n                            Tên quản lý:\r\n                        </div>\r\n                        <div className=\"do-an__manager__group-search__item__input-container\">\r\n                            <input className=\"do-an__manager__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"name\", event.target.value)}\r\n                                value={filter?.name || \"\"}\r\n                                onKeyDown={(event) => handleKeyDown(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__manager__group-search__item\">\r\n                        <div className=\"do-an__manager__group-search__item__title\">\r\n                            Mã quản lý:\r\n                        </div>\r\n                        <div className=\"do-an__manager__group-search__item__input-container\">\r\n                            <input className=\"do-an__manager__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"code\", event.target.value)}\r\n                                value={filter?.code || \"\"}\r\n                                onkeydown={(event) => handleKeyDown(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__manager__group-search__item\">\r\n                        <div className=\"do-an__manager__group-search__item__title\">\r\n                            Sắp xếp theo:\r\n                        </div>\r\n                        <div className=\"do-an__manager__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__manager__group-search__item__input\"\r\n                                listItem={listOrderBy}\r\n                                selected={filter?.order_by || \"created_time\"}\r\n                                name=\"order_by\"\r\n                                onSelected={handleChangeDropdownSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__manager__group-search__item\">\r\n                        <div className=\"do-an__manager__group-search__item__title\">\r\n                            Thứ tự:\r\n                        </div>\r\n                        <div className=\"do-an__manager__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__manager__group-search__item__input\"\r\n                                listItem={listOrder}\r\n                                selected={filter?.order || -1}\r\n                                name=\"order\"\r\n                                onSelected={handleChangeDropdownSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__manager__group-search__button-search\">\r\n                    <button className=\"button-search\" onClick={handleSearch}>Tìm kiếm</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"do-an__manager__group-table\">\r\n                <div className=\"do-an__manager__group-table__title\">\r\n                    <button className=\"button-create-new\" onClick={handleOpenModalCreate}>Thêm mới</button>\r\n                </div>\r\n                <div className=\"do-an__manager__group-table__table-data\">\r\n                    <DataTable headerData={columnManager}\r\n                        tableData={listManager}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        pagination={pagination}\r\n                        onPageChange={handleNumberPagehange}\r\n                    >\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Tạo mới quản lý\"\r\n                width=\"50%\"\r\n                onCancel={onCancel}\r\n                visible={isHiddenModalCreateManager}\r\n                footer={\r\n                    <div className='do-an__modal__footer'>\r\n                        <Button\r\n                            type={\"normal-green\"}\r\n                            onClick={onSubmitFormCreate}\r\n                        >\r\n                            Tạo mới\r\n                        </Button>\r\n                        <Button\r\n                            type={\"normal-gray\"}\r\n                            onClick={onCancel}\r\n                        >\r\n                            Hủy bỏ\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            >\r\n                {isHiddenModalCreateManager && <CreateManager onCloseModal={onCancel}></CreateManager>}\r\n            </Modal>\r\n\r\n            <Modal\r\n                title=\"Chi tiết quản lý\"\r\n                width=\"70%\"\r\n                onCancel={onCancelDetail}\r\n                visible={openModalDetail}\r\n                footer={null}\r\n            >\r\n                {openModalDetail && <DetailManager detailManager={detailManager}></DetailManager>}\r\n            </Modal>\r\n\r\n            <Confirm\r\n                title=\"Xoá quản lý\"\r\n                width=\"45%\"\r\n                visible={isOpenConfirmDialog}\r\n                onCancel={handleCancelConfirmDialog}\r\n                onOk={handleDeleteConfirmDialog}\r\n            >\r\n                <p>Nếu xóa {codeManagerDelete} thì dữ liệu thông tin của quản lý sẽ mất hết, xác nhận xóa?</p>\r\n            </Confirm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerPage;","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\create_voucher\\CreateVoucher.js",["339","340","341","342","343"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faBook, faPencil } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"./CreateVoucher.scss\";\r\nimport Button from \"../../../../share/ecm-base/components/button/Button\";\r\nimport DataTable from \"../../../../share/ecm-base/components/data-table/DataTable\";\r\nimport { ListButton, ListButtonUser } from \"../../../../common/utils\";\r\nimport Modal from \"../../../../share/ecm-base/components/modal/Modal\";\r\nimport UserPageVoucher from \"../user_voucher/UserPageVoucher\";\r\nimport UserAction from \"../../../../redux/action/UserAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport BookAction from \"../../../../redux/action/BookAction\";\r\nimport ConstAPI, { openNotificationCommon } from \"../../../../common/const\";\r\nimport VoucherAction from \"../../../../redux/action/VoucherAction\";\r\nimport { DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\nconst CreateVoucher = ({ prefixPath }) => {\r\n\r\n    const columnVoucher = [\r\n        {\r\n            title: \"Mã sách\",\r\n            dataIndex: \"code_id\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên sách\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tác giả\",\r\n            dataIndex: \"author\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tiêu đề\",\r\n            dataIndex: \"title\",\r\n            render: (text) => {\r\n                return <span\r\n                    style={{\r\n                        textOverflow: \"ellipsis\",\r\n                        overflow: \"hidden\",\r\n                        whiteSpace: \"nowrap\",\r\n                        display: \"inline-block\",\r\n                        width: \"150px\"\r\n                    }}\r\n                >{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"code_id\",\r\n            render: (code_id) => {\r\n                return (\r\n                    <ListButtonUser\r\n                        editDisable={true}\r\n                    ></ListButtonUser>\r\n                );\r\n            },\r\n            width: \"5%\"\r\n        }\r\n    ]\r\n\r\n    const { setValue, register, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n\r\n    const [listBookTable, setListBookTable] = useState([])\r\n    const [openModalUser, setOpenModaluser] = useState(false)\r\n    const [valueInput, setValueInput] = useState(\"\")\r\n    const [dataUser, setDataUser] = useState({})\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n\r\n\r\n    // const detailUser = useSelector(state => state.userReducer.detailUser)\r\n\r\n    var currentdate = new Date();\r\n    var datetime = currentdate.getFullYear() + \"-\"\r\n        + (currentdate.getMonth() + 1 > 9 ? currentdate.getMonth() + 1 : (\"0\" + (currentdate.getMonth() + 1))) + \"-\"\r\n        + (currentdate.getDate() < 10 ? (\"0\" + currentdate.getDate()) : currentdate.getDate()) + \"-\"\r\n        + (currentdate.getHours() < 10 ? (\"0\" + currentdate.getHours()) : currentdate.getHours()) + \":\"\r\n        + (currentdate.getMinutes() < 10 ? (\"0\" + currentdate.getMinutes()) : currentdate.getMinutes()) + \":\"\r\n        + (currentdate.getSeconds() < 10 ? (\"0\" + currentdate.getSeconds()) : currentdate.getSeconds());\r\n\r\n    const [formCreate, setFormCreate] = useState({ due_date: \"\" })\r\n\r\n    useEffect(() => {\r\n        setValue(\"check_due_date\", formCreate?.due_date)\r\n    }, [formCreate?.due_date])\r\n\r\n    console.log(formCreate);\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const handleOpenModalUser = () => {\r\n        setOpenModaluser(true)\r\n    }\r\n\r\n    const handleCloseModalUser = () => {\r\n        setOpenModaluser(false)\r\n    }\r\n\r\n    const handleSelectUser = (user_id) => {\r\n        UserAction.getDetailUserAction(dispatch, user_id).then(response => {\r\n            setDataUser(response)\r\n            setFormCreate({\r\n                ...formCreate,\r\n                \"user_id\": response.code\r\n            })\r\n            setValue(\"name\", response?.name)\r\n\r\n        })\r\n        delete errors.name\r\n        setOpenModaluser(false)\r\n    }\r\n\r\n    const handleChangeInput = (value) => {\r\n        setValueInput(value)\r\n    }\r\n\r\n    const handleChangeInputForm = (field, value) => {\r\n        let newFormData = {}\r\n        if (field === \"due_date\" && value !== '') {\r\n            newFormData = { ...formCreate, [field]: value.format(\"YYYY-MM-DD-HH:mm:ss\") }\r\n            if (errors.check_due_date?.type) {\r\n                delete errors.check_due_date\r\n            }\r\n        } else {\r\n            newFormData = { ...formCreate, [field]: value }\r\n        }\r\n        setFormCreate(newFormData)\r\n    }\r\n\r\n    const handleAddBook = () => {\r\n        if (valueInput.trim() !== \"\") {\r\n            BookAction.getDetailBookAction(dispatch, valueInput).then(response => {\r\n                if (response.status === 200) {\r\n                    setListBookTable([\r\n                        ...listBookTable,\r\n                        {\r\n                            \"code_id\": valueInput,\r\n                            \"name\": response.data.data.books.name,\r\n                            \"avatar\": response.data.data.books.avatar,\r\n                            \"author\": response.data.data.books.author,\r\n                            \"title\": response.data.data.books.title\r\n                        }\r\n                    ])\r\n\r\n                }\r\n            })\r\n            // setListBookCreate([\r\n            //     ...listBookCreate,\r\n            //     valueInput\r\n            // ])\r\n\r\n            setValueInput(\"\")\r\n        }\r\n    }\r\n\r\n    const managerToken = useSelector(state => state.loginReducer.dataToken)\r\n\r\n    const handleSubmitFormCreate = () => {\r\n        if (listBookTable.length === 0) {\r\n            openNotificationCommon(\"error\", \"Thông báo\", \"Danh sách sách mượn không được để trống!\")\r\n            return\r\n        }\r\n        const formCreateVoucher = {\r\n            ...formCreate,\r\n            books_borrowed: listBookTable\r\n        }\r\n\r\n        VoucherAction.createVoucherAction(formCreateVoucher, dispatch, initPagingFilter)\r\n        navigate(`${prefixPath}/manager/voucher/list`)\r\n    }\r\n\r\n    console.log(errors.name);\r\n\r\n\r\n    return (\r\n        <form className=\"do-an__create-voucher__form\" onSubmit={handleSubmit(handleSubmitFormCreate)}>\r\n            <div className='do-an__create-voucher-container'>\r\n                <div className='do-an__create-voucher-container__header'>\r\n                    <div className='do-an__create-voucher-container__header__text'>\r\n                        <button\r\n                            className=\"do-an__create-voucher-container__header__button\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => navigate(-1)}\r\n                            type=\"button\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faArrowLeft} style={{ height: \"22px\", marginTop: \"5px\", marginLeft: \"5px\" }} />\r\n                        </button>\r\n                        <div className='do-an__create-voucher-container__header__title'>Lập phiếu mượn</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__create-voucher-container__body\">\r\n                    <div className=\"do-an__create-voucher-container__body__user-info\">\r\n                        <div className=\"do-an__create-voucher-container__body__user-info__group-info\">\r\n                            <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-first\">\r\n                                <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-input-name\">\r\n                                    <div>\r\n                                        Tên người dùng<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <input\r\n                                            value={dataUser?.name}\r\n                                            readOnly={true}\r\n                                            className={`do-an__input do-an-input-name-create-voucher ${errors.name ? 'is-invalid' : ''}`}\r\n                                            {...register(\"name\",\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            )}\r\n                                        />\r\n                                        <button\r\n                                            className=\"do-an__create-voucher-container__body__button\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                            onClick={handleOpenModalUser}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faPencil} style={{ color: \"#141ed2\", cursor: \"pointer\" }}></FontAwesomeIcon>\r\n                                        </button>\r\n                                    </div>\r\n                                    {errors.name?.type === \"required\" &&\r\n                                        <div className=\"input-value-error\">Tên người dùng không được trống!</div>}\r\n\r\n                                </div>\r\n                                <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-input-code\">\r\n                                    <div>\r\n                                        Mã người dùng<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            value={dataUser?.code}\r\n                                            readOnly={true}\r\n                                            className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                        // {...register(\"user_id\",\r\n                                        //     {\r\n                                        //         required: true\r\n                                        //     }\r\n                                        // )}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-input-course\">\r\n                                    <div>\r\n                                        Khóa<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            value={dataUser?.course}\r\n                                            readOnly={true}\r\n                                            className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-second\">\r\n                                <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-input-start-date\">\r\n                                    <div>\r\n                                        Thời gian tạo<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                            disabled={true}\r\n                                            value={datetime}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-input-due-date\">\r\n                                    <div>\r\n                                        Thời gian hẹn trả<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <DatePicker showTime onChange={(e) => handleChangeInputForm(\"due_date\", e)}\r\n                                            placeholder=\"Ngày hẹn trả\"\r\n                                            clearIcon={true}\r\n                                            disabledDate={(current) => {\r\n                                                return moment().add(-1, 'days') >= current ||\r\n                                                    moment().add(3, 'month') <= current;\r\n                                            }}\r\n                                        />\r\n\r\n                                        <input\r\n                                            hidden={true}\r\n                                            onChange={(e) => handleChangeInputForm(\"due_date\", e)}\r\n                                            {...register(\"check_due_date\",\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            )}\r\n                                        />\r\n                                        {errors.check_due_date?.type === \"required\" &&\r\n                                            <div className=\"input-value-error\">Ngày hạn trả không được trống!</div>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__create-voucher-container__body__user-info__group-info__group-input-description\">\r\n                                    <div>\r\n                                        Ghi chú\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            className={`do-an__input do-an-input-description-create-voucher ${errors.name ? 'is-invalid' : ''}`}\r\n                                            {...register(\"description\",\r\n                                                {\r\n                                                    onChange: (e) => handleChangeInputForm(\"description\", e.target.value)\r\n                                                }\r\n                                            )}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"do-an__create-voucher-container__body__user-info__history-voucher\">\r\n                            <div className=\"do-an__create-voucher-container__body__user-info__history-voucher__icon\">\r\n                                <FontAwesomeIcon icon={faBook} style={{ height: \"50px\", color: \"#00089b\" }} />\r\n                            </div>\r\n                            <div className=\"do-an__create-voucher-container__body__user-info__history-voucher__infor\">\r\n                                <span>Tổng số phiếu mượn</span>\r\n                                <span>Quá hạn</span>\r\n                                <span>Đã trả</span>\r\n                            </div>\r\n                        </div> */}\r\n                    </div>\r\n                    <div className=\"do-an__create-voucher-container__body__table-borrow\">\r\n                        <div className=\"do-an__create-voucher-container__body__table-borrow__header\">\r\n                            <div className=\"do-an__create-voucher-container__body__table-borrow__header__title\">\r\n                                Mã sách:\r\n                            </div>\r\n                            <div className=\"do-an__create-voucher-container__body__table-borrow__header__input\">\r\n                                <input\r\n                                    value={valueInput}\r\n                                    className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                    onChange={(event) => handleChangeInput(event.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"do-an__create-voucher-container__body__table-borrow__header__button\">\r\n                                <Button\r\n                                    type={\"normal-green\"}\r\n                                    onClick={handleAddBook}\r\n                                >\r\n                                    Thêm\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__create-voucher-container__body__table-borrow__table\">\r\n                            <DataTable\r\n                                headerData={columnVoucher}\r\n                                tableData={listBookTable}\r\n                            >\r\n\r\n                            </DataTable>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__create-voucher-container__footer\">\r\n                    {/* <Button\r\n                        type={\"normal-blue\"}\r\n                    >\r\n                        Xác nhận\r\n                    </Button> */}\r\n                    <button className=\"button-search\" type=\"submit\">\r\n                        Xác nhận\r\n                    </button>\r\n                </div>\r\n\r\n                {openModalUser &&\r\n                    <Modal\r\n                        title=\"Chọn người dùng\"\r\n                        width=\"70%\"\r\n                        onCancel={handleCloseModalUser}\r\n                        visible={openModalUser}\r\n                    >\r\n                        <UserPageVoucher handleSelectUser={handleSelectUser}></UserPageVoucher>\r\n                    </Modal>\r\n                }\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default CreateVoucher;","F:\\do_an_frontend\\app\\src\\components\\manager\\manager_info\\ManagerInfoPage .js",["344","345","346","347","348"],"import React, { useEffect, useState } from \"react\";\r\nimport './ManagerInfoPage.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileUpload, faInfoCircle, faKey, faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ManagerAction from \"../../../redux/action/ManagerAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport DropDown from \"../../../share/ecm-base/components/dropdown-v2/DropDown\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport ConstAPI from \"../../../common/const\";\r\nimport image2 from '../../../share/image/123.jpg';\r\nimport constImage from \"../../../common/constImage\";\r\n\r\nconst ManagerInfoPage = ({ prefixPath }) => {\r\n\r\n    const [isActive, setIsActive] = useState(\"update\")\r\n    const listAction = [\r\n        {\r\n            title: \"Chỉnh sửa thông tin\",\r\n            type: \"update\",\r\n            icon: faInfoCircle\r\n        },\r\n        {\r\n            title: \"Thay đổi mật khẩu\",\r\n            type: \"change\",\r\n            icon: faKey\r\n\r\n        }\r\n    ]\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState([\r\n        {\r\n            title: \"Nam\",\r\n            value: \"MALE\"\r\n        },\r\n        {\r\n            title: \"Nữ\",\r\n            value: \"FEMALE\"\r\n        }\r\n    ])\r\n\r\n    const handleChangeType = (type) => {\r\n        setIsActive(type)\r\n    }\r\n\r\n    const { code } = useParams()\r\n\r\n    const detailManager = useSelector(state => state.managerReducer.detailManager)\r\n    const { register, setValue, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n\r\n    const [formUpdate, setFormUpdate] = useState({})\r\n    const [image, setImage] = useState(\"\")\r\n\r\n\r\n    const ditpatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    useEffect(() => {\r\n        ManagerAction.getDetailManagerAction(ditpatch, code)\r\n    }, [code])\r\n\r\n    useEffect(() => {\r\n        setValue(\"name\", detailManager?.name)\r\n        setValue(\"date_of_birth\", detailManager?.date_of_birth)\r\n        setValue(\"course\", detailManager?.course)\r\n        setValue(\"university\", detailManager?.university)\r\n        setValue(\"phone\", detailManager?.phone)\r\n        setValue(\"email\", detailManager?.email)\r\n\r\n        setFormUpdate({\r\n            \"name\": detailManager?.name,\r\n            \"date_of_birth\": detailManager?.date_of_birth,\r\n            \"gender\": detailManager?.gender,\r\n            \"course\": detailManager?.course,\r\n            \"university\": detailManager?.university,\r\n            \"phone\": detailManager?.phone,\r\n            \"email\": detailManager?.email\r\n        })\r\n\r\n        setImage(`${ConstAPI.BASE_HOST_API}${detailManager?.avatar}`)\r\n    }, [detailManager])\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        const newFormData = { ...formUpdate, [field]: value };\r\n        setFormUpdate(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        ManagerAction.updateManagerAction(ditpatch, code, formUpdate)\r\n    }\r\n\r\n    const [formChangePass, setFormChangePass] = useState({\r\n        oldpass: \"\",\r\n        newpass: \"\"\r\n    })\r\n\r\n    const handleChangePassInput = (name, value) => {\r\n        setFormChangePass({\r\n            ...formChangePass,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleChangePassword = () => {\r\n        ManagerAction.changePasswordManagerAction(formChangePass)\r\n        setFormChangePass({\r\n            oldpass: \"\",\r\n            newpass: \"\"\r\n        })\r\n    }\r\n\r\n    const checkFileTypeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { type } = files[0];\r\n            return (constImage.LIST_FILE_TYPE_AVATAR.findIndex(item => `IMAGE/${item}` === type.toLocaleUpperCase()) > -1)\r\n        }\r\n        return true\r\n    }\r\n    const checkFileSizeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { size } = files[0];\r\n            return (size / 1024 / 1024 <= 5)\r\n        }\r\n        return true\r\n    }\r\n\r\n\r\n    const onImageChange = async (event) => {\r\n        if (event.target.files && event.target.files[0] && event.target.files[0]['type'].split('/')[0] === 'image') {\r\n            console.log(event.target.files);\r\n\r\n                setImage(URL.createObjectURL(event.target.files[0]));\r\n\r\n            ManagerAction.changeAvatarManager(code, event.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"do-an__info-manager-container\">\r\n            <div className=\"do-an__info-manager-container__info\">\r\n                <div className=\"do-an__info-manager-container__info__button-back\">\r\n                    <FontAwesomeIcon icon={faArrowLeft} style={{ height: \"22px\", marginTop: \"5px\", marginLeft: \"5px\", cursor: \"pointer\" }} onClick={() => navigate(-1)} />\r\n\r\n                </div>\r\n                <div className=\"do-an__info-manager-container__info__group-avatar\">\r\n                    <div className=\"do-an__info-manager-container__info__avatar\">\r\n                        <img className=\"do-an-avatar-info\" style={{ height: \"180px\", width: \"180px\", borderRadius: \"50%\" }} src={image}></img>\r\n                        <label className='do-an__info-manager-container__info__avatar__overlay' htmlFor=\"ocr-designer-project-input-file\">\r\n                            <div className='\"do-an__info-manager-container__info__avatar__overlay__button'>\r\n                                <FontAwesomeIcon icon={faFileUpload} style={{color:\"white\"}} />\r\n                                <div className='\"do-an__info-manager-container__info__avatar__overlay__button__title' style={{color:\"white\", fontWeight:\"bold\"}}>Thay Avatar</div>\r\n                            </div>\r\n                        </label>\r\n                        <input type=\"file\" accept=\"image/*\" className={`do-an__info-manager-container__info__avatar__select ${errors.image ? 'is-invalid' : ''}`}\r\n                            {...register(\"avatar\",\r\n                                {\r\n                                    onChange: (e) => onImageChange(e),\r\n                                    validate: {\r\n                                        checkFileType: files => checkFileTypeAvatar(files) || `Ảnh đại diện chỉ nhận các file ${constImage.LIST_FILE_TYPE_AVATAR.join(\", \")}`,\r\n                                        checkFileSize: files => checkFileSizeAvatar(files) || \"Ảnh đại diện không vượt quá 5MB\"\r\n                                    }\r\n                                }\r\n                            )}\r\n                            id=\"ocr-designer-project-input-file\"\r\n                            \r\n                        />\r\n                        {errors.avatar?.message &&\r\n                            <div className=\"input-value-error\">{errors.avatar?.message}</div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"do-an__info-manager-container__info__name\">\r\n                    {detailManager?.user_name}\r\n                </div>\r\n                <div className=\"do-an__info-manager-container__info__list-action\">\r\n                    {\r\n                        listAction.map(item => (\r\n                            <div className={`do-an__info-manager-container__info__list-action__item ${isActive === item.type ? \"item-active\" : \"\"}`}\r\n                                onClick={() => handleChangeType(item.type)}\r\n                            >\r\n                                <FontAwesomeIcon style={{ height: \"20px\", marginRight: \"10px\" }} icon={item.icon}></FontAwesomeIcon>\r\n                                {item.title}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"do-an__info-manager-container__action\">\r\n                {isActive === \"update\" &&\r\n                    <form className=\"do-an__info-manager-container__action__update\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n                        <div className=\"do-an__info-manager-container__action__update__title\">\r\n                            Chỉnh sửa thông tin\r\n                        </div>\r\n                        <div className=\"do-an__info-manager-container__action__update__content\">\r\n                            <div className=\"do-an__info-manager-container__action__update__content__group-input\">\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__key\">\r\n                                    <span>Họ và tên: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name`}\r\n                                        {...register(\"name\",\r\n                                            {\r\n                                                required: true,\r\n                                                onChange: (e) => handleChangeInput(\"name\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"do-an__info-manager-container__action__update__content__group-input\">\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__key\">\r\n                                    <span>Ngày sinh: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name`}\r\n                                        {...register(\"date_of_birth\",\r\n                                            {\r\n                                                onChange: (e) => handleChangeInput(\"date_of_birth\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"do-an__info-manager-container__action__update__content__group-input\">\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__key\">\r\n                                    <span>Giới tính: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__input\">\r\n                                    <DropDown className=\"do-an-dropdown-create\"\r\n                                        listItem={listDefaultDropDown}\r\n                                        selected={formUpdate?.gender || listDefaultDropDown[0]?.value}\r\n                                        name=\"gender\"\r\n                                        onSelected={handleChangeInput}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"do-an__info-manager-container__action__update__content__group-input\">\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__key\">\r\n                                    <span>Khóa: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name`}\r\n                                        {...register(\"course\",\r\n                                            {\r\n                                                required: true,\r\n                                                onChange: (e) => handleChangeInput(\"course\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                            </div> */}\r\n                            <div className=\"do-an__info-manager-container__action__update__content__group-input\">\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__key\">\r\n                                    <span>Đại học: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name`}\r\n                                        {...register(\"university\",\r\n                                            {\r\n                                                required: true,\r\n                                                onChange: (e) => handleChangeInput(\"university\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"do-an__info-manager-container__action__update__content__group-input\">\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__key\">\r\n                                    <span>Số điện thoại: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name`}\r\n                                        {...register(\"phone\",\r\n                                            {\r\n                                                required: true,\r\n                                                onChange: (e) => handleChangeInput(\"phone\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"do-an__info-manager-container__action__update__content__group-input\">\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__key\">\r\n                                    <span>Email: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an__info-manager-container__action__update__content__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name`}\r\n                                        {...register(\"email\",\r\n                                            {\r\n                                                required: true,\r\n                                                onChange: (e) => handleChangeInput(\"email\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-update-manager-button\">\r\n                            <button className=\"button-search\" type=\"submit\">Xác nhận</button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n                {isActive === \"change\" &&\r\n                    <div className=\"do-an__info-manager-container__action__change\">\r\n                        <div className=\"do-an__info-manager-container__action__change__title\">\r\n                            Thay đổi mật khẩu\r\n                        </div>\r\n                        <div className=\"do-an__info-manager-container__action__change__group-input\">\r\n                            <div className=\"do-an__info-manager-container__action__change__group-input__key\">\r\n                                <span>Mật khẩu cũ: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an__info-manager-container__action__change__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name`}\r\n                                    onChange={(e) => handleChangePassInput(\"oldpass\", e.target.value)}\r\n                                    value={formChangePass.oldpass}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__info-manager-container__action__change__group-input\">\r\n                            <div className=\"do-an__info-manager-container__action__change__group-input__key\">\r\n                                <span>Mật khẩu mới: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an__info-manager-container__action__change__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name`}\r\n                                    onChange={(e) => handleChangePassInput(\"newpass\", e.target.value)}\r\n                                    value={formChangePass.newpass}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-update-manager-button\">\r\n                            <button className=\"button-search\" type=\"button\" onClick={handleChangePassword}>Xác nhận</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerInfoPage;","F:\\do_an_frontend\\app\\src\\common\\menu-project\\MenuProject.js",["349","350","351"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport './MenuProject.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBook, faUser, faTicket, faUserSecret , faBookOpen, faChartSimple} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst MenuProject = ({ prefixPath, isExpand }) => {\r\n\r\n    const [menus, setMenus] = useState([])\r\n    const [isActive, setIsActive] = useState()\r\n    const decode = useSelector(state => state.loginReducer.dataToken)\r\n    const navigate = useNavigate();\r\n\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {\r\n        if (decode.role === \"MANAGER\"){\r\n            setMenus([\r\n                {\r\n                    title: \"Quản trị sách\",\r\n                    url: `${prefixPath}/manager/books/list`,\r\n                    children: [],\r\n                    icon: faBook\r\n                },\r\n                {\r\n                    title: \"Quản trị người dùng\",\r\n                    url: `${prefixPath}/manager/user/list`,\r\n                    children: [],\r\n                    icon: faUser\r\n                },\r\n                {\r\n                    title: \"Quản trị phiếu mượn\",\r\n                    url: `${prefixPath}/manager/voucher/list`,\r\n                    children: [],\r\n                    icon: faTicket\r\n                },\r\n                {\r\n                    title: \"Quản trị thể loại\",\r\n                    url: `${prefixPath}/manager/group/list`,\r\n                    children: [],\r\n                    icon: faBookOpen\r\n                },\r\n                {\r\n                    title: \"Thống kê\",\r\n                    url: `${prefixPath}/manager/chart`,\r\n                    children: [],\r\n                    icon: faChartSimple\r\n                },\r\n            ])\r\n        }else if(decode.role === \"ADMIN\"){\r\n            setMenus([\r\n                {\r\n                    title: \"Quản trị sách\",\r\n                    url: `${prefixPath}/manager/books/list`,\r\n                    children: [],\r\n                    icon: faBook\r\n                },\r\n                {\r\n                    title: \"Quản trị người dùng\",\r\n                    url: `${prefixPath}/manager/user/list`,\r\n                    children: [],\r\n                    icon: faUser\r\n                },\r\n                {\r\n                    title: \"Quản trị phiếu mượn\",\r\n                    url: `${prefixPath}/manager/voucher/list`,\r\n                    children: [],\r\n                    icon: faTicket\r\n                },\r\n                {\r\n                    title: \"Quản trị thể loại\",\r\n                    url: `${prefixPath}/manager/group/list`,\r\n                    children: [],\r\n                    icon: faBookOpen\r\n                },\r\n                {\r\n                    title: \"Quản trị thủ thư\",\r\n                    url: `${prefixPath}/manager/manager-list`,\r\n                    children: [],\r\n                    icon: faUserSecret\r\n                },\r\n                {\r\n                    title: \"Thống kê\",\r\n                    url: `${prefixPath}/manager/chart`,\r\n                    children: [],\r\n                    icon: faChartSimple\r\n                }\r\n            ])\r\n        }\r\n    }, [decode])\r\n\r\n    useEffect(() => {\r\n        setIsActive(`${prefixPath}${location?.pathname}`)\r\n    }, [menus])\r\n\r\n\r\n    const handleChangeURL = (url) => {\r\n        setIsActive(url)\r\n        navigate(url)\r\n        }\r\n\r\n    const createMenu = (listMenu) => {\r\n        return (\r\n            <ul className=\"ocr-designer__menu-project__ul-type-square\">\r\n                {listMenu?.map((menuItem, index) => {\r\n                    let dataHtml = \"\"\r\n                    if (menuItem.children && menuItem.children.length > 0) {\r\n                        dataHtml = createMenu(menuItem.children)\r\n                    }\r\n                    return <div onClick={(event) => handleChangeURL(menuItem.url)} className={`ocr-designer__menu-project__row ${isActive === menuItem.url ? \"active-row\" : \"\"} ${isExpand === true ? \"\" : \"row-inexpand\" }`} key={index}>\r\n                        <FontAwesomeIcon className='do-an-icon' icon={menuItem?.icon} bounce={isActive === menuItem.url}/>\r\n                        <li className={`ocr-designer__menu-project__li ${isActive === menuItem.url ? \"ocr-designer__menu-project__active\" : \"\"} ${isExpand === true ? \"\" : \"li-inexpand\" }`}>\r\n                            {menuItem.url ? <Link to={menuItem.url}\r\n                            >\r\n                                {menuItem.title}\r\n                            </Link> : menuItem.title}\r\n                        </li>\r\n                        {dataHtml}\r\n                    </div>\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='ocr-designer__menu-project'>\r\n            {/* <div className='ocr-designer__menu-project__title'>\r\n                {beautifyName(projectDetail?.name)}\r\n            </div> */}\r\n            <div className='ocr-designer__menu-project__menu'>\r\n                {\r\n                    createMenu(menus)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuProject","F:\\do_an_frontend\\app\\src\\components\\voucher\\VoucherPage.js",["352","353","354","355","356","357","358","359","360"],"import React, { useEffect, useState } from 'react';\r\nimport './VoucherPage.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faFilter, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataTable from \"../../share/ecm-base/components/data-table/DataTable\";\r\nimport VoucherAction from \"../../redux/action/VoucherAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useSearchParams, Link, useNavigate } from 'react-router-dom';\r\nimport DropDown from '../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport { DatePicker, } from 'antd';\r\nimport Confirm from '../../share/ecm-base/components/confirm/Confirm';\r\nimport moment from 'moment';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst VoucherPage = ({ prefixPath }) => {\r\n\r\n\r\n    const columnVoucher = [\r\n        {\r\n            title: \"Mã thẻ mượn\",\r\n            dataIndex: \"voucher_id\",\r\n            render: (text) => {\r\n                return <Link to={`${prefixPath}/manager/voucher/${text}`}>{text}</Link>;\r\n            },\r\n            width: \"5%\"\r\n        },\r\n        {\r\n            title: \"Thời gian tạo phiếu\",\r\n            dataIndex: \"start_date\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Hạn trả\",\r\n            dataIndex: \"due_date\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Người mượn\",\r\n            dataIndex: \"user_name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Người duyệt\",\r\n            dataIndex: \"manager_name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Trạng thái\",\r\n            dataIndex: \"status_voucher\",\r\n            className: \"button-center-table\",\r\n            render: (text) => {\r\n                return <div className={`do-an-status-voucher-${text}`}>\r\n                    {text === \"WAITING_CONFIRM\" ? \"Chờ xác nhận\" : \"\"}\r\n                    {text === \"CONFIRMED\" ? \"Đã xác nhận\" : \"\"}\r\n                    {text === \"PAYED\" ? \"Đã trả\" : \"\"}\r\n                    {text === \"EXPIRED\" ? \"Quá hạn\" : \"\"}\r\n                    {text === \"CANCELLED\" ? \"Đã hủy\" : \"\"}\r\n                </div>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Số lượng sách mượn\",\r\n            dataIndex: \"books_borrowed\",\r\n            render: (text) => {\r\n                return <span>{text.length}</span>\r\n            },\r\n            width: \"5%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"voucher_id\",\r\n            render: (text, index) => {\r\n                return <div className=\"do-an-action-list-button\" style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                    {index.status_voucher === \"WAITING_CONFIRM\" && <button className=\"do-an-status-voucher-CONFIRMED\" onClick={() => handleUpdateStatusVoucher(text, index.status_voucher)}>Xác nhận</button>}\r\n                    {index.status_voucher === \"CONFIRMED\" && <button className=\"do-an-status-voucher-PAYED\" onClick={() => handleUpdateStatusVoucher(text, index.status_voucher)}>Trả phiếu</button>}\r\n                    {index.status_voucher === \"EXPIRED\" && <button className=\"do-an-status-voucher-PAYED\" onClick={() => handleUpdateStatusVoucher(text, index.status_voucher)}>Trả phiếu</button>}\r\n                    {index.status_voucher !== \"CANCELLED\" && <button className=\"do-an-status-voucher-CANCELLED\" onClick={() => handleUpdateStatusVoucher(text, \"CANCELLED\")}>Hủy</button>}\r\n                </div>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n    ]\r\n\r\n    let listOrder = [\r\n        {\r\n            title: \"Tăng dần\",\r\n            value: 1\r\n        },\r\n        {\r\n            title: \"Giảm dần\",\r\n            value: -1\r\n        },\r\n    ]\r\n\r\n    let listOrderBy = [\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            value: \"created_time\"\r\n        },\r\n        {\r\n            title: \"Thời gian sửa\",\r\n            value: \"modified_time\"\r\n        },\r\n        {\r\n            title: \"Tên\",\r\n            value: \"name\"\r\n        },\r\n    ]\r\n\r\n    let listStatus = [\r\n        {\r\n            title: \"Tất cả trạng thái\",\r\n            value: \"ALL\"\r\n        },\r\n        {\r\n            title: \"Chờ duyệt\",\r\n            value: \"WAITING_CONFIRM\"\r\n        },\r\n        {\r\n            title: \"Đã duyệt\",\r\n            value: \"CONFIRMED\"\r\n        },\r\n        {\r\n            title: \"Đã trả\",\r\n            value: \"PAYED\"\r\n        },\r\n        {\r\n            title: \"Đã quá hạn\",\r\n            value: \"EXPIRED\"\r\n        },\r\n        {\r\n            title: \"Đã hủy\",\r\n            value: \"CANCELLED\"\r\n        },\r\n    ]\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listVoucher = useSelector(state => state.voucherReducer.listVoucher)\r\n    const filter = useSelector(state => state.voucherReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.voucherReducer.pagination)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate()\r\n\r\n    const [isHiddenModalCreateVoucher, setIsHiddenModalCreateVoucher] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let urlParams = { ...initPagingFilter }\r\n        if (searchParams.get('voucher_id')) {\r\n            urlParams[\"voucher_id\"] = searchParams.get('voucher_id')\r\n        }\r\n        if (searchParams.get('page')) {\r\n            urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        }\r\n        if (searchParams.get('size')) {\r\n            urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        }\r\n        if (searchParams.get('order_by')) {\r\n            urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        }\r\n        if (searchParams.get('order')) {\r\n            urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        }\r\n        // if (searchParams.get('manager_id')) {\r\n        //     urlParams[\"manager_id\"] = searchParams.get('manager_id')\r\n        // }\r\n        if (searchParams.get('status_voucher')) {\r\n            urlParams[\"status_voucher\"] = searchParams.get('status_voucher')\r\n        }\r\n        if (searchParams.get('start_date')) {\r\n            urlParams[\"start_date\"] = searchParams.get('start_date')\r\n        }\r\n        if (searchParams.get('due_date')) {\r\n            urlParams[\"due_date\"] = searchParams.get('due_date')\r\n        }\r\n        setSearchParams(urlParams)\r\n        VoucherAction.updateVoucherFilterAction(dispatch, urlParams)\r\n        VoucherAction.updateVoucherPagination(dispatch, {\r\n            ...pagination,\r\n            page: urlParams.page,\r\n            size: urlParams.size\r\n        })\r\n        VoucherAction.getListVoucherAction(dispatch, urlParams)\r\n    }, [])\r\n\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter, page: 1 }\r\n        if (field === \"status_voucher\" && value === \"ALL\") {\r\n            delete newSearchFilter.status_voucher\r\n        } else {\r\n            newSearchFilter = { ...filter, page: 1, [field]: value }\r\n        }\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        VoucherAction.updateVoucherFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleChangeInputDropDownSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter, page: 1 }\r\n        if (field === \"status_voucher\" && value === \"ALL\") {\r\n            delete newSearchFilter.status_voucher\r\n        } else {\r\n            newSearchFilter = { ...filter, page: 1, [field]: value }\r\n        }\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        VoucherAction.updateVoucherFilterAction(dispatch, newSearchFilter)\r\n        VoucherAction.getListVoucherAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        VoucherAction.getListVoucherAction(dispatch, filter)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        VoucherAction.updateVoucherFilterAction(dispatch, newSearchFilter)\r\n        VoucherAction.updateVoucherPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        VoucherAction.getListVoucherAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        VoucherAction.updateVoucherFilterAction(dispatch, newSearchFilter)\r\n        VoucherAction.updateVoucherPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        VoucherAction.getListVoucherAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleOpenPageCreate = () => {\r\n        navigate(`${prefixPath}/manager/voucher/create  `)\r\n    }\r\n\r\n    const [isOpenConfirmDialog, setIsOpenConfirmDialog] = useState(false);\r\n    const [codeVoucherUpdate, setCodeVoucherUpdate] = useState(null);\r\n    const [statusUpdate, setStatusUpdate] = useState(null);\r\n\r\n    // const handleDeleteVoucher = (code) => {\r\n    //     setCodeVoucherDelete(code)\r\n    //     setIsOpenConfirmDialog(true)\r\n    // }\r\n\r\n    const handleCancelConfirmDialog = () => {\r\n        setCodeVoucherUpdate(null)\r\n        setIsOpenConfirmDialog(false)\r\n        setStatusUpdate(null)\r\n    }\r\n\r\n    // const handleDeleteConfirmDialog = () => {\r\n    //     VoucherAction.removeVoucher(dispatch, codeVoucherDelete, filter)\r\n    //     handleCancelConfirmDialog()\r\n    // }\r\n\r\n    const handleUpdateStatusVoucher = (voucher_id, status_update) => {\r\n        setIsOpenConfirmDialog(true)\r\n        setCodeVoucherUpdate(voucher_id)\r\n        setStatusUpdate(status_update)\r\n    }\r\n\r\n    const handleUpdateStatus = () => {\r\n        VoucherAction.updateStatusVoucher(dispatch, codeVoucherUpdate, statusUpdate, filter)\r\n\r\n        handleCancelConfirmDialog()\r\n\r\n    }\r\n\r\n    const handleChangeDebut = (range) => {\r\n        if (range === null || range === undefined) {\r\n            let newSearchFilter = {\r\n                ...filter\r\n            }\r\n            delete newSearchFilter.start_date\r\n            delete newSearchFilter.due_date\r\n\r\n            VoucherAction.updateVoucherFilterAction(dispatch, newSearchFilter)\r\n            VoucherAction.updateVoucherPagination(dispatch, {\r\n                ...pagination,\r\n                page: 1\r\n            })\r\n        }\r\n\r\n        else {\r\n            const valueOfInput1 = range[0].format(\"YYYY-MM-DD-HH:mm:ss\");\r\n            const valueOfInput2 = range[1].format(\"YYYY-MM-DD-HH:mm:ss\");\r\n\r\n            console.log('start date', valueOfInput1);\r\n            console.log(\"end date\", valueOfInput2);\r\n\r\n            let newSearchFilter = {\r\n                ...filter,\r\n                page: 1,\r\n                start_date: valueOfInput1,\r\n                due_date: valueOfInput2\r\n            }\r\n\r\n            VoucherAction.updateVoucherFilterAction(dispatch, newSearchFilter)\r\n            VoucherAction.updateVoucherPagination(dispatch, {\r\n                ...pagination,\r\n                page: 1\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            handleSearch()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"do-an__voucher\">\r\n            <div className=\"do-an__voucher__image-cover\">\r\n                {/* <img className=\"image-cover\" src={imageCover}></img> */}\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh sách phiếu mượn</h3>\r\n            </div>\r\n            <div className=\"do-an__voucher__group-search\">\r\n                <div className=\"do-an__voucher__group-search__filter\">\r\n                    <div className=\"do-an__voucher__group-search__item\">\r\n                        <div className=\"do-an__voucher__group-search__item__title\">\r\n                            Mã phiếu mượn:\r\n                        </div>\r\n                        <div className=\"do-an__voucher__group-search__item__input-container\">\r\n                            <input className=\"do-an__voucher__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"voucher_id\", event.target.value)}\r\n                                value={filter?.voucher_id || \"\"}\r\n                                onKeyDown={(event) => handleKeyDown(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__voucher__group-search__item\">\r\n                        <div className=\"do-an__voucher__group-search__item__title\">\r\n                            Tên người dùng:\r\n                        </div>\r\n                        <div className=\"do-an__voucher__group-search__item__input-container\">\r\n                            <input className=\"do-an__voucher__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"user_id\", event.target.value)}\r\n                                value={filter?.user_id || \"\"}\r\n                                onKeyDown={(event) => handleKeyDown(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__voucher__group-search__item\">\r\n                        <div className=\"do-an__voucher__group-search__item__title\">\r\n                            Sắp xếp:\r\n                        </div>\r\n                        <div className=\"do-an__voucher__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__voucher__group-search__item__input\"\r\n                                listItem={listOrderBy}\r\n                                selected={filter?.order_by || \"created_time\"}\r\n                                name=\"order_by\"\r\n                                onSelected={handleChangeInputDropDownSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__voucher__group-search__item\">\r\n                        <div className=\"do-an__voucher__group-search__item__title\">\r\n                            Thứ tự:\r\n                        </div>\r\n                        <div className=\"do-an__voucher__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__voucher__group-search__item__input\"\r\n                                listItem={listOrder}\r\n                                selected={filter?.order || -1}\r\n                                name=\"order\"\r\n                                onSelected={handleChangeInputDropDownSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__voucher__group-search__item\">\r\n                        <div className=\"do-an__voucher__group-search__item__title\">\r\n                            Trạng thái:\r\n                        </div>\r\n                        <div className=\"do-an__voucher__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__voucher__group-search__item__input\"\r\n                                listItem={listStatus}\r\n                                selected={filter?.status_voucher || \"ALL\"}\r\n                                name=\"status_voucher\"\r\n                                onSelected={handleChangeInputDropDownSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__voucher__group-search__item\">\r\n                        <div className=\"do-an__voucher__group-search__item__title\">\r\n                            Thời gian tạo phiếu:\r\n                        </div>\r\n                        <div className=\"do-an__voucher__group-search__item__datepicker\">\r\n                            {/* <input className=\"do-an__voucher__group-search__item__input\"\r\n                            /> */}\r\n                            <RangePicker showTime\r\n                                onChange={(event) => handleChangeDebut(event)}\r\n                                placeholder={[\"Từ ngày\", \" Đến ngày\"]}\r\n                                // defaultPickerValue={[moment(searchParams?.start_date), moment(searchParams?.due_date)]}\r\n                            >\r\n\r\n                            </RangePicker>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__voucher__group-search__button-search\">\r\n                    <button className=\"button-search\" onClick={handleSearch}>Tìm kiếm</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"do-an__voucher__group-table\">\r\n                <div className=\"do-an__voucher__group-table__title\">\r\n                    <button className=\"button-create-new\" onClick={handleOpenPageCreate}>Thêm mới</button>\r\n                </div>\r\n                <div className=\"do-an__voucher__group-table__table-data\">\r\n                    <DataTable headerData={columnVoucher}\r\n                        tableData={listVoucher}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        onPageChange={handleNumberPagehange}\r\n                        pagination={pagination}>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            <Confirm\r\n                title=\"Cập nhật phiếu mượn\"\r\n                width=\"45%\"\r\n                visible={isOpenConfirmDialog}\r\n                onCancel={handleCancelConfirmDialog}\r\n                onOk={handleUpdateStatus}\r\n            >\r\n                <p>Xác nhận cập nhật trạng thái phiếu mượn: {codeVoucherUpdate}?</p>\r\n            </Confirm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VoucherPage;","F:\\do_an_frontend\\app\\src\\redux\\slice\\LoginSlice.js",[],"F:\\do_an_frontend\\app\\src\\redux\\slice\\BooksSlice.js",[],"F:\\do_an_frontend\\app\\src\\components\\user\\components\\get_detail_user\\DetailUser.js",["361","362","363","364","365","366","367"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport \"./DetailUser.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faCircleInfo, faFileLines } from \"@fortawesome/free-solid-svg-icons\";\r\nimport image from '../../../../share/image/123.jpg';\r\nimport UserAction from '../../../../redux/action/UserAction';\r\nimport { useParams, useSearchParams, Link, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ConstAPI from '../../../../common/const';\r\nimport DataTable from '../../../../share/ecm-base/components/data-table/DataTable';\r\nimport VoucherAction from '../../../../redux/action/VoucherAction';\r\nimport { DatePicker, } from 'antd';\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst DetailUser = ({ prefixPath }) => {\r\n\r\n    const columnVoucher = [\r\n        {\r\n            title: \"Mã thẻ mượn\",\r\n            dataIndex: \"voucher_id\",\r\n            render: (text) => {\r\n                return <Link to={`${prefixPath}/manager/voucher/${text}`}>{text}</Link>;\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Thời gian mượn\",\r\n            dataIndex: \"start_date\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Hạn trả\",\r\n            dataIndex: \"due_date\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Người duyệt\",\r\n            dataIndex: \"manager_name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Số lượng sách\",\r\n            dataIndex: \"books_borrowed\",\r\n            render: (text) => {\r\n                return <span>{text.length}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Trạng thái\",\r\n            dataIndex: \"status_voucher\",\r\n            className: \"button-center-table\",\r\n            render: (text) => {\r\n                return <div className={`do-an-status-voucher-${text}`}>\r\n                    {text === \"WAITING_CONFIRM\" ? \"Chờ xác nhận\" : \"\"}\r\n                    {text === \"CONFIRMED\" ? \"Đã xác nhận\" : \"\"}\r\n                    {text === \"PAYED\" ? \"Đã trả\" : \"\"}\r\n                    {text === \"EXPIRED\" ? \"Quá hạn\" : \"\"}\r\n                    {text === \"CANCELLED\" ? \"Đã hủy\" : \"\"}\r\n                </div>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n    ]\r\n\r\n    let listStatus = [\r\n        {\r\n            title: \"Tất cả trạng thái\",\r\n            value: \"ALL\"\r\n        },\r\n        {\r\n            title: \"Chờ duyệt\",\r\n            value: \"WAITING_CONFIRM\"\r\n        },\r\n        {\r\n            title: \"Đã duyệt\",\r\n            value: \"CONFIRMED\"\r\n        },\r\n        {\r\n            title: \"Đã trả\",\r\n            value: \"PAYED\"\r\n        },\r\n        {\r\n            title: \"Đã quá hạn\",\r\n            value: \"EXPIRED\"\r\n        },\r\n        {\r\n            title: \"Đã hủy\",\r\n            value: \"CANCELLED\"\r\n        },\r\n    ]\r\n\r\n    const userDetail = useSelector(state => state.userReducer.detailUser)\r\n    const listVoucher = useSelector(state => state.voucherReducer.listVoucher)\r\n    const pagination = useSelector(state => state.voucherReducer.pagination)\r\n    const [filter, setFilter] = useState({})\r\n    useEffect(() => {\r\n        UserAction.getDetailUserAction(dispatch, code)\r\n\r\n        VoucherAction.getListVoucherAction(dispatch,\r\n            {\r\n                page: 1,\r\n                size: 10,\r\n                order_by: \"created_time\",\r\n                order: -1,\r\n                user_id: code\r\n            }\r\n        )\r\n        setFilter({\r\n            page: 1,\r\n            size: 10,\r\n            order_by: \"created_time\",\r\n            order: -1,\r\n            user_id: code\r\n        })\r\n    }, [])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const { code } = useParams()\r\n\r\n    const handleChangeDebut = (range) => {\r\n        if (range === null || range === undefined) {\r\n            let newSearchFilter = {\r\n                ...filter\r\n            }\r\n            delete newSearchFilter.start_date\r\n            delete newSearchFilter.due_date\r\n\r\n            VoucherAction.getListVoucherAction(dispatch, filter)\r\n\r\n        }\r\n\r\n        else {\r\n            const valueOfInput1 = range[0].format(\"YYYY-MM-DD-HH:mm:ss\");\r\n            const valueOfInput2 = range[1].format(\"YYYY-MM-DD-HH:mm:ss\");\r\n\r\n            console.log('start date', valueOfInput1);\r\n            console.log(\"end date\", valueOfInput2);\r\n\r\n            let newSearchFilter = {\r\n                ...filter,\r\n                page: 1,\r\n                start_date: valueOfInput1,\r\n                due_date: valueOfInput2\r\n            }\r\n\r\n            VoucherAction.getListVoucherAction(dispatch, newSearchFilter)\r\n\r\n        }\r\n    }\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        console.log(field, value);\r\n        let newSearchFilter = { ...filter, page: 1 }\r\n        if (field === \"status_voucher\" && value === \"ALL\") {\r\n            delete newSearchFilter.status_voucher\r\n        } else {\r\n            newSearchFilter = { ...filter, page: 1, [field]: value }\r\n        }\r\n\r\n        setFilter(newSearchFilter)\r\n        VoucherAction.getListVoucherAction(dispatch, newSearchFilter)\r\n\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        VoucherAction.getListVoucherAction(dispatch, filter)\r\n    }\r\n\r\n    return (\r\n        <div className='do-an__view-user-container'>\r\n            <div className='do-an__view-user-container__header'>\r\n                <div className='do-an__view-user-container__header__text'>\r\n                    <button\r\n                        className=\"do-an__view-user-container__header__button\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => navigate(-1)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faArrowLeft} style={{ height: \"20px\", marginTop: \"12px\", marginLeft: \"5px\" }} />\r\n                    </button>\r\n                    <div className='do-an__view-user-container__header__title'>Thông tin chi tiết người dùng</div>\r\n                </div>\r\n            </div>\r\n            <div className='do-an__view-user-container__info'>\r\n                <div className='do-an__view-user-container__info__group-info'>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Tên người dùng:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail?.name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Mã người dùng:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail?.code}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Ngày sinh:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail?.date_of_birth}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Giới tính:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail?.gender === \"FEMALE\" ? \"Nữ\" : \"Nam\"}\r\n                        </div>\r\n                    </div>\r\n                    {userDetail?.role === \"STUDENT\" &&\r\n                        <div className='do-an__view-user-container__info__row'>\r\n                            <div className='do-an__view-user-container__info__row__title'>\r\n                                Khóa:\r\n                            </div>\r\n                            <div className='do-an__view-user-container__info__row__value'>\r\n                                {userDetail?.course}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {userDetail?.role === \"TEACHER\" &&\r\n                        <div className='do-an__view-user-container__info__row'>\r\n                            <div className='do-an__view-user-container__info__row__title'>\r\n                                Chuyên ngành:\r\n                            </div>\r\n                            <div className='do-an__view-user-container__info__row__value'>\r\n                                {userDetail?.specialized}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {userDetail?.role === \"TEACHER\" &&\r\n                        <div className='do-an__view-user-container__info__row'>\r\n                            <div className='do-an__view-user-container__info__row__title'>\r\n                                Phòng ban:\r\n                            </div>\r\n                            <div className='do-an__view-user-container__info__row__value'>\r\n                                {userDetail?.department}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                <div className='do-an__view-user-container__info__group-info'>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Tên đại học:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.university}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Số điện thoại:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.phone}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Email:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.email}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Tài khoản:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail.user_name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-user-container__info__row'>\r\n                        <div className='do-an__view-user-container__info__row__title'>\r\n                            Ngày tạo:\r\n                        </div>\r\n                        <div className='do-an__view-user-container__info__row__value'>\r\n                            {userDetail?.created_time}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='do-an__view-user-container__info__avatar'>\r\n                    <img className=\"do-an-preview-image\" src={userDetail.avatar === null ? image : `${ConstAPI.BASE_HOST_API}${userDetail.avatar}`}></img>\r\n                </div>\r\n            </div>\r\n            <div className='do-an__view-user-container__table'>\r\n                <div className='do-an__view-user-container__table__search'>\r\n                    <div className=\"do-an__view-user-container__table__search__filter\">\r\n                        <div className=\"do-an__view-user-container__table__search__item\">\r\n                            <div className=\"do-an__view-user-container__table__search__item__title\">\r\n                                Tình trạng phiếu mượn:\r\n                            </div>\r\n                            <div className=\"do-an__view-user-container__table__search__item__input-container\">\r\n                                {/* <input className=\"do-an__view-user-container__table__search__item__input\" /> */}\r\n\r\n                                <DropDown className=\"do-an__view-user-container__table__search__item__input\"\r\n                                    listItem={listStatus}\r\n                                    selected={filter?.status_voucher || \"ALL\"}\r\n                                    name=\"status_voucher\"\r\n                                    onSelected={handleChangeInputSearch}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-user-container__table__search__item\">\r\n                            <div className=\"do-an__view-user-container__table__search__item__title\">\r\n                                Ngày tạo phiếu:\r\n                            </div>\r\n                            {/* <div className=\"do-an__view-user-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-user-container__table__search__item__input\" />\r\n                            </div> */}\r\n                            <div className=\"do-an__view-user-container__table__search__item__input-container\">\r\n                                {/* <input className=\"do-an__voucher__group-search__item__input\"\r\n                            /> */}\r\n                                <RangePicker showTime\r\n                                    onChange={(event) => handleChangeDebut(event)}\r\n                                    placeholder={[\"Từ ngày\", \" Đến ngày\"]}\r\n                                // defaultPickerValue={[moment(searchParams?.start_date), moment(searchParams?.due_date)]}\r\n                                >\r\n\r\n                                </RangePicker>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"do-an__view-user-container__table__search__item\">\r\n                            <div className=\"do-an__view-user-container__table__search__item__title\">\r\n                                Ngày kết thúc:\r\n                            </div>\r\n                            <div className=\"do-an__view-user-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-user-container__table__search__item__input\" />\r\n                            </div>\r\n                        </div> */}\r\n                        <div className=\"do-an__view-user-container__table__search__item\">\r\n                            <div className=\"do-an__view-user-container__table__search__item__title\">\r\n                                Người duyệt:\r\n                            </div>\r\n                            <div className=\"do-an__view-user-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-user-container__table__search__item__input\"\r\n                                    onChange={(event) => handleChangeInputSearch(\"manager_name\", event.target.value)}\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DataTable headerData={columnVoucher}\r\n                    tableData={listVoucher}\r\n\r\n                >\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DetailUser;","F:\\do_an_frontend\\app\\src\\redux\\slice\\VoucherSlice.js",[],"F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\detail_voucher\\DetailVoucher.js",["368","369","370","371","372","373","374","375","376"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport './DetailVoucher.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faBook } from \"@fortawesome/free-solid-svg-icons\";\r\nimport image from '../../../../share/image/123.jpg';\r\nimport { useParams, useSearchParams, Link, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport DropDown from \"../../../../share/ecm-base/components/dropdown-v2/DropDown\";\r\nimport ConstAPI from \"../../../../common/const\";\r\nimport DataTable from \"../../../../share/ecm-base/components/data-table/DataTable\";\r\nimport VoucherAction from \"../../../../redux/action/VoucherAction\";\r\nimport Confirm from \"../../../../share/ecm-base/components/confirm/Confirm\";\r\n\r\n\r\nconst DetailVoucher = ({ prefixPath }) => {\r\n\r\n    const columnBook = [\r\n        {\r\n            title: \"Mã sách\",\r\n            dataIndex: \"code_id\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Tình trạng sách\",\r\n            dataIndex: \"status_book\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Tên sách\",\r\n            dataIndex: \"name\",\r\n            render: (text, index) => {\r\n                return <span>{index?.books?.name}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tác giả\",\r\n            dataIndex: \"author\",\r\n            render: (text, index) => {\r\n                return <span>{index?.books?.author}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text, index) => {\r\n                // return <span>{index?.books?.avatar}</span>\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${index?.books?.avatar}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Mã QR Code\",\r\n            dataIndex: \"qr_code_data\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có mã QR</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n    ]\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const { voucher_id } = useParams()\r\n\r\n    const [statusUpdate, setStatusUpdate] = useState(null);\r\n    const [isOpenConfirmDialog, setIsOpenConfirmDialog] = useState(false);\r\n\r\n    const [listBook, setListBook] = useState([])\r\n\r\n    const detailVoucher = useSelector(state => state.voucherReducer.detailVoucher)\r\n    const filter = useSelector(state => state.voucherReducer.paginationFilter)\r\n\r\n\r\n    useEffect(() => {\r\n        VoucherAction.getDetailVoucherAction(dispatch, voucher_id).then(response => {\r\n            setListBook(response?.books_borrowed)\r\n        })\r\n    }, [voucher_id])\r\n\r\n    const handleUpdatePage = () => {\r\n        navigate(`${prefixPath}/manager/voucher/${voucher_id}/update`)\r\n    }\r\n\r\n\r\n    const handleUpdateStatusVoucher = (status_update) => {\r\n        setIsOpenConfirmDialog(true)\r\n        setStatusUpdate(status_update)\r\n    }\r\n\r\n    const handleCancelConfirmDialog = () => {\r\n        setIsOpenConfirmDialog(false)\r\n        setStatusUpdate(null)\r\n    }\r\n\r\n    const handleUpdateStatus = () => {\r\n        VoucherAction.updateStatusVoucher(dispatch, voucher_id, statusUpdate, filter)\r\n\r\n        handleCancelConfirmDialog()\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='do-an__view-voucher-container'>\r\n            <div className='do-an__view-voucher-container__header'>\r\n                <div className='do-an__view-voucher-container__header__text'>\r\n                    <button\r\n                        className=\"do-an__view-voucher-container__header__button\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => navigate(-1)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faArrowLeft} style={{ height: \"22px\", marginTop: \"5px\", marginLeft: \"5px\" }} />\r\n                    </button>\r\n                    <div className='do-an__view-voucher-container__header__title'>Thông tin chi tiết phiếu mượn</div>\r\n                </div>\r\n\r\n                <button\r\n                    className=\"do-an__view-voucher-container__header__button-edit button-search\"\r\n                    style={{ float: \"right\", margin: \"10px\" }}\r\n                    onClick={handleUpdatePage}\r\n                    disabled={detailVoucher.status_voucher === \"CANCELLED\" || detailVoucher.status_voucher === \"PAYED\"}\r\n                >\r\n                    Chỉnh sửa\r\n                </button>\r\n            </div>\r\n            <div className='do-an__view-voucher-container__info'>\r\n                <div className='do-an__view-voucher-container__info__group-info do-an-view-info-user'>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Tên người dùng:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.users?.name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Mã người dùng:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.users?.code}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Ngày sinh:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.users?.date_of_birth}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Giới tính:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.users?.gender}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Khóa:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.users?.course}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='do-an__view-voucher-container__info__group-info do-an-view-info-user'>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Đại học:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.users?.university}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Số điện thoại:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.users?.phone}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Email:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.users?.email}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Tài khoản:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.users?.user_name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-voucher-container__info__row'>\r\n                        <div className='do-an__view-voucher-container__info__row__title'>\r\n                            Ngày tạo:\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row__value'>\r\n                            {detailVoucher?.users?.created_time}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='do-an__view-voucher-container__info__avatar'>\r\n                    <img className=\"do-an-preview-image\" src={`${ConstAPI.BASE_HOST_API}${detailVoucher?.users?.avatar}`}></img>\r\n                </div>\r\n            </div>\r\n            <div className='do-an__view-voucher-container__table'>\r\n                <div className='do-an__view-voucher-container__info'>\r\n                    <div className='do-an__view-voucher-container__info__group-info'>\r\n                        <div className='do-an__view-voucher-container__info__row'>\r\n                            <div className='do-an__view-voucher-container__info__row__title'>\r\n                                Mã phiếu mượn:\r\n                            </div>\r\n                            <div className='do-an__view-voucher-container__info__row__value'>\r\n                                {detailVoucher?.voucher_id}\r\n                            </div>\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row'>\r\n                            <div className='do-an__view-voucher-container__info__row__title'>\r\n                                Ngày bắt đầu:\r\n                            </div>\r\n                            <div className='do-an__view-voucher-container__info__row__value'>\r\n                                {detailVoucher?.start_date}\r\n                            </div>\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row'>\r\n                            <div className='do-an__view-voucher-container__info__row__title'>\r\n                                Ngày kết thúc:\r\n                            </div>\r\n                            <div className='do-an__view-voucher-container__info__row__value'>\r\n                                {detailVoucher?.due_date}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='do-an__view-voucher-container__info__group-info'>\r\n                        <div className='do-an__view-voucher-container__info__row'>\r\n                            <div className='do-an__view-voucher-container__info__row__title'>\r\n                                Trạng thái:\r\n                            </div>\r\n                            <div className='do-an__view-voucher-container__info__row__value do-an-status-voucher-detail'>\r\n                                <span className=\"do-an-status-voucher-detail__span\">\r\n                                    {detailVoucher?.status_voucher === \"WAITING_CONFIRM\" && \"Chờ xác nhận\"}\r\n                                    {detailVoucher?.status_voucher === \"CONFIRMED\" && \"Đã xác nhận\"}\r\n                                    {detailVoucher?.status_voucher === \"PAYED\" && \"Đã trả phiếu\"}\r\n                                    {detailVoucher?.status_voucher === \"EXPIRED\" && \"Đã hết hạn\"}\r\n                                    {detailVoucher?.status_voucher === \"CANCELLED\" && \"Đã hủy\"}</span>\r\n\r\n                                <div className=\"do-an-action-list-button\" style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                    {detailVoucher?.status_voucher === \"WAITING_CONFIRM\" && <button className=\"do-an-status-voucher-CONFIRMED\" style={{marginRight:\"10px\"}} onClick={() => handleUpdateStatusVoucher(\"WAITING_CONFIRM\")}>Xác nhận</button>}\r\n                                    {detailVoucher?.status_voucher === \"CONFIRMED\" && <button className=\"do-an-status-voucher-PAYED\" style={{marginRight:\"10px\"}} onClick={() => handleUpdateStatusVoucher(\"CONFIRMED\")}>Trả phiếu</button>}\r\n                                    {detailVoucher?.status_voucher === \"EXPIRED\" && <button className=\"do-an-status-voucher-PAYED\" style={{marginRight:\"10px\"}} onClick={() => handleUpdateStatusVoucher(\"EXPIRED\")}>Trả phiếu</button>}\r\n                                    {detailVoucher?.status_voucher !== \"CANCELLED\" && <button className=\"do-an-status-voucher-CANCELLED\" style={{marginRight:\"10px\"}} onClick={() => handleUpdateStatusVoucher(\"CANCELLED\")}>Hủy</button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row'>\r\n                            <div className='do-an__view-voucher-container__info__row__title'>\r\n                                Người duyệt:\r\n                            </div>\r\n                            <div className='do-an__view-voucher-container__info__row__value'>\r\n                                {detailVoucher?.manager_name}\r\n                            </div>\r\n                        </div>\r\n                        <div className='do-an__view-voucher-container__info__row'>\r\n                            <div className='do-an__view-voucher-container__info__row__title'>\r\n                                Ghi chú:\r\n                            </div>\r\n                            <div className='do-an__view-voucher-container__info__row__value'>\r\n                                {detailVoucher?.description}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/* <div className='do-an__view-voucher-container__info__user-voucher-status'> */}\r\n                    {/* <img className=\"do-an-preview-image\" src={image}></img> */}\r\n\r\n                    {/* <div className=\"do-an__view-voucher-container__info__user-voucher-status__history-voucher\">\r\n                            <div className=\"do-an__view-voucher-container__info__user-voucher-status__history-voucher__icon\">\r\n                                <FontAwesomeIcon icon={faBook} style={{ height: \"50px\", color: \"#00089b\" }} />\r\n                            </div>\r\n                            <div className=\"do-an__view-voucher-container__info__user-voucher-status__history-voucher__infor\">\r\n                                <span>Tổng số phiếu mượn: 10</span>\r\n                                <span>Quá hạn: 1</span>\r\n                                <span>Đã trả: 9</span>\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n                <DataTable headerData={columnBook}\r\n                    tableData={listBook}\r\n                >\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Confirm\r\n                title=\"Cập nhật phiếu mượn\"\r\n                width=\"45%\"\r\n                visible={isOpenConfirmDialog}\r\n                onCancel={handleCancelConfirmDialog}\r\n                onOk={handleUpdateStatus}\r\n            >\r\n                <p>Xác nhận cập nhật trạng thái phiếu mượn: {voucher_id}?</p>\r\n            </Confirm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailVoucher;","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\update_voucher\\UpdateVoucher.js",["377","378","379","380","381","382","383"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faBook, faPencil } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport \"./UpdateVoucher.scss\";\r\nimport Button from \"../../../../share/ecm-base/components/button/Button\";\r\nimport DataTable from \"../../../../share/ecm-base/components/data-table/DataTable\";\r\nimport { ListButton, ListButtonUser } from \"../../../../common/utils\";\r\nimport Modal from \"../../../../share/ecm-base/components/modal/Modal\";\r\nimport UserPageVoucher from \"../user_voucher/UserPageVoucher\";\r\nimport UserAction from \"../../../../redux/action/UserAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport BookAction from \"../../../../redux/action/BookAction\";\r\nimport ConstAPI from \"../../../../common/const\";\r\nimport VoucherAction from \"../../../../redux/action/VoucherAction\";\r\nimport bookService from \"../../../../redux/service/BookService\";\r\n\r\n\r\nconst UpdateVoucher = ({ prefixPath }) => {\r\n\r\n    const columnVoucher = [\r\n        {\r\n            title: \"Mã sách\",\r\n            dataIndex: \"code_id\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên sách\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tác giả\",\r\n            dataIndex: \"author\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tiêu đề\",\r\n            dataIndex: \"title\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"code_id\",\r\n            render: (text) => {\r\n                return (\r\n                    <ListButtonUser\r\n                        editDisable={true}\r\n                        onRemoveAction={() => handleRemoveBook(text)}\r\n                    ></ListButtonUser>\r\n                );\r\n            },\r\n            width: \"5%\"\r\n        }\r\n    ]\r\n\r\n    const { register, setValue, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n\r\n    const [listBookUpdate, setListBookUpdate] = useState([])\r\n    const [listBookTable, setListBookTable] = useState([])\r\n    const [openModalUser, setOpenModaluser] = useState(false)\r\n    const [formUpdate, setFormUpdate] = useState({})\r\n    const [valueInput, setValueInput] = useState(\"\")\r\n    const [userDataUpdate, setUserDataUpdate] = useState({})\r\n    // const [userInfo, setUserInfo] = useState({})\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const { voucher_id } = useParams()\r\n\r\n    // const detailUser = useSelector(state => state.userReducer.detailUser)\r\n    const detailVoucher = useSelector(state => state.voucherReducer.detailVoucher)\r\n    useEffect(() => {\r\n        if (Object.keys(detailVoucher).length === 0) {\r\n            VoucherAction.getDetailVoucherAction(dispatch, voucher_id)\r\n        }\r\n    }, [voucher_id])\r\n\r\n    useEffect(() => {\r\n        setValue(\"user_id\", detailVoucher?.user_id)\r\n        setValue(\"due_date\", detailVoucher?.due_date)\r\n        setValue(\"description\", detailVoucher?.description)\r\n        setValue(\"start_date\", detailVoucher?.start_date)\r\n\r\n        setUserDataUpdate(detailVoucher?.users)\r\n\r\n        const newBookTable = [...listBookTable]\r\n        const newBookUpdate = [...listBookUpdate]\r\n\r\n        detailVoucher?.books_borrowed?.forEach(item => {\r\n            let itemMap = {\r\n                \"code_id\": item.code_id,\r\n                \"name\": item?.books.name,\r\n                \"avatar\": item?.books.avatar,\r\n                \"author\": item?.books.author,\r\n                \"title\": item?.books.title\r\n            }\r\n\r\n            newBookTable.push(itemMap)\r\n            newBookUpdate.push(item.code_id)\r\n        })\r\n\r\n        setListBookTable(newBookTable)\r\n        setListBookUpdate(newBookUpdate)\r\n\r\n        setFormUpdate({\r\n            \"due_date\": detailVoucher?.due_date,\r\n            \"user_id\": detailVoucher?.user_id,\r\n            \"description\": detailVoucher?.description,\r\n            \"manager_id\": \"\",\r\n            \"books_borrowed\": newBookUpdate\r\n        })\r\n    }, [detailVoucher])\r\n\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const handleOpenModalUser = () => {\r\n        setOpenModaluser(true)\r\n    }\r\n\r\n    const handleCloseModalUser = () => {\r\n        setOpenModaluser(false)\r\n    }\r\n\r\n    const handleSelectUser = (user_id) => {\r\n        UserAction.getDetailUserAction(dispatch, user_id).then(response => {\r\n            setUserDataUpdate(response)\r\n            setFormUpdate({\r\n                ...formUpdate,\r\n                \"user_id\": response.code\r\n            })\r\n            setValue(\"user_id\", response.code)\r\n        })\r\n        setOpenModaluser(false)\r\n    }\r\n\r\n    const handleChangeInput = (value) => {\r\n        setValueInput(value)\r\n    }\r\n\r\n    const handleChangeInputForm = (field, value) => {\r\n        const newFormData = { ...formUpdate, [field]: value }\r\n        setFormUpdate(newFormData)\r\n    }\r\n\r\n    const handleAddBook = () => {\r\n        if (valueInput.trim() !== \"\") {\r\n            BookAction.getDetailBookAction(dispatch, valueInput).then(response => {\r\n                if (response.status === 200) {\r\n                    setListBookTable([\r\n                        ...listBookTable,\r\n                        {\r\n                            \"code_id\": valueInput,\r\n                            \"name\": response.data.data.books.name,\r\n                            \"avatar\": response.data.data.books.avatar,\r\n                            \"author\": response.data.data.books.author,\r\n                            \"title\": response.data.data.books.title\r\n                        }\r\n                    ])\r\n                }\r\n            })\r\n\r\n            setListBookUpdate([\r\n                ...listBookUpdate,\r\n                valueInput\r\n            ])\r\n            setValueInput(\"\")\r\n        }\r\n    }\r\n\r\n    const handleSubmitFormUpdate = () => {\r\n        const formUpdateVoucher = {\r\n            ...formUpdate,\r\n            manager_id: \"MANAGER_1674916899\",\r\n            books_borrowed: listBookUpdate\r\n        }\r\n\r\n        listDeleted.map(item => {\r\n            bookService.updateUserBook(item, {user_borrow: \"\"})\r\n        })\r\n       \r\n\r\n        VoucherAction.updateVoucherAction(dispatch, voucher_id, formUpdateVoucher).then(response => {\r\n            navigate(`${prefixPath}/manager/voucher/list`)\r\n        })\r\n    }\r\n\r\n    const [listDeleted, setListDeleted]= useState([])\r\n\r\n    const handleRemoveBook = (code_id) => {\r\n        let index = listBookUpdate.findIndex(item => item === code_id)\r\n        if (index > -1) {\r\n            let newListUpdate = [...listBookUpdate]\r\n            newListUpdate.splice(index, 1)\r\n            setListBookUpdate(newListUpdate)\r\n            setFormUpdate({\r\n                ...formUpdate,\r\n                \"books_borrowed\": newListUpdate\r\n            })\r\n            setListDeleted([...listDeleted, listBookUpdate[index]])\r\n\r\n            let newListTable = [...listBookTable]\r\n            newListTable.splice(index, 1)\r\n            setListBookTable(newListTable)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form className=\"do-an__update-voucher__form\" onSubmit={handleSubmit(handleSubmitFormUpdate)}>\r\n            <div className='do-an__update-voucher-container'>\r\n                <div className='do-an__update-voucher-container__header'>\r\n                    <div className='do-an__update-voucher-container__header__text'>\r\n                        <button\r\n                            className=\"do-an__update-voucher-container__header__button\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => navigate(-1)}\r\n                            type=\"button\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faArrowLeft} style={{ height: \"22px\", marginTop: \"5px\", marginLeft: \"5px\" }} />\r\n                        </button>\r\n                        <div className='do-an__update-voucher-container__header__title'>Chỉnh sửa phiếu mượn</div>\r\n                    </div>\r\n\r\n                    <div className=\"do-an__update-voucher-container__footer\">\r\n                        <button\r\n                        style={{marginRight:\"10px\", marginBottom:\"10px\"}}\r\n                            className=\"button-cancel\"\r\n                            type=\"button\"\r\n                            onClick={() => navigate(-1)}\r\n                        >\r\n                            Hủy\r\n                        </button>\r\n                        <button className=\"button-search\" type=\"submit\">\r\n                            Xác nhận\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__update-voucher-container__body\">\r\n                    <div className=\"do-an__update-voucher-container__body__user-info\">\r\n                        <div className=\"do-an__update-voucher-container__body__user-info__group-info\">\r\n                            <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-first\">\r\n                                <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-input-name\">\r\n                                    <div>\r\n                                        Tên người dùng<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                        <input\r\n                                            value={userDataUpdate?.name}\r\n                                            readOnly={true}\r\n                                            className={`do-an__input do-an-input-name-update-voucher ${errors.name ? 'is-invalid' : ''}`}\r\n                                        />\r\n                                        <button\r\n                                            className=\"do-an__update-voucher-container__body__button\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                            onClick={handleOpenModalUser}\r\n                                            type=\"button\"\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faPencil} style={{ color: \"#141ed2\", cursor: \"pointer\" }}></FontAwesomeIcon>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-input-code\">\r\n                                    <div>\r\n                                        Mã người dùng<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            // value={formUpdate?.user_id}\r\n                                            readOnly={true}\r\n                                            className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                            {...register(\"user_id\",\r\n                                                {\r\n                                                    required: true,\r\n                                                    onChange: (e) => handleChangeInputForm(\"user_id\", e.target.value)\r\n                                                }\r\n                                            )}\r\n                                        />\r\n                                        {errors.name?.type === \"required\" &&\r\n                                            <div className=\"input-value-error\">Mã người dùng không được trống!</div>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-input-course\">\r\n                                    <div>\r\n                                        Khóa<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            value={userDataUpdate?.course}\r\n                                            readOnly={true}\r\n                                            className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-second\">\r\n                                <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-input-start-date\">\r\n                                    <div>\r\n                                        Thời gian bắt đầu<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            value={detailVoucher?.start_date}\r\n                                            disabled\r\n                                            className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-input-due-date\">\r\n                                    <div>\r\n                                        Thời gian hẹn trả<i className=\"do-an__input-require\">*</i>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                            {...register(\"due_date\",\r\n                                                {\r\n                                                    required: true,\r\n                                                    onChange: (e) => handleChangeInputForm(\"due_date\", e.target.value)\r\n                                                }\r\n                                            )}\r\n                                        />\r\n                                        {errors.due_date?.type === \"required\" &&\r\n                                            <div className=\"input-value-error\">Ngày hạn trả không được trống!</div>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"do-an__update-voucher-container__body__user-info__group-info__group-input-description\">\r\n                                    <div>\r\n                                        Ghi chú\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            className={`do-an__input do-an-input-description-update-voucher ${errors.name ? 'is-invalid' : ''}`}\r\n                                            {...register(\"description\",\r\n                                                {\r\n                                                    maxLength: 200,\r\n                                                    onChange: (e) => handleChangeInputForm(\"description\", e.target.value)\r\n                                                }\r\n                                            )}\r\n                                        />\r\n                                        {errors.description?.type === \"maxLength\" &&\r\n                                            <div className=\"input-value-error\">Mô tả phiếu mượn không được vượt quá 200 ký tự!</div>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"do-an__update-voucher-container__body__user-info__history-voucher\">\r\n                            <div className=\"do-an__update-voucher-container__body__user-info__history-voucher__icon\">\r\n                                <FontAwesomeIcon icon={faBook} style={{ height: \"50px\", color: \"#00089b\" }} />\r\n                            </div>\r\n                            <div className=\"do-an__update-voucher-container__body__user-info__history-voucher__infor\">\r\n                                <span>Tổng số phiếu mượn</span>\r\n                                <span>Quá hạn</span>\r\n                                <span>Đã trả</span>\r\n                            </div>\r\n                        </div> */}\r\n                    </div>\r\n                    <div className=\"do-an__update-voucher-container__body__table-borrow\">\r\n                        <div className=\"do-an__update-voucher-container__body__table-borrow__header\">\r\n                            <div className=\"do-an__update-voucher-container__body__table-borrow__header__title\">\r\n                                Mã sách:\r\n                            </div>\r\n                            <div className=\"do-an__update-voucher-container__body__table-borrow__header__input\">\r\n                                <input\r\n                                    value={valueInput}\r\n                                    className={`do-an__input ${errors.name ? 'is-invalid' : ''}`}\r\n                                    onChange={(event) => handleChangeInput(event.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"do-an__update-voucher-container__body__table-borrow__header__button\">\r\n                                <Button\r\n                                    type={\"normal-green\"}\r\n                                    onClick={handleAddBook}\r\n                                >\r\n                                    Thêm\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__update-voucher-container__body__table-borrow__table\">\r\n                            <DataTable\r\n                                headerData={columnVoucher}\r\n                                tableData={listBookTable}\r\n                            >\r\n\r\n                            </DataTable>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                {openModalUser &&\r\n                    <Modal\r\n                        title=\"Chọn người dùng\"\r\n                        width=\"70%\"\r\n                        onCancel={handleCloseModalUser}\r\n                        visible={openModalUser}\r\n                    >\r\n                        <UserPageVoucher handleSelectUser={handleSelectUser}></UserPageVoucher>\r\n                    </Modal>\r\n                }\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default UpdateVoucher;","F:\\do_an_frontend\\app\\src\\redux\\slice\\BookSlice.js",[],"F:\\do_an_frontend\\app\\src\\redux\\slice\\UserSlice.js",[],"F:\\do_an_frontend\\app\\src\\redux\\slice\\ManagerSlice.js",[],"F:\\do_an_frontend\\app\\src\\redux\\slice\\GroupsSlice.js",[],"F:\\do_an_frontend\\app\\src\\components\\books\\components\\detail_books\\DetailBooks.js",["384","385","386","387","388","389","390","391","392","393"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport \"./DetailBooks.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faCircleInfo, faFileLines } from \"@fortawesome/free-solid-svg-icons\";\r\nimport image from '../../../../share/image/123.jpg';\r\nimport BooksAction from '../../../../redux/action/BooksAction';\r\nimport { useParams, useSearchParams, Link, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ConstAPI, { openNotificationCommon } from '../../../../common/const';\r\nimport DataTable from '../../../../share/ecm-base/components/data-table/DataTable';\r\nimport BookAction from '../../../../redux/action/BookAction';\r\nimport Modal from '../../../../share/ecm-base/components/modal/Modal';\r\nimport Button from '../../../../share/ecm-base/components/button/Button';\r\nimport UpdateBooks from '../update_books/UpdateBooks';\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport CreateBook from '../create_book_single/CreateBook';\r\nimport { ListButton, ListButtonUser } from '../../../../common/utils';\r\nimport Confirm from '../../../../share/ecm-base/components/confirm/Confirm';\r\nimport UpdateBook from '../update_book_single/UpdateBook';\r\n\r\nconst DetailBooks = ({ prefixPath }) => {\r\n\r\n    const columnBook = [\r\n        {\r\n            title: \"Mã sách\",\r\n            dataIndex: \"code_id\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"20%\"\r\n        },\r\n        {\r\n            title: \"Tình trạng sách\",\r\n            dataIndex: \"status_book\",\r\n            render: (text) => {\r\n                return <span>{text === \"NEW\" ? \"Mới\" : \"Cũ\"}</span>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Tình trạng mượn\",\r\n            dataIndex: \"status_borrow\",\r\n            render: (text) => {\r\n                return <span>\r\n                    {text === \"BORROWING\" ? \"Đang cho mượn\" : \"\"}\r\n                    {text === \"READY\" ? \"Sẵn sàng\" : \"\"}\r\n                    {text === \"WAITING\" ? \"Đang chờ duyệt\" : \"\"}\r\n                </span>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Người mượn\",\r\n            dataIndex: \"user_borrow\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Ngăn số\",\r\n            dataIndex: \"compartment\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Vị trí\",\r\n            dataIndex: \"serial\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Mã QR Code\",\r\n            dataIndex: \"qr_code_data\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"code_id\",\r\n            render: (code, index) => {\r\n                return (\r\n                    <ListButton\r\n                    onEditAction={() => handleModalUpdateBook(code, index)}\r\n                        onRemoveAction={() => handleDeleteBook(code, index)}\r\n                        removeButtonName=\"btnDeleteUser\"\r\n                    ></ListButton>\r\n                );\r\n            },\r\n            width: \"20%\"\r\n        }\r\n    ]\r\n\r\n    let listStatusBook = [\r\n        {\r\n            title: \"Tất cả tình trạng\",\r\n            value: \"ALL\"\r\n        },\r\n        {\r\n            title: \"Sách mới\",\r\n            value: \"NEW\"\r\n        },\r\n        {\r\n            title: \"Sách cũ\",\r\n            value: \"OLD\"\r\n        }\r\n    ]\r\n\r\n    let listStatusBorrow = [\r\n        {\r\n            title: \"Tất cả tình trạng\",\r\n            value: \"ALL\"\r\n        },\r\n        {\r\n            title: \"Đang chờ duyệt\",\r\n            value: \"WAITING\"\r\n        },\r\n        {\r\n            title: \"Sẵn sàng\",\r\n            value: \"READY\"\r\n        },\r\n        {\r\n            title: \"Đang cho mượn\",\r\n            value: \"BORROWING\"\r\n        }\r\n    ]\r\n\r\n    const booksDetail = useSelector(state => state.booksReducer.detailBooks)\r\n\r\n    useEffect(() => {\r\n        BooksAction.getDetailBooksAction(dispatch, code)\r\n    }, [])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const { code } = useParams()\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"serial\",\r\n        order: -1,\r\n    };\r\n\r\n    const listBook = useSelector(state => state.bookReducer.listBook)\r\n    const filter = useSelector(state => state.bookReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.bookReducer.pagination)\r\n\r\n    useEffect(() => {\r\n        BookAction.getListBookAction(dispatch, code, initPagingFilter)\r\n    }, [])\r\n\r\n    const [openModalUpdate, setOpenModalUpdate] = useState(false)\r\n\r\n    const handleOpenModalUpdate = () => {\r\n        setOpenModalUpdate(true)\r\n    }\r\n\r\n    const onSubmitFormUpdate = () => {\r\n        document.getElementById(\"do-an-form-update-books-button\").click();\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setOpenModalUpdate(false)\r\n    }\r\n\r\n    const [filterBook, setFilterBook] = useState(initPagingFilter)\r\n\r\n    const handleChangeSearchBook = (field, value) => {\r\n        let new_filter_book = { ...filterBook, [field]: value }\r\n        setFilterBook(new_filter_book)\r\n    }\r\n\r\n    const handleChangeDropDown = (field, value) => {\r\n        let new_filter_book = {}\r\n        if (value === \"ALL\") {\r\n            new_filter_book = { ...filterBook, [field]: \"\" }\r\n        } else {\r\n            new_filter_book = { ...filterBook, [field]: value }\r\n        }\r\n        setFilterBook(new_filter_book)\r\n\r\n        BookAction.getListBookAction(dispatch, code, new_filter_book)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            BookAction.getListBookAction(dispatch, code, filterBook)\r\n        }\r\n    }\r\n\r\n    const [openModalCreate, setOpenModalCreate] = useState(false)\r\n\r\n    const handleOpenModalCreate = () => {\r\n        setOpenModalCreate(true)\r\n    }\r\n\r\n    const handleCancelModalCreate = () => {\r\n        setOpenModalCreate(false)\r\n    }\r\n\r\n    const onSubmitFormCreate = () => {\r\n        document.getElementById(\"do-an-form-create-book-button\").click();\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        console.log(newSize);\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        // setSearchParams(newSearchFilter)\r\n        BookAction.updateBookFilterAction(dispatch, newSearchFilter)\r\n        BookAction.updateBookPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        BookAction.getListBookAction(dispatch,code ,newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        // setSearchParams(newSearchFilter)\r\n        BookAction.updateBookFilterAction(dispatch, newSearchFilter)\r\n        BookAction.updateBookPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        BookAction.getListBookAction(dispatch, code ,newSearchFilter)\r\n    }\r\n\r\n    console.log(filter);\r\n\r\n    const [codeDelete, setCodeDelete] = useState(null)\r\n    const [openModalDelete, setOpenModalDelete] = useState(false)\r\n\r\n    const handleDeleteBook = (codeBook, dataBook) => {\r\n        console.log(dataBook);\r\n        if(dataBook.user_borrow === null || dataBook.user_borrow === \"\"){\r\n            setCodeDelete(codeBook)\r\n            setOpenModalDelete(true)\r\n        }\r\n        else{\r\n            openNotificationCommon(\"error\", \"Thông báo\", \"Sách đang có người mượn, không thế xóa!\")\r\n        }\r\n    }\r\n\r\n    const handleDeleteConfirmDialog = () => {\r\n        BookAction.removeBookAction(dispatch, code, codeDelete, filter)\r\n    }\r\n\r\n    const handleCancelConfirmDialog = () => {\r\n        setCodeDelete(\"\")\r\n        setOpenModalDelete(false)\r\n    }\r\n\r\n    const [openModalSingle, setOpenModalSingle] = useState(false)\r\n    const [dataBook, setDataBook] = useState(null)\r\n\r\n    const handleModalUpdateBook = (codeBook, dataBook) => {\r\n        setDataBook(dataBook)\r\n        setOpenModalSingle(!openModalSingle)\r\n    }\r\n\r\n    const onSubmitFormUpdateBookSingle = () => {\r\n        document.getElementById(\"do-an-form-update-book-button\").click()\r\n    }\r\n\r\n    return (\r\n        <div className='do-an__view-books-container'>\r\n            <div className='do-an__view-books-container__header'>\r\n                <div className='do-an__view-books-container__header__text'>\r\n                    <button\r\n                        className=\"do-an__view-books-container__header__button\"\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => navigate(-1)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faArrowLeft} style={{ height: \"18px\", marginTop: \"5px\", marginLeft: \"5px\" }} />\r\n                    </button>\r\n                    <div className='do-an__view-books-container__header__title'>Thông tin chi tiết sách</div>\r\n                </div>\r\n\r\n                <button\r\n                    className=\"do-an__view-books-container__header__button-edit button-search\"\r\n                    style={{ float: \"right\", margin: \"10px   \" }}\r\n                    onClick={handleOpenModalUpdate}\r\n                >\r\n                    Chỉnh sửa\r\n                </button>\r\n            </div>\r\n            <div className='do-an__view-books-container__info'>\r\n                <div className='do-an__view-books-container__info__group-info'>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Tên sách:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Mã sách:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.code}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Mô tả:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.description}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Tủ số:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail?.cabinet}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Người tạo:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.created_by}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='do-an__view-books-container__info__group-info'>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Tác giả:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.author}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Tiêu đề sách:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.title}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Năm xuất bản:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.publishing_year}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Nhà xuất bản:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail.origin}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-books-container__info__row'>\r\n                        <div className='do-an__view-books-container__info__row__title'>\r\n                            Thể loại:\r\n                        </div>\r\n                        <div className='do-an__view-books-container__info__row__value'>\r\n                            {booksDetail?.groups?.group_name}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='do-an__view-books-container__info__avatar'>\r\n                    <img className=\"do-an-preview-image\" src={`${ConstAPI.BASE_HOST_API}${booksDetail.avatar}`}></img>\r\n                </div>\r\n            </div>\r\n            <div className='do-an__view-books-container__button-add'>\r\n                <button\r\n                    className=\"do-an__view-books-container__button-add__button button-create-new\"\r\n                    style={{ float: \"right\", margin: \"10pxs\" }}\r\n                    onClick={handleOpenModalCreate}\r\n                >\r\n                    Thêm mới\r\n                </button>\r\n            </div>\r\n            <div className='do-an__view-books-container__table'>\r\n                <div className='do-an__view-books-container__table__search'>\r\n                    <div className=\"do-an__view-books-container__table__search__filter\">\r\n                        <div className=\"do-an__view-books-container__table__search__item\">\r\n                            <div className=\"do-an__view-books-container__table__search__item__title\">\r\n                                Mã sách:\r\n                            </div>\r\n                            <div className=\"do-an__view-books-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-books-container__table__search__item__input\"\r\n                                    onChange={(event) => handleChangeSearchBook(\"code_id\", event.target.value)}\r\n                                    onKeyDown={(event) => handleKeyDown(event)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-books-container__table__search__item\">\r\n                            <div className=\"do-an__view-books-container__table__search__item__title\">\r\n                                Tình trạng sách:\r\n                            </div>\r\n                            <div className=\"do-an__view-books-container__table__search__item__input-container\">\r\n                                <DropDown\r\n                                    className=\"do-an__view-books-container__table__search__item__input\"\r\n                                    listItem={listStatusBook}\r\n                                    selected={filterBook?.status_book || \"ALL\"}\r\n                                    name=\"status_book\"\r\n                                    onSelected={handleChangeDropDown}\r\n                                >\r\n                                </DropDown>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-books-container__table__search__item\">\r\n                            <div className=\"do-an__view-books-container__table__search__item__title\">\r\n                                Tình trạng mượn:\r\n                            </div>\r\n                            <div className=\"do-an__view-books-container__table__search__item__input-container\">\r\n                                <DropDown\r\n                                    className=\"do-an__view-books-container__table__search__item__input\"\r\n                                    listItem={listStatusBorrow}\r\n                                    selected={filterBook?.status_borrow || \"ALL\"}\r\n                                    name=\"status_borrow\"\r\n                                    onSelected={handleChangeDropDown}\r\n                                >\r\n                                </DropDown>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an__view-books-container__table__search__item\">\r\n                            <div className=\"do-an__view-books-container__table__search__item__title\">\r\n                                Người mượn:\r\n                            </div>\r\n                            <div className=\"do-an__view-books-container__table__search__item__input-container\">\r\n                                <input className=\"do-an__view-books-container__table__search__item__input\"\r\n                                    onChange={(event) => handleChangeSearchBook(\"user_borrow\", event.target.value)}\r\n                                    onKeyDown={(event) => handleKeyDown(event)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DataTable headerData={columnBook}\r\n                    tableData={listBook}\r\n                    pagination={pagination}\r\n                    onNumberItemChange={handleNumberItemChange}\r\n                    onPageChange={handleNumberPagehange}\r\n                >\r\n                </DataTable>\r\n            </div>\r\n\r\n            {openModalUpdate &&\r\n                <Modal\r\n                    title=\"Cập nhật thông tin sách\"\r\n                    width=\"70%\"\r\n                    onCancel={onCancel}\r\n                    visible={openModalUpdate}\r\n                    footer={\r\n                        <div className='do-an__modal__footer'>\r\n                            <Button\r\n                                type={\"normal-blue\"}\r\n                                onClick={onSubmitFormUpdate}\r\n                            >\r\n                                Cập nhật\r\n                            </Button>\r\n                            <Button\r\n                                type={\"normal-gray\"}\r\n                                onClick={onCancel}\r\n                            >\r\n                                Hủy bỏ\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <UpdateBooks onCloseModal={onCancel}>\r\n\r\n                    </UpdateBooks>\r\n                </Modal>\r\n            }\r\n\r\n            {openModalCreate &&\r\n                <Modal\r\n                    title=\"Tạo thêm sách\"\r\n                    width=\"50%\"\r\n                    onCancel={handleCancelModalCreate}\r\n                    visible={openModalCreate}\r\n                    footer={\r\n                        <div className='do-an__modal__footer'>\r\n                            <Button\r\n                                type={\"normal-blue\"}\r\n                                onClick={onSubmitFormCreate}\r\n                            >\r\n                                Thêm mới\r\n                            </Button>\r\n                            <Button\r\n                                type={\"normal-gray\"}\r\n                                onClick={handleCancelModalCreate}\r\n                            >\r\n                                Hủy bỏ\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <CreateBook codeBooks={code} onCloseModal={handleCancelModalCreate}></CreateBook>\r\n                </Modal>\r\n            }\r\n            <Confirm\r\n                title=\"Xoá sách đơn\"\r\n                width=\"45%\"\r\n                visible={openModalDelete}\r\n                onCancel={handleCancelConfirmDialog}\r\n                onOk={handleDeleteConfirmDialog}\r\n            >\r\n                <p>Xác nhận xóa sách {codeDelete}?</p>\r\n            </Confirm>\r\n\r\n            {openModalSingle &&\r\n                <Modal\r\n                    title=\"Cập nhật thông tin sách\"\r\n                    width=\"40%\"\r\n                    onCancel={handleModalUpdateBook}\r\n                    visible={openModalSingle}\r\n                    footer={\r\n                        <div className='do-an__modal__footer'>\r\n                            <Button\r\n                                type={\"normal-blue\"}\r\n                                onClick={onSubmitFormUpdateBookSingle}\r\n                            >\r\n                                Cập nhật\r\n                            </Button>\r\n                            <Button\r\n                                type={\"normal-gray\"}\r\n                                onClick={handleModalUpdateBook}\r\n                            >\r\n                                Hủy bỏ\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <UpdateBook codeBooks={code} dataBook={dataBook} onCloseModal={handleModalUpdateBook}>\r\n\r\n                    </UpdateBook>\r\n                </Modal>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DetailBooks;","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\toasts\\Toasts.js",["394"],"import React, { useCallback, useEffect } from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleCheck, faTriangleExclamation, faCircleInfo, faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\"\r\nimport './Toasts.scss'\r\n\r\nconst Toasts = ({toastList, setList}) => {\r\n    const deleteToast = useCallback(id => {\r\n        const toastListItem = toastList.filter(e => e.id !== id)\r\n        setList(toastListItem)\r\n    }, [])\r\n\r\n    const dataToast = {\r\n        success: {\r\n            icon: <FontAwesomeIcon icon={faCircleCheck} />,\r\n            background: \"#1fb266\",\r\n        },\r\n        warning: {\r\n            icon: <FontAwesomeIcon icon={faTriangleExclamation} />,\r\n            background: \"#f1b627\",\r\n        },\r\n        info: {\r\n            icon: <FontAwesomeIcon icon={faCircleInfo} />,\r\n            background: \"#141ed2\",\r\n        },\r\n        error: {\r\n            icon: <FontAwesomeIcon icon={faTriangleExclamation} />,\r\n            background: \"#eb2d4b\",\r\n        },\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if(toastList.length){\r\n                deleteToast(toastList[0].id)\r\n            }\r\n        }, 4000)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [toastList, deleteToast])\r\n\r\n    return (\r\n        <div className='toasts-container bottom-right'>\r\n            {\r\n                toastList.map((toast) => {\r\n                    return(\r\n                        <div\r\n                            key={toast.id}\r\n                            className='notification toast bottom-right'\r\n                        >\r\n                            <div \r\n                                className='logo'\r\n                                style={{color: dataToast[toast.type].background}}\r\n                            >{dataToast[toast.type].icon}</div>\r\n                            <div className='info'>\r\n                                <div className='title'>{toast.title}</div>\r\n                                <div className='message'> {toast.message}</div>\r\n                            </div>\r\n                            <div className='button'><button onClick={() => deleteToast(toast.id)}><FontAwesomeIcon icon={faXmark} /></button></div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nToasts.prototype = {\r\n    toastList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setList: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Toasts","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\loading\\Loading.js",[],"F:\\do_an_frontend\\app\\src\\common\\const.js",[],"F:\\do_an_frontend\\app\\src\\common\\utils.js",["395"],"import $ from \"jquery\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst isNotNullOrUndefined = (object) => {\r\n    return !!(typeof (object) !== \"undefined\" && object !== null && object !== {});\r\n}\r\n\r\nconst removeFieldEmtyinObject = (object) => {\r\n    const obj = JSON.parse(JSON.stringify(object));\r\n    $.each(obj, function (key, value) {\r\n        if (value === \"\" || value === null) {\r\n            delete obj[key];\r\n        } else if (Object.prototype.toString.call(value) === '[object Object]') {\r\n            removeFieldEmtyinObject(value);\r\n        } else if ($.isArray(value)) {\r\n            $.each(value, function (_k, v) { removeFieldEmtyinObject(v); });\r\n        }\r\n    });\r\n    return obj\r\n}\r\n\r\nconst readFileDataAsBuffer = (file) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (event) => {\r\n            resolve(event.target.result);\r\n        };\r\n\r\n        reader.onerror = (err) => {\r\n            reject(err);\r\n        };\r\n\r\n        reader.readAsArrayBuffer(file);\r\n    });\r\n}\r\n\r\nconst showTooltip = () => {\r\n    $.fn.textWidth = function (text, font) {\r\n        if (!$.fn.textWidth.fakeEl) $.fn.textWidth.fakeEl = $('<span>').hide().appendTo(document.body);\r\n        $.fn.textWidth.fakeEl.text(text || this.val() || this.text()).css('font', font || this.css('font'));\r\n        return $.fn.textWidth.fakeEl.width();\r\n    };\r\n    $('.ocr-designer__tooltip').unbind(\"hover\")\r\n    $('.ocr-designer__tooltip').hover(function () {\r\n        let tooltip = $(this);\r\n        let tooltip_text = tooltip.attr('data-tip');\r\n        let tooltip_placement = tooltip.attr('data-placement') !== undefined && tooltip.attr('data-placement') !== \"\" ? tooltip.attr('data-placement').toLowerCase() : \"top\";\r\n        let tooltip_style = tooltip.attr('data-style') === \"tooltip\" ? \"ocr-designer__tooltip-text\" : \"\";\r\n        let isCheckTextWitdh = tooltip.attr('data-check-text-width') === \"false\" ? false : true;\r\n\r\n        //check show tooltip\r\n        if (isCheckTextWitdh === true) {\r\n            if (tooltip_text === undefined || tooltip_text === \"\" || tooltip_text === null\r\n                || tooltip.attr('data-style') !== \"tooltip\" || tooltip.textWidth() <= tooltip.width()) {\r\n                return\r\n            }\r\n        }\r\n        let tooltip_class = `.${tooltip_style}-${tooltip_placement}`;\r\n        $(tooltip_class).remove();\r\n        $(\".ocr-designer__layout-project__container\").append(`<span class=\"ocr-designer__tooltip-content ${tooltip_style}-${tooltip_placement}\">${tooltip_text}</span>`);\r\n\r\n        //get position tooltip\r\n\r\n        let box_tooltip = tooltip.get(0).getBoundingClientRect();\r\n        let position_top = box_tooltip.top - 10 - $(tooltip_class).outerHeight();\r\n        let position_bottom = box_tooltip.top + box_tooltip.height;\r\n        let position_left = box_tooltip.left;\r\n\r\n        let cssTooltip = {\r\n            'left': position_left,\r\n            'top': position_top\r\n        }\r\n\r\n        if (tooltip_placement === \"bottom\") {\r\n            cssTooltip = {\r\n                'left': position_left,\r\n                'top': position_bottom\r\n            }\r\n        }\r\n\r\n        $(tooltip_class).css(cssTooltip).animate({ 'opacity': '1', 'margin-left': '10' }, 200);\r\n\r\n    }, function () {\r\n        $(\".ocr-designer__tooltip-content\").animate({ 'opacity': '0', 'margin-left': '0px' }, 200, function () {\r\n            $(this).remove();\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nfunction isJSONString(text) {\r\n    if (typeof text !== \"string\") {\r\n        return false;\r\n    }\r\n    try {\r\n        var json = JSON.parse(text);\r\n        return (typeof json === 'object');\r\n    }\r\n    catch (error) {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction b64toBlob(dataURI) {\r\n    \r\n    var byteString = atob(dataURI.split(',')[1]);\r\n    var ab = new ArrayBuffer(byteString.length);\r\n    var ia = new Uint8Array(ab);\r\n    \r\n    for (var i = 0; i < byteString.length; i++) {\r\n        ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([ab], { type: 'image/jpeg' });\r\n}\r\n\r\nexport const ListButton = ({\r\n    editButtonName,\r\n    removeButtonName,\r\n    onEditAction,\r\n    onRemoveAction,\r\n    editDisable = false,\r\n    removeDisable = false,\r\n  }) => {\r\n    return (\r\n      <div className=\"do-an-list-action\">\r\n        <div className=\"do-an-list-action-item\">\r\n          <button\r\n              className=\"mb-btn mb-btn-outline-blue\"\r\n              name={editButtonName}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Sửa\"\r\n              onClick={onEditAction}\r\n              type=\"button\"\r\n              hidden={editDisable}\r\n              disabled={editDisable}\r\n              style={{cursor:\"pointer\"}}\r\n            >\r\n              <FontAwesomeIcon icon={faPencilAlt}></FontAwesomeIcon>\r\n          </button>\r\n        </div>\r\n        <div className=\"do-an-list-action-item\">\r\n          <button\r\n              className=\"mb-btn mb-btn-outline-red\"\r\n              name={removeButtonName}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Xóa\"\r\n              onClick={onRemoveAction}\r\n              type=\"button\"\r\n              disabled={removeDisable}\r\n              style={{cursor:\"pointer\"}}\r\n            >\r\n             <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  export const ListButtonUser = ({\r\n    editButtonName,\r\n    removeButtonName,\r\n    onEditAction,\r\n    onRemoveAction,\r\n    editDisable = false,\r\n    removeDisable = false,\r\n  }) => {\r\n    return (\r\n      <div className=\"do-an-list-action\" style={{display:\"grid\",gridTemplateColumns:\"repeat(1,1fr)\"}}>\r\n        <div className=\"do-an-list-action-item\">\r\n          <button\r\n              className=\"mb-btn mb-btn-outline-blue\"\r\n              name={editButtonName}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Sửa\"\r\n              onClick={onEditAction}\r\n              type=\"button\"\r\n              hidden={editDisable}\r\n              disabled={editDisable}\r\n              style={{cursor:\"pointer\"}}\r\n            >\r\n              <FontAwesomeIcon icon={faPencilAlt}></FontAwesomeIcon>\r\n          </button>\r\n        </div>\r\n        <div className=\"do-an-list-action-item\">\r\n          <button\r\n              className=\"mb-btn mb-btn-outline-red\"\r\n              name={removeButtonName}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title=\"Xóa\"\r\n              onClick={onRemoveAction}\r\n              type=\"button\"\r\n              disabled={removeDisable}\r\n              style={{cursor:\"pointer\"}}\r\n            >\r\n             <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\nconst Utils = {\r\n    isNotNullOrUndefined,\r\n    removeFieldEmtyinObject,\r\n    readFileDataAsBuffer,\r\n    b64toBlob,\r\n    showTooltip,\r\n    isJSONString,\r\n    ListButton,\r\n    ListButtonUser\r\n};\r\n\r\nexport default Utils;","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\data-table\\DataTable.js",["396","397","398","399","400","401","402","403"],"import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faAngleDown, faAngleUp} from \"@fortawesome/free-solid-svg-icons\";\r\nimport './DataTable.scss'\r\nimport Pagination from \"../pagination/Pagination\"\r\nimport Utils from '../../../../common/utils';\r\nimport $ from \"jquery\"\r\n\r\nconst defaulPagination =  {\r\n    page: 1,\r\n    size: 5,\r\n    totalPage: 0,\r\n    totalItem: 0,\r\n  }\r\n\r\nconst DataTable = ({tableData, headerData, pagination, sort, onSort, showPagination = true, onPageChange = Function(), onNumberItemChange = Function(), onClickRow = Function(), rowClassName}) => {\r\n    const [isDecrement, setIsDecrement] = useState(false)\r\n    const [dataView, setDataView] = useState([])\r\n    const [paginationTable, setPaginationTable] = useState(defaulPagination)\r\n\r\n    useEffect(() => {\r\n        let newPagination = setPagination();\r\n        setPaginationTable(newPagination)\r\n    },[tableData, pagination])\r\n\r\n    // $(document).ready(function () {\r\n    //     Utils.showTooltip()\r\n    // })\r\n\r\n    useEffect(() => {\r\n        let newDataView = [...tableData]\r\n        if(tableData && tableData.length > paginationTable.size ) {\r\n            newDataView = tableData?.slice((paginationTable.page - 1)* paginationTable.size, paginationTable.size * paginationTable.page);\r\n        }\r\n        setDataView(newDataView)\r\n    },[paginationTable])\r\n\r\n\r\n    const setPagination = () => {\r\n        if(pagination) {\r\n            return pagination\r\n        }\r\n        const numberTotalPage = tableData?.length > 0 ? tableData?.length/paginationTable.size : 0\r\n        const numberTotalPageFixed = Math.floor(numberTotalPage)\r\n        return {\r\n            ...paginationTable,\r\n            totalPage: numberTotalPage > numberTotalPageFixed ? numberTotalPageFixed + 1 : numberTotalPageFixed,\r\n            totalItem: tableData?.length || 0,\r\n        }\r\n    }\r\n\r\n    const handleOnPageChange = (newPage) => {\r\n        setPaginationTable({...paginationTable, page: newPage})\r\n        onPageChange(newPage)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        const numberTotalPage = tableData?.length > 0 ? tableData?.length/newSize : 0\r\n        const numberTotalPageFixed = Math.floor(numberTotalPage)\r\n        const totalPage = numberTotalPage > numberTotalPageFixed ? numberTotalPageFixed + 1 : numberTotalPageFixed\r\n        setPaginationTable({...paginationTable, size: newSize, page: newPage, totalPage: totalPage})\r\n        onNumberItemChange(newSize, newPage)\r\n    }\r\n\r\n    const data = dataView?.map((row, index) => {\r\n        let rowData = [];\r\n        for (let header of headerData) {\r\n            rowData.push({\r\n                key: header.dataIndex,\r\n                value: header.render ? header.render(row[header.dataIndex], row): row[header.dataIndex],\r\n                className: header?.className ? header?.className : \"\",\r\n                titleClassName: header?.titleClassName ? header?.titleClassName : \"\",\r\n                properties: header?.propertiesRow ? header?.propertiesRow(row) : {}\r\n            });\r\n        }\r\n        return (\r\n            <tr className={(rowClassName) ? rowClassName(row) : \"\"} key={index} onClick={(e) => {onClickRow(row, e)}}\r\n            >\r\n                {paginationTable ? <td>{(paginationTable.page - 1) * paginationTable.size + index + 1}</td>:\r\n                              <td>{index + 1}</td>}\r\n                {rowData.map((item, indexItem) => {\r\n                        return (<td key={indexItem} className={item.className} {...item.properties}>\r\n                            {item.value}\r\n                        </td>)\r\n                    }\r\n                )}\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    // Show a spinner while the profile is loading\r\n\r\n    const handleSort = (field, value) => {\r\n        if (sort && field === \"Ngày tạo\") {\r\n            setIsDecrement(value)\r\n\r\n            const elements = document.getElementsByClassName(\"table-container__table__header\");\r\n            for (let element of elements) {\r\n                const title = element.childNodes[0]\r\n                const buttonSort = element.childNodes[1]\r\n                buttonSort.classList.add(\"table-container__hidden\")\r\n                if (title.textContent === field && title.id != \"table-container-no\") {\r\n                    buttonSort.classList.remove(\"table-container__hidden\")\r\n                    if (onSort) {\r\n                        onSort(field, value ? \"desc\" : \"asc\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='table-container'>\r\n            <div className='table-container__content'>\r\n            <table className='table-container__table'>\r\n                <thead>\r\n                <tr>\r\n                    <th style={{width:\"5%\"}}>\r\n                        <div className='table-container__table__header'>\r\n                            <div id=\"table-container-no\" className='table-container__table__header__title'>STT</div>\r\n                            <div className='table-container__table__header__btn-sort table-container__hidden'>\r\n                                <FontAwesomeIcon icon={isDecrement ? faAngleDown : faAngleUp}/>\r\n                            </div>\r\n                        </div>\r\n                    </th>\r\n                    {headerData.map((col, index) => (\r\n                        <th style={{width: col.width}} key={index}>\r\n                            <div className={`table-container__table__header ${col.titleClassName ? col.titleClassName : \"\"}`}\r\n                                 onClick={() => handleSort(col.title, !isDecrement)}>\r\n                                <div className='table-container__table__header__title'>{col.title}</div>\r\n                                {<div className='table-container__table__header__btn-sort table-container__hidden'>\r\n                                    <FontAwesomeIcon icon={isDecrement ? faAngleDown : faAngleUp}/>\r\n                                </div>}\r\n                            </div>\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n                </thead>\r\n                <React.Suspense fallback={<div>Loading...</div>}>\r\n                    <tbody>\r\n                    {(tableData && tableData.length >= 1) && data}\r\n                    </tbody>\r\n                </React.Suspense>\r\n\r\n            </table>\r\n            </div>\r\n            {(!tableData || tableData.length < 1) &&\r\n            <div className='empty'>\r\n                <div className='logo'></div>\r\n                <div className='text'>Không có dữ liệu</div>\r\n            </div>\r\n            }\r\n            {showPagination && <Pagination\r\n                pagination={paginationTable}\r\n                onPageChange={handleOnPageChange}\r\n                onNumberItemChange={handleNumberItemChange}\r\n            ></Pagination>}\r\n        </div>\r\n    )\r\n}\r\n\r\nDataTable.propTypes = {\r\n    tableData: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    headerData: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onPageChange: PropTypes.func,\r\n    onNumberItemChange: PropTypes.func,\r\n    pagination: PropTypes.object,\r\n    sort: PropTypes.bool,\r\n    onSort: PropTypes.func,\r\n    showPagination: PropTypes.bool,\r\n}\r\n\r\nexport default DataTable","F:\\do_an_frontend\\app\\src\\redux\\action\\BooksAction.js",["404","405"],"import { openNotificationCommon, startLoading, stopLoading } from \"../../common/const\";\r\nimport Utils from \"../../common/utils\";\r\nimport booksService from \"../../redux/service/BooksService\";\r\nimport BooksService from \"../../redux/service/BooksService\";\r\nimport { BooksSlice } from \"../../redux/slice/BooksSlice\";\r\n\r\n/**\r\n *[LiST] - Get list Project Action\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\nconst getListBooksAction = async (dispatch, paging) => {\r\n  try {\r\n    // get response from api\r\n    const response = await BooksService.getList(paging);\r\n    if (\r\n      Utils.isNotNullOrUndefined(response) &&\r\n      Utils.isNotNullOrUndefined(response.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data.result) &&\r\n      Utils.isNotNullOrUndefined(response.data.data.pagination)\r\n    ) {\r\n      var listResults = response.data.data.result;\r\n      var pagingResult = response.data.data.pagination;\r\n\r\n      // dispath data to reducer\r\n      dispatch(\r\n        BooksSlice.actions.loadListBooksReducer(\r\n          listResults\r\n        )\r\n      );\r\n\r\n      // dispatch paging\r\n      dispatch(\r\n        BooksSlice.actions.setPagination({\r\n          page: pagingResult.page,\r\n          size: pagingResult.limit,\r\n          totalPage: pagingResult.total_page,\r\n          totalItem: pagingResult.total_records,\r\n        })\r\n      );\r\n    } else {\r\n      // dispath data to reducer - empty\r\n      dispatch(\r\n        BooksSlice.actions.loadListBooksReducer([])\r\n      );\r\n      dispatch(\r\n        BooksSlice.actions.setPagination({\r\n          page: 1,\r\n          size: paging.size,\r\n          totalPage: 0,\r\n          totalItem: 0,\r\n        })\r\n      );\r\n    }\r\n  } catch (err) {\r\n    console.log(\"getListBooksAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n *[LiST] - Load Filter Data\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\nconst updateBooksFilterAction = (dispatch, filter, newFilter) => {\r\n  // dispath data to reducer\r\n  dispatch(\r\n    BooksSlice.actions.loadPaginationFilter(filter)\r\n  );\r\n};\r\n\r\nconst updateBooksPagination = (dispatch, pagination) => {\r\n  dispatch(\r\n    BooksSlice.actions.setPagination(pagination)\r\n  );\r\n}\r\n\r\n/**\r\n * [CREATE] - Create Project data\r\n * @param {*} formData\r\n */\r\nexport const createBooksAction = async (formData, dispatch, filter) => {\r\n  try {\r\n    const response = await BooksService.create(\r\n      formData\r\n    );\r\n\r\n    if (response.data.status === 201) {\r\n      openNotificationCommon(\"success\", \"Thông báo\", \"Thêm mới sách thành công!\")\r\n      getListBooksAction(dispatch, filter)\r\n      return true\r\n    } else {\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Thêm mới sách thất bại!\")\r\n    }\r\n    return response\r\n  } catch (err) {\r\n    console.log(\"createBooksAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n};\r\n\r\nconst getDetailBooksAction = async (dispatch, code) => {\r\n  try {\r\n    const response = await booksService.getDetail(code)\r\n    console.log(response);\r\n    if (\r\n      Utils.isNotNullOrUndefined(response) &&\r\n      Utils.isNotNullOrUndefined(response.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data)\r\n    ) {\r\n      dispatch(\r\n        BooksSlice.actions.saveDetailBooks(\r\n          response.data.data\r\n        )\r\n      )\r\n    }\r\n  } catch (error) {\r\n    console.log(\"BooksAction || getDetail || Cause by \", error)\r\n  };\r\n}\r\n\r\nconst updateBooksAction = async (dispatch,code, formData) => {\r\n  try {\r\n    const response = await booksService.updateBooks(code, formData)\r\n    if (response.data.status === 200){\r\n      openNotificationCommon(\"success\", \"Thông báo\", `Cập nhật thành công!`)\r\n      dispatch(\r\n            BooksSlice.actions.saveDetailBooks(\r\n              response.data.data\r\n            )\r\n      )\r\n      return true\r\n  }else{\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Cập nhật thất bại!`)\r\n  }\r\n    return false;\r\n  } catch (err) {\r\n    console.log(\"UpdateBooks Action - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n}\r\n\r\nconst removeBooks = async (dispatch, code, filter) => {\r\n  try {\r\n      const response = await booksService.remove(code)\r\n      if (response.data.status === 204){\r\n          openNotificationCommon(\"success\", \"Thông báo\", `Xóa sách ${code} thành công!`)\r\n          getListBooksAction(dispatch, filter)\r\n          return true\r\n      }else{\r\n          openNotificationCommon(\"error\", \"Thông báo\", `Xóa sách ${code} thất bại!`)\r\n      }\r\n      return false\r\n  } catch (error) {\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Xóa sách ${code} thất bại!`)\r\n      console.log(\"BooksAction || remove || Cause by \", error)\r\n      return false\r\n  }\r\n}\r\n\r\n\r\nconst BooksAction = {\r\n  getListBooksAction,\r\n  updateBooksFilterAction,\r\n  updateBooksPagination,\r\n  createBooksAction,\r\n  getDetailBooksAction,\r\n  updateBooksAction,\r\n  removeBooks\r\n}\r\n\r\nexport default BooksAction;\r\n","F:\\do_an_frontend\\app\\src\\redux\\action\\BookAction.js",["406","407"],"import { openNotificationCommon, startLoading, stopLoading } from \"../../common/const\";\r\nimport Utils from \"../../common/utils\";\r\nimport BookService from \"../../redux/service/BookService\";\r\nimport { BookSlice } from \"../../redux/slice/BookSlice\";\r\n\r\n/**\r\n *[LiST] - Get list Project Action\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\n const getListBookAction = async (dispatch,code_books ,paging) => {\r\n    try {\r\n      console.log(paging);\r\n      // get response from api\r\n      const response = await BookService.getListBook(paging, code_books);\r\n      if (\r\n        Utils.isNotNullOrUndefined(response) &&\r\n        Utils.isNotNullOrUndefined(response.data) &&\r\n        Utils.isNotNullOrUndefined(response.data.data) &&\r\n        Utils.isNotNullOrUndefined(response.data.data.result) &&\r\n        Utils.isNotNullOrUndefined(response.data.data.pagination)\r\n      ) {\r\n        var listResults = response.data.data.result;\r\n        var pagingResult = response.data.data.pagination;\r\n  \r\n        // dispath data to reducer\r\n        dispatch(\r\n          BookSlice.actions.loadListBookReducer(\r\n            listResults\r\n          )\r\n        );\r\n  \r\n        // dispatch paging\r\n        dispatch(\r\n          BookSlice.actions.setPagination({\r\n            page: pagingResult.page,\r\n            size: pagingResult.limit,\r\n            totalPage: pagingResult.total_page,\r\n            totalItem: pagingResult.total_records,\r\n          })\r\n        );\r\n      } else {\r\n        // dispath data to reducer - empty\r\n        dispatch(\r\n          BookSlice.actions.loadListBookReducer([])\r\n        );\r\n        dispatch(\r\n            BookSlice.actions.setPagination({\r\n            page: 1,\r\n            size: paging.size,\r\n            totalPage: 0,\r\n            totalItem: 0,\r\n          })\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.log(\"getListBookAction - error: \", err);\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  /**\r\n   *[LiST] - Load Filter Data\r\n   *\r\n   * @param {*} dispatch\r\n   * @param {*} params\r\n   */\r\n  const updateBookFilterAction = (dispatch, filter, newFilter) => {\r\n    // dispath data to reducer\r\n    dispatch(\r\n      BookSlice.actions.loadPaginationFilter(filter)\r\n    );\r\n  };\r\n\r\n  const updateBookPagination = (dispatch, pagination) => {\r\n    dispatch(\r\n        BookSlice.actions.setPagination(pagination)\r\n      );\r\n  }\r\n\r\nconst getDetailBookAction = async (dispatch, code_id) => {\r\n  try {\r\n      const response = await BookService.getDetailBook(code_id)\r\n    console.log(response);\r\n      if (\r\n          Utils.isNotNullOrUndefined(response) &&\r\n          Utils.isNotNullOrUndefined(response.data) &&\r\n          Utils.isNotNullOrUndefined(response.data.data) \r\n      ){\r\n          dispatch(\r\n              BookSlice.actions.saveDetailBook(\r\n                  response.data.data\r\n              )\r\n          )\r\n          return response\r\n      }\r\n  } catch (error) {\r\n      console.log(\"BooksAction || getDetail || Cause by \", error)\r\n  }\r\n  \r\n}\r\n\r\nconst createBookAction = async (dispatch,formCreate, filter) => {\r\n  try {\r\n      const response = await BookService.createBook(formCreate)\r\n    console.log(response);\r\n      if (\r\n          Utils.isNotNullOrUndefined(response) &&\r\n          Utils.isNotNullOrUndefined(response.data) &&\r\n          Utils.isNotNullOrUndefined(response.data.data) \r\n      ){\r\n        getListBookAction(dispatch, formCreate.code_books, filter)\r\n        openNotificationCommon(\"success\", \"Thông báo\", \"Thêm mới sách thành công!\")\r\n          return true\r\n      }\r\n      else{\r\n        openNotificationCommon(\"error\", \"Thông báo\", \"Thêm mới sách thành công!\")\r\n        return false\r\n      }\r\n  } catch (error) {\r\n      console.log(\"BooksAction || getDetail || Cause by \", error)\r\n  }\r\n  \r\n}\r\n\r\nconst removeBookAction = async (dispatch,codeBooks ,code, filter) => {\r\n  try {\r\n      const response = await BookService.deleteBook(code)\r\n      if (response.data.status === 204){\r\n          openNotificationCommon(\"success\", \"Thông báo\", `Xóa sách đơn ${code} thành công!`)\r\n          getListBookAction(dispatch,codeBooks ,filter)\r\n          return true\r\n      }else{\r\n          openNotificationCommon(\"error\", \"Thông báo\", `Xóa sách đơn ${code} thất bại!`)\r\n      }\r\n      return false\r\n  } catch (error) {\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Xóa sách đơn ${code} thất bại!`)\r\n      console.log(\"BooksAction || remove || Cause by \", error)\r\n      return false\r\n  }\r\n}\r\n\r\nconst updateBookAction = async (dispatch,code_books ,code_id, formUpdate, filter) => {\r\n  try {\r\n    const response = await BookService.updateBook(code_id, formUpdate)\r\n    if (response.data.status === 200) {\r\n      openNotificationCommon(\"success\", \"Thông báo\", `Cập nhật thành công!`)\r\n\r\n      getListBookAction(dispatch,code_books, filter);\r\n\r\n      return true\r\n    } else {\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Cập nhật thất bại!`)\r\n    }\r\n    return false;\r\n  } catch (err) {\r\n    console.log(\"UpdateBook Action - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n const BookAction = {\r\n    getListBookAction,\r\n    updateBookFilterAction,\r\n    updateBookPagination,\r\n    getDetailBookAction,\r\n    createBookAction,\r\n    removeBookAction,\r\n    updateBookAction\r\n } \r\n\r\n export default BookAction;\r\n","F:\\do_an_frontend\\app\\src\\redux\\action\\UserAction.js",[],"F:\\do_an_frontend\\app\\src\\redux\\action\\ManagerAction.js",[],"F:\\do_an_frontend\\app\\src\\redux\\action\\VoucherAction.js",["408","409"],"import { openNotificationCommon, startLoading, stopLoading } from \"../../common/const\";\r\nimport Utils from \"../../common/utils\";\r\nimport VoucherService from \"../service/VoucherService\";\r\nimport { VoucherSlice } from \"../slice/VoucherSlice\";\r\n\r\n/**\r\n *[LiST] - Get list Project Action\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\nconst getListVoucherAction = async (dispatch, paging) => {\r\n  try {\r\n    // get response from api\r\n    const response = await VoucherService.getList(paging);\r\n    if (\r\n      Utils.isNotNullOrUndefined(response) &&\r\n      Utils.isNotNullOrUndefined(response.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data.result) &&\r\n      Utils.isNotNullOrUndefined(response.data.data.pagination)\r\n    ) {\r\n      var listResults = response.data.data.result;\r\n      var pagingResult = response.data.data.pagination;\r\n\r\n      // dispath data to reducer\r\n      dispatch(\r\n        VoucherSlice.actions.loadListVoucherReducer(\r\n          listResults\r\n        )\r\n      );\r\n      console.log(listResults);\r\n\r\n      // dispatch paging\r\n      dispatch(\r\n        VoucherSlice.actions.setPagination({\r\n          page: pagingResult.page,\r\n          size: pagingResult.limit,\r\n          totalPage: pagingResult.total_page,\r\n          totalItem: pagingResult.total_records,\r\n        })\r\n      );\r\n    } else {\r\n      // dispath data to reducer - empty\r\n      dispatch(\r\n        VoucherSlice.actions.loadListVoucherReducer([])\r\n      );\r\n      dispatch(\r\n        VoucherSlice.actions.setPagination({\r\n          page: 1,\r\n          size: paging.size,\r\n          totalPage: 0,\r\n          totalItem: 0,\r\n        })\r\n      );\r\n    }\r\n  } catch (err) {\r\n    console.log(\"getListVoucherAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n *[LiST] - Load Filter Data\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\nconst updateVoucherFilterAction = (dispatch, filter, newFilter) => {\r\n  // dispath data to reducer\r\n  dispatch(\r\n    VoucherSlice.actions.loadPaginationFilter(filter)\r\n  );\r\n};\r\n\r\nconst updateVoucherPagination = (dispatch, pagination) => {\r\n  dispatch(\r\n    VoucherSlice.actions.setPagination(pagination)\r\n  );\r\n}\r\n\r\nconst createVoucherAction = async (formData, dispatch, filter) => {\r\n  try {\r\n    const response = await VoucherService.create(\r\n      formData\r\n    );\r\n\r\n    if (response.data.status === 201) {\r\n      openNotificationCommon(\"success\", \"Thông báo\", \"Thêm mới phiếu mượn thành công!\")\r\n      getListVoucherAction(dispatch, filter)\r\n      return true\r\n    } else {\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Thêm mới phiếu mượn thất bại!\")\r\n    }\r\n    return response\r\n  } catch (err) {\r\n    console.log(\"createVoucherAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n}\r\n\r\nconst getDetailVoucherAction = async (dispatch, voucher_id) => {\r\n  try {\r\n    const response = await VoucherService.getDetail(voucher_id)\r\n    console.log(response);\r\n    if (\r\n      Utils.isNotNullOrUndefined(response) &&\r\n      Utils.isNotNullOrUndefined(response.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data)\r\n    ) {\r\n      dispatch(\r\n        VoucherSlice.actions.saveDetailVoucher(\r\n          response.data.data\r\n        )\r\n      )\r\n      return response.data.data\r\n    }\r\n  } catch (error) {\r\n    console.log(\"BooksAction || getDetail || Cause by \", error)\r\n  };\r\n}\r\n\r\nconst updateVoucherAction = async (dispatch, voucher_id, formData) => {\r\n  try {\r\n    const response = await VoucherService.updateVoucher(voucher_id, formData)\r\n    if (response.data.status === 200) {\r\n      openNotificationCommon(\"success\", \"Thông báo\", `Cập nhật thành công!`)\r\n      dispatch(\r\n        VoucherSlice.actions.saveDetailVoucher(\r\n          response.data.data\r\n        )\r\n      )\r\n      return true\r\n    } else {\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Cập nhật thất bại!`)\r\n    }\r\n    return false;\r\n  } catch (err) {\r\n    console.log(\"UpdateBooks Action - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n}\r\n\r\nconst updateStatusVoucher = async (dispatch, voucher_id, status_update, filter) => {\r\n  try {\r\n    const response = await VoucherService.updateStatus(voucher_id, status_update)\r\n    if (response.data.status === 200) {\r\n      openNotificationCommon(\"success\", \"Thông báo\", `Cập nhật thành công!`)\r\n      dispatch(\r\n        VoucherSlice.actions.saveDetailVoucher(\r\n          response.data.data\r\n        )\r\n      )\r\n      VoucherAction.getListVoucherAction(dispatch, filter)\r\n      return true\r\n    } else {\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Cập nhật thất bại!`)\r\n    }\r\n    return false\r\n  } catch (error) {\r\n    console.log(\"BooksAction || getDetail || Cause by \", error)\r\n  };\r\n}\r\n\r\nconst getChartVoucher = async (dispatch,month, year) => {\r\n  try {\r\n    let paging = {\r\n      month: month,\r\n      year: year\r\n    }\r\n    const response = await VoucherService.getChart(paging)\r\n    if (\r\n      Utils.isNotNullOrUndefined(response) &&\r\n      Utils.isNotNullOrUndefined(response.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data)\r\n    ) {\r\n      dispatch(\r\n        VoucherSlice.actions.saveDetailChart(response.data.data)\r\n      )\r\n      return response.data.data\r\n    }\r\n  } catch (error) {\r\n    console.log(\"VoucherAction || getChart || Cause by \", error)\r\n  };\r\n}\r\n\r\nconst VoucherAction = {\r\n  getListVoucherAction,\r\n  updateVoucherFilterAction,\r\n  updateVoucherPagination,\r\n  createVoucherAction,\r\n  getDetailVoucherAction,\r\n  updateStatusVoucher,\r\n  updateVoucherAction,\r\n  getChartVoucher\r\n}\r\n\r\nexport default VoucherAction;","F:\\do_an_frontend\\app\\src\\components\\books\\components\\create_books\\CreateBooks.js",["410","411","412"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './CreateBooks.scss';\r\nimport image2 from '../../../../share/image/123.jpg';\r\nimport ConstAPI from '../../../../common/const';\r\nimport constImage from \"../../../../common/constImage\";\r\nimport BooksAction from \"../../../../redux/action/BooksAction\";\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport GroupsAction from \"../../../../redux/action/GroupsAction\";\r\n\r\n\r\nconst CreateBooks = ({ onCloseModal }) => {\r\n\r\n    const { setValue, register, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(image2)\r\n    const filter = useSelector(state => state.booksReducer.paginationFilter)\r\n    const listGroups = useSelector(state => state.groupsReducer.listGroups)\r\n\r\n    const [formCreate, setFormCreate] = useState(\r\n        {\r\n            name: \"\",\r\n            description: \"\",\r\n            title: \"\",\r\n            author: \"\",\r\n            name_university: \"\",\r\n            publishing_year: \"\",\r\n            origin: \"\",\r\n            group_code: \"GROUPS_1673458766\",\r\n            amount: 1,\r\n            avatar: null,\r\n            cabinet: 1\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        GroupsAction.getListGroupsAction(dispatch)\r\n        setValue(\"amount\", formCreate.amount)\r\n    }, [])\r\n\r\n\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState([])\r\n\r\n    useEffect(() => {\r\n        let listGrgoupsDropDown = listGroups.map((item) => {\r\n            return {\r\n                title: item?.group_name,\r\n                value: item?.group_code\r\n            }\r\n        })\r\n        setListDefaultDropDown([...listGrgoupsDropDown])\r\n    }, [listGroups])\r\n\r\n    const checkFileTypeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { type } = files[0];\r\n            return (constImage.LIST_FILE_TYPE_AVATAR.findIndex(item => `IMAGE/${item}` === type.toLocaleUpperCase()) > -1)\r\n        }\r\n        return true\r\n    }\r\n    const checkFileSizeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { size } = files[0];\r\n            return (size / 1024 / 1024 <= 5)\r\n        }\r\n        return true\r\n    }\r\n\r\n    const onImageChange = async (event) => {\r\n        if (event.target.files && event.target.files[0] && event.target.files[0]['type'].split('/')[0] === 'image') {\r\n            console.log(event.target.files);\r\n\r\n            setImage(URL.createObjectURL(event.target.files[0]));\r\n            handleChangeInput(\"avatar\", event.target.files[0])\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        console.log(value, field);\r\n        const newFormData = { ...formCreate, [field]: value };\r\n        setFormCreate(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        BooksAction.createBooksAction(formCreate, dispatch, filter)\r\n        onCloseModal()\r\n    }\r\n\r\n    console.log(formCreate);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <form id=\"do-an-form-create-books\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n            <div className=\"do-an-form-create-books__body\">\r\n                {/* <div className=\"do-an-form-create-books__body__title\">\r\n                    Thông tin:\r\n                </div> */}\r\n\r\n                <div className=\"do-an-form-create-books__body__content\">\r\n                    <div className=\"do-an-form-create-books__body__content__info\">\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Tên Sách: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên sách không được trống!</div>}\r\n                                {errors.name?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Thể loại: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <DropDown className=\"do-an-dropdown-create\"\r\n                                    listItem={listDefaultDropDown}\r\n                                    selected={formCreate.group_code || listDefaultDropDown[0]?.value}\r\n                                    name=\"group_code\"\r\n                                    onSelected={handleChangeInput}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Mô tả:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"description\",\r\n                                        {\r\n                                            maxLength: 500,\r\n                                            onChange: (e) => handleChangeInput(\"description\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.description?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Mô tả sách không được vượt quá 500 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Tiêu đề: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"title\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"title\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.title?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tiêu đề sách không được trống!</div>}\r\n                                {errors.title?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tiêu đề sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Tác giả: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"author\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"author\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.author?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tác giả sách không được trống!</div>}\r\n                                {errors.author?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tác giả sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Thuộc đại học: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name_university\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"name_university\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name_university?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học sở hữu sách không được vượt quá 100 ký tự!</div>}\r\n                                {errors.name_university?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học sở hữu sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Năm xuất bản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"publishing_year\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 4,\r\n                                            onChange: (e) => handleChangeInput(\"publishing_year\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                    type=\"number\"\r\n                                />\r\n                                {errors.publishing_year?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Năm xuất bản sách không được trống!</div>}\r\n                                {errors.publishing_year?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Năm xuất bản sách không được vượt quá 4 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Nhà xuất bản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"origin\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"origin\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.origin?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Nhà xuất bản sách không được trống!</div>}\r\n                                {errors.origin?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Nhà xuất bản sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Tủ số: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    type={\"number\"}\r\n                                    className={`do-an__input do-an-input-name input-number ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"cabinet\",\r\n                                        {\r\n                                            min: 1,\r\n                                            max: 1000,\r\n                                            onChange: (e) => handleChangeInput(\"cabinet\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.cabinet?.type === \"min\" &&\r\n                                    <div className=\"input-value-error\">Tủ đựng sách không được nhỏ hơn 1!</div>}\r\n                                {errors.cabinet?.type === \"max\" &&\r\n                                    <div className=\"input-value-error\">Tủ đựng sách không được lớn hơn 1000!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-books__body__group-input\">\r\n                            <div className=\"do-an-form-create-books__body__group-input__key\">\r\n                                <span>Nhập số lượng: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-books__body__group-input__input\">\r\n                                <input\r\n                                    type={\"number\"}\r\n                                    className={`do-an__input do-an-input-name input-number ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"amount\",\r\n                                        {\r\n                                            min: 1,\r\n                                            onChange: (e) => handleChangeInput(\"amount\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.amount?.type === \"min\" &&\r\n                                    <div className=\"input-value-error\">Số lượng sách không được nhỏ hơn 0!</div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an-form-create-books__body__content__avatar\">\r\n                        <div className=\"do-an-form-create-books__body__group-input__input-add-image\">\r\n                            <div>\r\n                                <input type=\"file\" accept=\"image/*\" className={`ocr-designer-input-add-image ${errors.image ? 'is-invalid' : ''}`}\r\n                                    {...register(\"avatar\",\r\n                                        {\r\n                                            onChange: (e) => onImageChange(e),\r\n                                            required: true,\r\n                                            validate: {\r\n                                                checkFileType: files => checkFileTypeAvatar(files) || `Ảnh đại diện chỉ nhận các file ${constImage.LIST_FILE_TYPE_AVATAR.join(\", \")}`,\r\n                                                checkFileSize: files => checkFileSizeAvatar(files) || \"Ảnh đại diện không vượt quá 5MB\"\r\n                                            }\r\n                                        }\r\n                                    )} />\r\n                                {errors.avatar?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Ảnh sách không được trống!</div>}\r\n                                {errors.avatar?.message &&\r\n                                    <div className=\"input-value-error\">{errors.avatar?.message}</div>}\r\n                            </div>\r\n                            <img className=\"do-an-preview-image1\" src={image}></img>\r\n                            <div className=\"do-an-title-avatar\">\r\n                                Ảnh đại diện\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button id=\"do-an-form-create-books-button\" type=\"submit\" hidden={true}></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateBooks;","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown-v2\\DropDown.js",["413","414"],"import React, { useState } from 'react'\r\nimport './DropDown.scss'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst DropDown = ({ className, name, selected, listItem, onSelected, placeholder, placement = \"bottom\", disable = false , indexTable}) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    return (\r\n        <div className={`${className ? className : \"\"} dropdown-container ${disable === true ? \"dropdown-container__no-drop\" : \"\"}`}>\r\n            <div\r\n                className={`dropdown-container__overlay ${isOpen ? \"dropdown-container__overlay__active\" : \"\"}`}\r\n                onClick={() => setIsOpen(!isOpen)}\r\n            ></div>\r\n            <div className={`dropdown-container__header`}\r\n                onClick={() => {\r\n                    if (disable === false ) {\r\n                        setIsOpen(!isOpen)\r\n                    } else {\r\n                        setIsOpen(false)\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <div className='dropdown-container__header__text'>\r\n                    {(selected !== \"undefine\" && selected !== \"\") ? listItem?.find(item => item.value === selected)?.title : placeholder}\r\n                </div>\r\n                <div\r\n                    className='dropdown-container__header__icon'\r\n                >\r\n                    <FontAwesomeIcon icon={(placement == \"top\") ? faAngleUp : faAngleDown} />\r\n                </div>\r\n            </div>\r\n            <div className={`ecm-base__scroll dropdown-container__select-box ${isOpen ? \"open\" : \"\"} ${(placement == \"top\") ? \"dropdown-container__select-box__top\" : \"\"}`}>\r\n                {\r\n                    listItem.map((item, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className='dropdown-container__select-box__item'\r\n                            onClick={() => {\r\n                                onSelected(name, item.value, indexTable)\r\n                                setIsOpen(!isOpen)\r\n                            }}\r\n                        >{item.title}</div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nDropDown.propTypes = {\r\n    className: PropTypes.string,\r\n    name: PropTypes.string,\r\n    selected: PropTypes.string,\r\n    listItem: PropTypes.arrayOf(PropTypes.any),\r\n    onSelected: PropTypes.func,\r\n    placement: PropTypes.string\r\n}\r\n\r\nexport default DropDown","F:\\do_an_frontend\\app\\src\\redux\\action\\GroupsAction.js",["415","416"],"import { openNotificationCommon, startLoading, stopLoading } from \"../../common/const\";\r\nimport Utils from \"../../common/utils\";\r\nimport GroupsService from \"../../redux/service/GroupsService\";\r\nimport { GroupsSlice } from \"../../redux/slice/GroupsSlice\";\r\n\r\n/**\r\n *[LiST] - Get list Project Action\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\nconst getListGroupsAction = async (dispatch, paging) => {\r\n  try {\r\n    // get response from api\r\n    const response = await GroupsService.getList(paging);\r\n    console.log(response);\r\n    if (\r\n      Utils.isNotNullOrUndefined(response) &&\r\n      Utils.isNotNullOrUndefined(response.data) &&\r\n      Utils.isNotNullOrUndefined(response.data.data.result) \r\n    ) {\r\n      var listResults = response.data.data.result;\r\n      var pagingResult = response.data.data.pagination;\r\n      // dispath data to reducer\r\n      dispatch(\r\n        GroupsSlice.actions.loadListGroupsReducer(\r\n          listResults\r\n        )\r\n      );\r\n\r\n      // dispatch paging\r\n      dispatch(\r\n        GroupsSlice.actions.setPagination({\r\n            page: pagingResult.page,\r\n            size: pagingResult.limit,\r\n            totalPage: pagingResult.total_page,\r\n            totalItem: pagingResult.total_records,\r\n        })\r\n    );\r\n\r\n    } else {\r\n      // dispath data to reducer - empty\r\n      dispatch(\r\n        GroupsSlice.actions.loadListGroupsReducer([])\r\n      );\r\n\r\n      dispatch(\r\n        GroupsSlice.actions.setPagination({\r\n            page: 1,\r\n            size: paging.size,\r\n            totalPage: 0,\r\n            totalItem: 0,\r\n        })\r\n    );\r\n    }\r\n  } catch (err) {\r\n    console.log(\"getListGroupsAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n};\r\n\r\nconst updateGroupAction = async (dispatch, group_code, formData, filter) => {\r\n  try {\r\n    const response = await GroupsService.update(group_code, formData)\r\n    if (response.data.status === 200) {\r\n      openNotificationCommon(\"success\", \"Thông báo\", `Cập nhật thành công!`)\r\n\r\n      getListGroupsAction(dispatch, filter);\r\n\r\n      return true\r\n    } else {\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Cập nhật thất bại!`)\r\n    }\r\n    return false;\r\n  } catch (err) {\r\n    console.log(\"UpdateGroup Action - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n *[LiST] - Load Filter Data\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\n const updateGroupFilterAction = (dispatch, filter) => {\r\n  // dispath data to reducer\r\n  dispatch(\r\n      GroupsSlice.actions.loadPaginationFilter(filter)\r\n  );\r\n};\r\n\r\nconst updateGroupPagination = (dispatch, pagination) => {\r\n  dispatch(\r\n    GroupsSlice.actions.setPagination(pagination)\r\n  );\r\n}\r\n\r\nconst createGroupAction = async (formData, dispatch, filter) => {\r\n  try {\r\n    const response = await GroupsService.create(\r\n      formData\r\n    );\r\n\r\n    if (response.data.status === 201) {\r\n      openNotificationCommon(\"success\", \"Thông báo\", \"Thêm mới thể loại thành công!\")\r\n      getListGroupsAction(dispatch, filter)\r\n      return true\r\n    } else {\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Thêm mới thể loại thất bại!\")\r\n      return false\r\n    }\r\n  //   return response\r\n  } catch (err) {\r\n    console.log(\"createGroupAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return false;\r\n  }\r\n};\r\n\r\nconst removeGroup = async (dispatch, group_code, filter) => {\r\n  try {\r\n      const response = await GroupsService.remove(group_code)\r\n      if (response.data.status === 204){\r\n          openNotificationCommon(\"success\", \"Thông báo\", `Xóa thể loại ${group_code} thành công!`)\r\n          getListGroupsAction(dispatch, filter)\r\n          return true\r\n      }else{\r\n          openNotificationCommon(\"error\", \"Thông báo\", `Xóa thể loại ${group_code} thất bại!`)\r\n      }\r\n      return false\r\n  } catch (error) {\r\n      openNotificationCommon(\"error\", \"Thông báo\", `Xóa thể loại ${group_code} thất bại!`)\r\n      console.log(\"GroupAction || remove || Cause by \", error)\r\n      return false\r\n  }\r\n}\r\n\r\nconst GroupsAction = {\r\n  getListGroupsAction,\r\n  updateGroupAction,\r\n  updateGroupFilterAction,\r\n  updateGroupPagination,\r\n  createGroupAction,\r\n  removeGroup\r\n}\r\n\r\nexport default GroupsAction;\r\n","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\modal\\Modal.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\LoginService.js",["417"],"import { axiosClient, httpAccess, JSON_CONTENT_TYPE } from \"../../common/http-commons\";\r\nimport Utils from \"../../common/utils\";\r\nimport CommonService from \"./commonService\";\r\n\r\nconst login = async (dataLogin) => {\r\n    var loginResponse = null;\r\n    try {\r\n        const loginPath = process.env.REACT_APP_LOGIN_MANAGER_PATH;\r\n        loginResponse = await httpAccess(JSON_CONTENT_TYPE).post(\r\n            loginPath, JSON.stringify(dataLogin));\r\n        return loginResponse;\r\n    } catch (error) {\r\n        console.log(\"[Login]- Fail\", error);\r\n        return CommonService.errorServiceHandle(error);\r\n    }\r\n\r\n}\r\n\r\nconst changePassword = async (dataPassChange) => {\r\n    try {\r\n        const dataPassword = {\r\n            oldpass: dataPassChange.oldpass,\r\n            newpass: dataPassChange.newpass\r\n        }\r\n\r\n        return axiosClient.put(process.env.REACT_APP_CHANGE_PASSWORD_PATH, dataPassword);\r\n    } catch (error) {\r\n        console.log(\"[Manager - ChangePassword]\", error);\r\n    }\r\n}\r\n\r\nconst forgetPassword = async (email, role) => {\r\n    try {\r\n        // const dataPassword = {\r\n        //     oldpass: dataPassChange.oldpass,\r\n        //     newpass: dataPassChange.newpass\r\n        // }\r\n\r\n        return axiosClient.put(process.env.REACT_APP_FORGOT_PASSWORD_PATH.replace(\"{role}\", role) ,email);\r\n    } catch (error) {\r\n        console.log(\"[Manager - ChangePassword]\", error);\r\n    }\r\n}\r\n\r\nconst LoginService = {\r\n    login,\r\n    changePassword,\r\n    forgetPassword\r\n}\r\n\r\nexport default LoginService;","F:\\do_an_frontend\\app\\src\\components\\user\\components\\create_user\\CreateUser.js",["418","419","420","421","422","423","424"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './CreateUser.scss';\r\nimport image2 from '../../../../share/image/123.jpg';\r\nimport ConstAPI, { openNotificationCommon } from '../../../../common/const';\r\nimport constImage from \"../../../../common/constImage\";\r\nimport UserAction from \"../../../../redux/action/UserAction\";\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport { DatePicker } from 'antd';\r\n\r\nconst CreateUser = ({ onCloseModal }) => {\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(image2)\r\n    const filter = useSelector(state => state.userReducer.paginationFilter)\r\n\r\n    const [formCreate, setFormCreate] = useState(\r\n        {\r\n            name: \"\",\r\n            code: \"\",\r\n            date_of_birth: \"\",\r\n            gender: \"MALE\",\r\n            university: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n            user_name: \"\",\r\n            password: \"\",\r\n            avatar: \"\\\\storage\\\\avatar_null.jpg\",\r\n            role: \"STUDENT\",\r\n            course: \"\",\r\n            department: \"\",\r\n            specialized: \"\"\r\n        }\r\n    )\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState([\r\n        {\r\n            title: \"Nam\",\r\n            value: \"MALE\"\r\n        },\r\n        {\r\n            title: \"Nữ\",\r\n            value: \"FEMALE\"\r\n        }\r\n    ])\r\n\r\n    const listRole= [\r\n        {\r\n            title: \"Sinh viên\",\r\n            value: \"STUDENT\"\r\n        },\r\n        {\r\n            title: \"Giảng viên\",\r\n            value: \"TEACHER\"\r\n        }\r\n    ]\r\n\r\n\r\n    const checkFileTypeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { type } = files[0];\r\n            return (constImage.LIST_FILE_TYPE_AVATAR.findIndex(item => `IMAGE/${item}` === type.toLocaleUpperCase()) > -1)\r\n        }\r\n        return true\r\n    }\r\n    const checkFileSizeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { size } = files[0];\r\n            return (size / 1024 / 1024 <= 5)\r\n        }\r\n        return true\r\n    }\r\n\r\n    const onImageChange = async (event) => {\r\n        if (event.target.files && event.target.files[0] && event.target.files[0]['type'].split('/')[0] === 'image') {\r\n            console.log(event.target.files);\r\n\r\n            setImage(URL.createObjectURL(event.target.files[0]));\r\n            handleChangeInput(\"avatar\", event.target.files[0])\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        let newFormData = {}\r\n\r\n        if (field === \"date_of_birth\") {\r\n            newFormData = { ...formCreate, [field]: value.format(\"YYYY-MM-DD\") }\r\n        } else {\r\n            newFormData = { ...formCreate, [field]: value };\r\n\r\n        }\r\n\r\n        setFormCreate(newFormData)\r\n    }\r\n\r\n    console.log(formCreate);\r\n\r\n    const handleSubmitForm = () => {\r\n        UserAction.createUserAction(formCreate, dispatch, filter).then(response => {\r\n            if (response === true) {\r\n                onCloseModal()\r\n            }\r\n            else {\r\n                openNotificationCommon(\"error\", \"Thông báo\", `Tài khoản hoặc email người dùng đã được đăng ký!`)\r\n                return\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form id=\"do-an-form-create-user\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n            <div className=\"do-an-form-create-user__body\">\r\n                <div className=\"do-an-form-create-user__body__content\">\r\n                    <div className=\"do-an-form-create-user__body__content__info\">\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Tên người dùng: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên người dùng không được trống!</div>}\r\n                                {errors.name?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên người dùng không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>{formCreate.role === \"STUDENT\" ? \"Mã sinh viên:\" : \"Mã giảng viên\"} <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"code\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 32,\r\n                                            onChange: (e) => handleChangeInput(\"code\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.code?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Mã người dùng không được trống!</div>}\r\n                                {errors.code?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Mã người dùng không được vượt quá 32 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Phân quyền: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <DropDown className=\"do-an-dropdown-create\"\r\n                                    listItem={listRole}\r\n                                    selected={formCreate.role || listDefaultDropDown[0]?.value}\r\n                                    name=\"role\"\r\n                                    onSelected={handleChangeInput}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        {formCreate?.role === \"STUDENT\" &&\r\n                            <div className=\"do-an-form-create-user__body__group-input\">\r\n                                <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                    <span>Khóa: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                        {...register(\"course\",\r\n                                            {\r\n                                                required: true,\r\n                                                maxLength: 10,\r\n                                                onChange: (e) => handleChangeInput(\"course\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                    {errors.course?.type === \"required\" &&\r\n                                        <div className=\"input-value-error\">Khóa không được trống!</div>}\r\n                                    {errors.course?.type === \"maxLength\" &&\r\n                                        <div className=\"input-value-error\">Khóa không được vượt quá 10 ký tự!</div>}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {formCreate?.role === \"TEACHER\" &&\r\n                            <div className=\"do-an-form-create-user__body__group-input\">\r\n                                <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                    <span>Phòng ban: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                        {...register(\"department\",\r\n                                            {\r\n                                                required: true,\r\n                                                maxLength: 100,\r\n                                                onChange: (e) => handleChangeInput(\"department\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                    {errors.department?.type === \"required\" &&\r\n                                        <div className=\"input-value-error\">Phòng ban không được trống!</div>}\r\n                                    {errors.department?.type === \"maxLength\" &&\r\n                                        <div className=\"input-value-error\">Phòng ban không được vượt quá 100 ký tự!</div>}\r\n                                </div>\r\n                            </div>  \r\n                        }\r\n                         {formCreate?.role === \"TEACHER\" &&\r\n                            <div className=\"do-an-form-create-user__body__group-input\">\r\n                                <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                    <span>Chuyên ngành: <i className=\"do-an__input-require\">*</i></span>\r\n                                </div>\r\n                                <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                    <input\r\n                                        className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                        {...register(\"specialized\",\r\n                                            {\r\n                                                required: true,\r\n                                                maxLength: 100,\r\n                                                onChange: (e) => handleChangeInput(\"specialized\", e.target.value)\r\n                                            }\r\n                                        )}\r\n                                    />\r\n                                    {errors.specialized?.type === \"required\" &&\r\n                                        <div className=\"input-value-error\">Chuyên ngành không được trống!</div>}\r\n                                    {errors.specialized?.type === \"maxLength\" &&\r\n                                        <div className=\"input-value-error\">Chuyên ngành không được vượt quá 100 ký tự!</div>}\r\n                                </div>\r\n                            </div>  \r\n                        }\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Giới tính: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <DropDown className=\"do-an-dropdown-create\"\r\n                                    listItem={listDefaultDropDown}\r\n                                    selected={formCreate.gender || listDefaultDropDown[0]?.value}\r\n                                    name=\"gender\"\r\n                                    onSelected={handleChangeInput}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Ngày sinh:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                {/* <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"date_of_birth\",\r\n                                        {\r\n                                            onChange: (e) => handleChangeInput(\"date_of_birth\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                /> */}\r\n                                <DatePicker\r\n                                    placeholder=\"Ngày sinh\"\r\n                                    onChange={(e) => handleChangeInput(\"date_of_birth\", e)}\r\n                                >\r\n\r\n                                </DatePicker>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Đại học: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"university\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"university\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.university?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học không được trống!</div>}\r\n                                {errors.university?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Số điện thoại: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"phone\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 10,\r\n                                            onChange: (e) => handleChangeInput(\"phone\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                    type=\"number\"\r\n                                />\r\n                                {errors.phone?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Số điện thoại không được trống!</div>}\r\n                                {errors.phone?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Số điện thoại không được vượt quá 10 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Email: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"email\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"email\", e.target.value),\r\n                                            // validate: (value) => handleCheckEmail(value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.email?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên email không được trống!</div>}\r\n                                {errors.email?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên email không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Tên tài khoản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"user_name\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 50,\r\n                                            onChange: (e) => handleChangeInput(\"user_name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.user_name?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên tài khoản không được trống!</div>}\r\n                                {errors.user_name?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên tài khoản không được vượt quá 50 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-user__body__group-input\">\r\n                            <div className=\"do-an-form-create-user__body__group-input__key\">\r\n                                <span>Mật khẩu: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-user__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"password\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"password\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                    type=\"password\"\r\n                                />\r\n                                {errors.password?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Mật khẩu không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"do-an-form-create-user__body__content__avatar\">\r\n                        <div className=\"do-an-form-create-user__body__group-input__input-add-image\">\r\n                            <div>\r\n                                <input type=\"file\" accept=\"image/*\" className={`ocr-designer-input-add-image ${errors.image ? 'is-invalid' : ''}`}\r\n                                    {...register(\"avatar\",\r\n                                        {\r\n                                            onChange: (e) => onImageChange(e),\r\n                                            validate: {\r\n                                                checkFileType: files => checkFileTypeAvatar(files) || `Ảnh đại diện chỉ nhận các file ${constImage.LIST_FILE_TYPE_AVATAR.join(\", \")}`,\r\n                                                checkFileSize: files => checkFileSizeAvatar(files) || \"Ảnh đại diện không vượt quá 5MB\"\r\n                                            }\r\n                                        }\r\n                                    )} />\r\n                                {errors.avatar?.message &&\r\n                                    <div className=\"input-value-error\">{errors.avatar?.message}</div>}\r\n                            </div>\r\n                            <img className=\"do-an-preview-image\" src={image}></img>\r\n                            <div className=\"do-an-title-avatar\">\r\n                                Ảnh đại diện\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                    <button id=\"do-an-form-create-user-button\" type=\"submit\" hidden={true}></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateUser;","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\confirm\\Confirm.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\button\\Button.js",[],"F:\\do_an_frontend\\app\\src\\redux\\action\\LoginAction.js",[],"F:\\do_an_frontend\\app\\src\\components\\manager\\get-detail-manager\\DetailManager.js",["425","426","427","428","429","430","431"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport \"./DetailManager.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faCircleInfo, faFileLines } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ConstAPI from '../../../common/const';\r\nimport ManagerAction from '../../../redux/action/ManagerAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst DetailManager = ({ detailManager }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const managerDetail = useSelector(state => state.managerReducer.detailManager)\r\n\r\n    useEffect(() => {\r\n        ManagerAction.getDetailManagerAction(dispatch, detailManager)\r\n    }, [detailManager])\r\n\r\n    return (\r\n        <div className='do-an__view-manager-container'>\r\n            <div className='do-an__view-manager-container__info'>\r\n                <div className='do-an__view-manager-container__info__group-info'>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Tên quản lý:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Mã người dùng:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.code}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Ngày sinh:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.date_of_birth}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Giới tính:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.gender}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Khóa:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.course}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='do-an__view-manager-container__info__group-info'>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Tên đại học:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.university}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Số điện thoại:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.phone}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Email:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.email}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Tài khoản:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.user_name}\r\n                        </div>\r\n                    </div>\r\n                    <div className='do-an__view-manager-container__info__row'>\r\n                        <div className='do-an__view-manager-container__info__row__title'>\r\n                            Ngày tạo:\r\n                        </div>\r\n                        <div className='do-an__view-manager-container__info__row__value'>\r\n                            {managerDetail?.created_time}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='do-an__view-manager-container__info__avatar'>\r\n                    <img className=\"do-an-preview-image\" src={`${ConstAPI.BASE_HOST_API}${managerDetail?.avatar}`}></img>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DetailManager;","F:\\do_an_frontend\\app\\src\\components\\manager\\create-manager\\CreateManager.js",["432","433","434","435","436","437","438"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './CreateManager.scss';\r\nimport image2 from '../../../share/image/123.jpg';\r\nimport ConstAPI from '../../../common/const';\r\nimport constImage from \"../../../common/constImage\";\r\nimport ManagerAction from \"../../../redux/action/ManagerAction\";\r\nimport DropDown from '../../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport { DatePicker } from 'antd';\r\n\r\nconst CreateManager = ({ onCloseModal }) => {\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(image2)\r\n    const filter = useSelector(state => state.managerReducer.paginationFilter)\r\n\r\n    const [formCreate, setFormCreate] = useState(\r\n        {\r\n            name: \"\",\r\n            date_of_birth: \"\",\r\n            gender: \"MALE\",\r\n            university: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n            user_name: \"\",\r\n            password: \"\",\r\n            role: \"MANAGER\",\r\n            avatar: null\r\n        }\r\n    )\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState([\r\n        {\r\n            title: \"Nam\",\r\n            value: \"MALE\"\r\n        },\r\n        {\r\n            title: \"Nữ\",\r\n            value: \"FEMALE\"\r\n        }\r\n    ])\r\n\r\n\r\n    const checkFileTypeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { type } = files[0];\r\n            return (constImage.LIST_FILE_TYPE_AVATAR.findIndex(item => `IMAGE/${item}` === type.toLocaleUpperCase()) > -1)\r\n        }\r\n        return true\r\n    }\r\n    const checkFileSizeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { size } = files[0];\r\n            return (size / 1024 / 1024 <= 5)\r\n        }\r\n        return true\r\n    }\r\n\r\n    const onImageChange = async (event) => {\r\n        if (event.target.files && event.target.files[0] && event.target.files[0]['type'].split('/')[0] === 'image') {\r\n            console.log(event.target.files);\r\n\r\n            setImage(URL.createObjectURL(event.target.files[0]));\r\n            handleChangeInput(\"avatar\", event.target.files[0])\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = (field, value) => {\r\n\r\n            let newFormData = {}\r\n            if (field === \"date_of_birth\") {\r\n                newFormData = { ...formCreate, [field]: value.format(\"YYYY-MM-DD\") }\r\n            } else {\r\n                newFormData = { ...formCreate, [field]: value };\r\n    \r\n            }\r\n            setFormCreate(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        ManagerAction.createManagerAction(formCreate, dispatch, filter)\r\n        onCloseModal()\r\n    }\r\n\r\n\r\n    return (\r\n        <form id=\"do-an-form-create-manager\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n            <div className=\"do-an-form-create-manager__body\">\r\n                <div className=\"do-an-form-create-manager__body__content\">\r\n                    <div className=\"do-an-form-create-manager__body__content__info\">\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Tên người dùng: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên người dùng không được trống!</div>}\r\n                                {errors.name?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên người dùng không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Giới tính: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <DropDown className=\"do-an-dropdown-create\"\r\n                                    listItem={listDefaultDropDown}\r\n                                    selected={formCreate.gender || listDefaultDropDown[0]?.value}\r\n                                    name=\"gender\"\r\n                                    onSelected={handleChangeInput}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Ngày sinh:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                {/* <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"date_of_birth\",\r\n                                        {\r\n                                            onChange: (e) => handleChangeInput(\"date_of_birth\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                /> */}\r\n                                <DatePicker\r\n                                placeholder=\"Ngày sinh\"\r\n                                    onChange={(e) => handleChangeInput(\"date_of_birth\", e)}\r\n                                >\r\n\r\n                                </DatePicker>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Sinh viên khóa: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"course\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 10,\r\n                                            onChange: (e) => handleChangeInput(\"course\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.course?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Niên khóa không được trống!</div>}\r\n                                {errors.course?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Biên khóa không được vượt quá 10 ký tự!</div>}\r\n                            </div>\r\n                        </div> */}\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Đại học: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"university\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"university\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                               {errors.university?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học không được trống!</div>}\r\n                                {errors.university?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Số điện thoại: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"phone\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 10,\r\n                                            onChange: (e) => handleChangeInput(\"phone\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                    type=\"number\"\r\n                                />\r\n                                {errors.phone?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Số điện thoại không được trống!</div>}\r\n                                {errors.phone?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Số điện thoại không được vượt quá 10 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Email: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"email\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"email\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.email?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên email không được trống!</div>}\r\n                                {errors.email?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên email không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Tên tài khoản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"user_name\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 50,\r\n                                            onChange: (e) => handleChangeInput(\"user_name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.user_name?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên tài khoản không được trống!</div>}\r\n                                {errors.user_name?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên tài khoản không được vượt quá 50 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-manager__body__group-input\">\r\n                            <div className=\"do-an-form-create-manager__body__group-input__key\">\r\n                                <span>Mật khẩu: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-manager__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"password\",\r\n                                        {\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"password\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                    type=\"password\"\r\n                                />\r\n                                {errors.password?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Mật khẩu không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"do-an-form-create-manager__body__content__avatar\">\r\n                        <div className=\"do-an-form-create-manager__body__group-input__input-add-image\">\r\n                            <div>\r\n                                <input type=\"file\" accept=\"image/*\" className={`ocr-designer-input-add-image ${errors.image ? 'is-invalid' : ''}`}\r\n                                    {...register(\"avatar\",\r\n                                        {\r\n                                            onChange: (e) => onImageChange(e),\r\n                                            validate: {\r\n                                                checkFileType: files => checkFileTypeAvatar(files) || `Ảnh đại diện chỉ nhận các file ${constImage.LIST_FILE_TYPE_AVATAR.join(\", \")}`,\r\n                                                checkFileSize: files => checkFileSizeAvatar(files) || \"Ảnh đại diện không vượt quá 5MB\"\r\n                                            }\r\n                                        }\r\n                                    )} />\r\n                                {errors.avatar?.message &&\r\n                                    <div className=\"input-value-error\">{errors.avatar?.message}</div>}\r\n                            </div>\r\n                            <img className=\"do-an-preview-image\" src={image}></img>\r\n                            <div className=\"do-an-title-avatar\">\r\n                                Ảnh đại diện\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                    <button id=\"do-an-form-create-manager-button\" type=\"submit\" hidden={true}></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateManager;","F:\\do_an_frontend\\app\\src\\components\\books\\components\\update_books\\UpdateBooks.js",["439","440","441"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './UpdateBooks.scss';\r\nimport image2 from '../../../../share/image/123.jpg';\r\nimport ConstAPI from '../../../../common/const';\r\nimport constImage from \"../../../../common/constImage\";\r\nimport BooksAction from \"../../../../redux/action/BooksAction\";\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport GroupsAction from \"../../../../redux/action/GroupsAction\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst UpdateBooks = ({ onCloseModal , codeBooks}) => {\r\n\r\n    const paginationFilter = {\r\n        page: 1,\r\n        size: 20,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    }\r\n\r\n    const { register, setValue, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n    const dispatch = useDispatch()\r\n    const [image, setImage] = useState(image2)\r\n    const filter = useSelector(state => state.booksReducer.paginationFilter)\r\n    const listGroups = useSelector(state => state.groupsReducer.listGroups)\r\n    const booksDetail = useSelector(state => state.booksReducer.detailBooks)\r\n\r\n    const { code } = useParams()\r\n\r\n    useEffect(() => {\r\n        if(codeBooks === null || codeBooks === undefined){\r\n            BooksAction.getDetailBooksAction(dispatch, code)\r\n        }else{\r\n            BooksAction.getDetailBooksAction(dispatch, codeBooks)\r\n        }\r\n        GroupsAction.getListGroupsAction(dispatch, paginationFilter)\r\n    }, [])\r\n\r\n    const [formUpdateBooks, setFormUpdateBooks] = useState({})\r\n\r\n    useEffect(() => {\r\n        setValue(\"name\", booksDetail?.name)\r\n        setValue(\"description\", booksDetail?.description)\r\n        setValue(\"title\", booksDetail?.title)\r\n        setValue(\"author\", booksDetail?.author)\r\n        setValue(\"name_university\", booksDetail?.name_university)\r\n        setValue(\"publishing_year\", booksDetail?.publishing_year)\r\n        setValue(\"origin\", booksDetail?.origin)\r\n        setValue(\"group_code\", booksDetail?.group_code)\r\n        setImage(`${ConstAPI.BASE_HOST_API}${booksDetail?.avatar}`)\r\n        setFormUpdateBooks({\r\n            \"name\": booksDetail?.name,\r\n            \"description\": booksDetail?.description,\r\n            \"title\": booksDetail?.title,\r\n            \"author\": booksDetail?.author,\r\n            \"name_university\": booksDetail?.name_university,\r\n            \"publishing_year\": booksDetail?.publishing_year,\r\n            \"origin\": booksDetail?.origin,\r\n            \"group_code\": booksDetail?.group_code,\r\n        })\r\n    }, [booksDetail])\r\n\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState([])\r\n\r\n    useEffect(() => {\r\n        let listGrgoupsDropDown = listGroups.map((item) => {\r\n            return {\r\n                title: item?.group_name,\r\n                value: item?.group_code\r\n            }\r\n        })\r\n        setListDefaultDropDown([...listGrgoupsDropDown])\r\n    }, [listGroups])\r\n\r\n    const checkFileTypeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { type } = files[0];\r\n            return (constImage.LIST_FILE_TYPE_AVATAR.findIndex(item => `IMAGE/${item}` === type.toLocaleUpperCase()) > -1)\r\n        }\r\n        return true\r\n    }\r\n    const checkFileSizeAvatar = (files) => {\r\n        const { length } = files;\r\n        if (length > 0) {\r\n            const { size } = files[0];\r\n            return (size / 1024 / 1024 <= 5)\r\n        }\r\n        return true\r\n    }\r\n\r\n    const onImageChange = async (event) => {\r\n        if (event.target.files && event.target.files[0] && event.target.files[0]['type'].split('/')[0] === 'image') {\r\n            console.log(event.target.files);\r\n\r\n            setImage(URL.createObjectURL(event.target.files[0]));\r\n            handleChangeInput(\"avatar\", event.target.files[0])\r\n        }\r\n    }\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        const newFormData = { ...formUpdateBooks, [field]: value };\r\n        setFormUpdateBooks(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        if(codeBooks === null || codeBooks === undefined){\r\n            BooksAction.updateBooksAction(dispatch, code, formUpdateBooks)\r\n        }else{\r\n            BooksAction.updateBooksAction(dispatch, codeBooks, formUpdateBooks)\r\n        }\r\n        BooksAction.getListBooksAction(dispatch, filter)\r\n        onCloseModal()\r\n    }\r\n\r\n    return (\r\n        <form id=\"do-an-form-update-books\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n            <div className=\"do-an-form-update-books__body\">\r\n                {/* <div className=\"do-an-form-update-books__body__title\">\r\n                    Thông tin:\r\n                </div> */}\r\n\r\n                <div className=\"do-an-form-update-books__body__content\">\r\n                    <div className=\"do-an-form-update-books__body__content__info\">\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Tên Sách: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên sách không được trống!</div>}\r\n                                {errors.name?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Thể loại: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <DropDown className=\"do-an-dropdown-update\"\r\n                                    listItem={listDefaultDropDown}\r\n                                    selected={formUpdateBooks.group_code || listDefaultDropDown[0]?.value}\r\n                                    name=\"group_code\"\r\n                                    onSelected={handleChangeInput}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Mô tả:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"description\",\r\n                                        {\r\n                                            maxLength: 500,\r\n                                            onChange: (e) => handleChangeInput(\"description\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.description?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Mô tả sách không được vượt quá 500 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Tiêu đề: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"title\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"title\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.title?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tiêu đề sách không được trống!</div>}\r\n                                {errors.title?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tiêu đề sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Tác giả: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"author\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"author\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.author?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tác giả sách không được trống!</div>}\r\n                                {errors.author?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tác giả sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Thuộc đại học: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"name_university\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"name_university\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name_university?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học sở hữu sách không được trống!</div>}\r\n                                {errors.name_university?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên đại học sở hữu sách không được trống!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Năm xuất bản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name input-number ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"publishing_year\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 4,\r\n                                            onChange: (e) => handleChangeInput(\"publishing_year\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.publishing_year?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Năm xuất bản sách không được trống!</div>}\r\n                                {errors.publishing_year?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Năm xuất bản sách không được vượt quá 4 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-books__body__group-input\">\r\n                            <div className=\"do-an-form-update-books__body__group-input__key\">\r\n                                <span>Nhà xuất bản: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-books__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"origin\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"origin\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.author?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Nhà xuất bản sách không được trống!</div>}\r\n                                {errors.origin?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Nhà xuất bản sách không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an-form-update-books__body__content__avatar\">\r\n                        <div className=\"do-an-form-update-books__body__group-input__input-add-image\">\r\n                            <div>\r\n                                <input type=\"file\" accept=\"image/*\" className={`ocr-designer-input-add-image ${errors.image ? 'is-invalid' : ''}`}\r\n                                    {...register(\"avatar\",\r\n                                        {\r\n                                            onChange: (e) => onImageChange(e),\r\n                                            validate: {\r\n                                                checkFileType: files => checkFileTypeAvatar(files) || `Ảnh đại diện chỉ nhận các file ${constImage.LIST_FILE_TYPE_AVATAR.join(\", \")}`,\r\n                                                checkFileSize: files => checkFileSizeAvatar(files) || \"Ảnh đại diện không vượt quá 5MB\"\r\n                                            }\r\n                                        }\r\n                                    )} />\r\n                                {/* {errors.avatar?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Ảnh sách không được trống!</div>} */}\r\n                                {errors.avatar?.message &&\r\n                                    <div className=\"input-value-error\">{errors.avatar?.message}</div>}\r\n                            </div>\r\n                            <img className=\"do-an-preview-image\" src={image}></img>\r\n                            <div className=\"do-an-title-avatar\">\r\n                                Ảnh đại diện\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button id=\"do-an-form-update-books-button\" type=\"submit\" hidden={true}></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UpdateBooks;","F:\\do_an_frontend\\app\\src\\components\\voucher\\components\\user_voucher\\UserPageVoucher.js",["442","443","444","445","446","447","448","449","450","451"],"import React, { useEffect, useState } from 'react';\r\nimport './UserPageVoucher.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faFilter, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataTable from \"../../../../share/ecm-base/components/data-table/DataTable\";\r\nimport UserAction from \"../../../../redux/action/UserAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useSearchParams, Link } from 'react-router-dom';\r\nimport DropDown from '../../../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport ConstAPI from '../../../../common/const';\r\n\r\nconst UserPageVoucher = ({ prefixPath, handleSelectUser }) => {\r\n\r\n\r\n    const columnUser = [\r\n        {\r\n            title: \"Mã người dùng\",\r\n            dataIndex: \"code\",\r\n            render: (text) => {\r\n                return <span \r\n                onClick={() => handleSelectUser(text)}\r\n                style={{textDecoration:\"underline\", color:\"#141ed2\", cursor:\"pointer\"}}>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên người dùng\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ngày sinh\",\r\n            dataIndex: \"date_of_birth\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Giới tính\",\r\n            dataIndex: \"gender\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Khóa\",\r\n            dataIndex: \"course\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            dataIndex: \"created_time\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <img style={{ width: \"40px\" }} src={`${ConstAPI.BASE_HOST_API}${text}`}></img> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n    ]\r\n\r\n    let listOrder = [\r\n        {\r\n            title: \"Tăng dần\",\r\n            value: 1\r\n        },\r\n        {\r\n            title: \"Giảm dần\",\r\n            value: -1\r\n        },\r\n    ]\r\n\r\n    let listOrderBy = [\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            value: \"created_time\"\r\n        },\r\n        {\r\n            title: \"Thời gian sửa\",\r\n            value: \"modified_time\"\r\n        },\r\n        {\r\n            title: \"Tên\",\r\n            value: \"name\"\r\n        },\r\n    ]\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listUser = useSelector(state => state.userReducer.listUser)\r\n    const filter = useSelector(state => state.userReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.userReducer.pagination)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // let urlParams = { ...initPagingFilter }\r\n        // if (searchParams.get('name')) {\r\n        //     urlParams[\"name\"] = searchParams.get('name')\r\n        // }\r\n        // if (searchParams.get('code')) {\r\n        //     urlParams[\"code\"] = searchParams.get('code')\r\n        // }\r\n        // if (searchParams.get('page')) {\r\n        //     urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        // }\r\n        // if (searchParams.get('size')) {\r\n        //     urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        // }\r\n        // if (searchParams.get('order_by')) {\r\n        //     urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        // }\r\n        // if (searchParams.get('order')) {\r\n        //     urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        // }\r\n\r\n        // setSearchParams(urlParams)\r\n        UserAction.updateUserFilterAction(dispatch, initPagingFilter)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            page: initPagingFilter.page,\r\n            size: initPagingFilter.size\r\n        })\r\n        UserAction.getListUserAction(dispatch, initPagingFilter)\r\n    }, [])\r\n\r\n\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter ,[field]: value }\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleChangeDropdownSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter ,[field]: value }\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n        UserAction.getListUserAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        UserAction.getListUserAction(dispatch, filter)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        // setSearchParams(newSearchFilter)\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        UserAction.getListUserAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        // setSearchParams(newSearchFilter)\r\n        UserAction.updateUserFilterAction(dispatch, newSearchFilter)\r\n        UserAction.updateUserPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        UserAction.getListUserAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            handleSearch()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"do-an__user\">\r\n            <div className=\"do-an__user__image-cover\">\r\n                {/* <img className=\"image-cover\" src={imageCover}></img> */}\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh sách người dùng</h3>\r\n            </div>\r\n            <div className=\"do-an__user__group-search\">\r\n                <div className=\"do-an__user__group-search__filter\">\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Tên người dùng:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <input className=\"do-an__user__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"name\", event.target.value)}\r\n                                value={filter?.name || \"\"}\r\n                                onKeyDown={(event) => handleKeyDown(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Mã người dùng:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <input className=\"do-an__user__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"code\", event.target.value)}\r\n                                value={filter?.code || \"\"}\r\n                                onKeyDown={(event) => handleKeyDown(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Sắp xếp theo:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__user__group-search__item__input\"\r\n                                listItem={listOrderBy}\r\n                                selected={filter?.order_by || \"created_time\"}\r\n                                name=\"order_by\"\r\n                                onSelected={handleChangeDropdownSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__user__group-search__item\">\r\n                        <div className=\"do-an__user__group-search__item__title\">\r\n                            Thứ tự:\r\n                        </div>\r\n                        <div className=\"do-an__user__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__user__group-search__item__input\"\r\n                                listItem={listOrder}\r\n                                selected={filter?.order || -1}\r\n                                name=\"order\"\r\n                                onSelected={handleChangeDropdownSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__user__group-search__button-search\">\r\n                    <button className=\"button-search\" onClick={handleSearch}>Tìm kiếm</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"do-an__user__group-table\">\r\n                <div className=\"do-an__user__group-table__table-data\">\r\n                    <DataTable headerData={columnUser}\r\n                        tableData={listUser}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        pagination={pagination}\r\n                        onPageChange={handleNumberPagehange}\r\n                    >\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPageVoucher;","F:\\do_an_frontend\\app\\src\\redux\\service\\VoucherService.js",["452","453"],"import { data, param } from 'jquery';\r\nimport {axiosClient} from '../../common/http-commons';\r\nimport Utils from '../../common/utils';\r\n\r\nconst VoucherService = {\r\n    getList : (paging) => {\r\n        try {\r\n            // Get data with default\r\n            if (!Utils.isNotNullOrUndefined(paging)) {\r\n                return axiosClient.get(\r\n                    process.env.REACT_APP_GET_LIST_AND_CREATE_VOUCHER\r\n                );\r\n                // Get data with parameters\r\n            } else {\r\n                return axiosClient.get(\r\n                    process.env.REACT_APP_GET_LIST_AND_CREATE_VOUCHER,\r\n                    { params: paging }\r\n                );\r\n            }\r\n        } catch (error) {\r\n            console.log(\"[Voucher - Get list]\", error);\r\n        }\r\n    },\r\n\r\n    create: (formDataVoucher) => {\r\n        try {\r\n            return axiosClient.post(process.env.REACT_APP_GET_LIST_AND_CREATE_VOUCHER, formDataVoucher)\r\n                // { headers: { \"Content-Type\": \"multipart/form-data\" } });\r\n        } catch (error) {\r\n            console.log(\"[BookVoucherService - create]\", error);\r\n        }\r\n    },\r\n\r\n    getDetail: (voucher_id) => {\r\n        try {\r\n            // Get data with default\r\n                return axiosClient.get(\r\n                    process.env.REACT_APP_RUD_VOUCHER.replace('{voucher_id}', voucher_id)\r\n                );\r\n        } catch (error) {\r\n            console.log(\"[BookVoucherService - Get detail]\", error);\r\n        }\r\n    },\r\n\r\n    updateVoucher: (voucher_id, formDataVoucher) => {\r\n        try {\r\n            // Get data with default\r\n                return axiosClient.put(\r\n                    process.env.REACT_APP_RUD_VOUCHER.replace('{voucher_id}', voucher_id), formDataVoucher\r\n                );\r\n        } catch (error) {\r\n            console.log(\"[VoucherService - Update voucher]\", error);\r\n        }\r\n    },\r\n\r\n    // ------------------------------------------------------------------------------------------------------------\r\n    remove: (voucher_id) => {\r\n        try {\r\n            return axiosClient.delete(\r\n                process.env.REACT_APP_RUD_VOUCHER.replace(\"{voucher_id}\", voucher_id)\r\n            )\r\n        } catch (error) {\r\n            console.log(\"VoucherService || Delete || Cause by \", error)\r\n        }\r\n    },\r\n    // ------------------------------------------------------------------------------------------------------------\r\n    updateStatus: (voucher_id, status_update) => {\r\n        console.log(status_update);\r\n        const formUpdate = {\r\n            \"status_update\" : status_update\r\n        }\r\n        try {\r\n            if (!Utils.isNotNullOrUndefined(status_update)) {\r\n                return  axiosClient.put(\r\n                    process.env.REACT_APP_UPDATE_STATUS_VOUCHER.replace(\"{voucher_id}\", voucher_id)\r\n                )\r\n                // Get data with parameters\r\n            } else {\r\n            return axiosClient.put(\r\n                process.env.REACT_APP_UPDATE_STATUS_VOUCHER.replace(\"{voucher_id}\", voucher_id),\r\n                formUpdate\r\n            )\r\n            }\r\n        } catch (error) {\r\n            console.log(\"VoucherService || Update status || Cause by \", error)\r\n        }\r\n    },\r\n\r\n     getChart: (paging) => {\r\n        try {\r\n            // Get data with default\r\n                return axiosClient.get(\r\n                    process.env.REACT_APP_GET_CHART, {params: paging}\r\n                );\r\n        } catch (error) {\r\n            console.log(\"[VoucherService - Get chart]\", error);\r\n        }\r\n     }\r\n}\r\n\r\nexport default VoucherService;","F:\\do_an_frontend\\app\\src\\redux\\service\\BooksService.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\GroupsService.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\UserService.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\commonService.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\ManagerService.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\pagination\\Pagination.js",["454","455"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Pagination.scss'\r\nimport Toasts from '../toasts/Toasts';\r\nimport DropDown from '../dropdown/DropDown';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Pagination = ({ pagination, onPageChange, onNumberItemChange, placement =\"top\" }) => {\r\n\r\n    const refContainer = useRef(null)\r\n    if (!pagination) {\r\n        pagination = {\r\n            page: 0,\r\n            size: 0,\r\n            totalPage: 0,\r\n            totalItem: 0,\r\n        }\r\n    }\r\n    const { page, size, totalPage, totalItem } = pagination;\r\n\r\n    const numberOfPages = []\r\n    for (let i = 1; i <= totalPage; i++) {\r\n        numberOfPages.push(i)\r\n    }\r\n\r\n    const [valueGo, setValueGo] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(page)\r\n    const [arrOfCurrentPage, setArrOfCurrentPage] = useState([])\r\n    const [toastList, setToastList] = useState([])\r\n    const [numberShow, setNumberShow] = useState(size)\r\n    const [showTotal, setShowTotal] = useState(true)\r\n    let toastProperties = null\r\n\r\n    useEffect(() => {\r\n        const widthPagination = refContainer.current.clientWidth\r\n        if(widthPagination && widthPagination <= 600){\r\n            setShowTotal(false)\r\n        }else {\r\n            setShowTotal(true)\r\n        }\r\n      }, [refContainer])\r\n\r\n    useEffect(() => {\r\n        setNumberShow(size)\r\n    }, [size])\r\n\r\n    const showToast = (type, title, message) => {\r\n        toastProperties = {\r\n            id: toastList.length + 1,\r\n            type: type,\r\n            title: title,\r\n            message: message\r\n        }\r\n        setToastList([...toastList, toastProperties])\r\n    }\r\n\r\n    const listNumberShow = [\r\n       5, 10, 20, 50\r\n    ]\r\n\r\n    const leftDots = '... '\r\n    const midDots = '...'\r\n    const rightDots = ' ...'\r\n\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(pagination.page)\r\n        let tempNumberOfPage = [...arrOfCurrentPage]\r\n\r\n        if (numberOfPages.length <= 4 && !showTotal) {\r\n            tempNumberOfPage = numberOfPages\r\n        }else\r\n        if (numberOfPages.length <= 8 && showTotal) {\r\n            tempNumberOfPage = numberOfPages\r\n        }\r\n        else if (currentPage >= 1 && currentPage <= 4 && showTotal) {\r\n            tempNumberOfPage = [1, 2, 3, 4 , 5, midDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage >= 1 && currentPage <= 3 && !showTotal) {\r\n            tempNumberOfPage = [1, 2, 3, midDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage > 4 && currentPage < numberOfPages.length - 2 && showTotal) {\r\n            const sliceLeft = numberOfPages.slice(currentPage - 2, currentPage)\r\n            const sliceRight = numberOfPages.slice(currentPage, currentPage + 1)\r\n            tempNumberOfPage = [1, leftDots, ...sliceLeft, ...sliceRight, rightDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage >= 4 && currentPage < numberOfPages.length - 2 && !showTotal) {\r\n            const sliceLeft = numberOfPages.slice(currentPage - 2, currentPage)\r\n            tempNumberOfPage = [1, leftDots, ...sliceLeft, rightDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage > numberOfPages.length - 3 && showTotal) {\r\n            const slice = numberOfPages.slice(numberOfPages.length - 5, numberOfPages.length)\r\n            tempNumberOfPage = [1, leftDots, ...slice]\r\n        }\r\n        else if (currentPage > numberOfPages.length - 3 && !showTotal) {\r\n            const slice = numberOfPages.slice(numberOfPages.length - 3, numberOfPages.length)\r\n            tempNumberOfPage = [1, leftDots, ...slice]\r\n        }\r\n        else if (currentPage === midDots) {\r\n            setCurrentPage(arrOfCurrentPage[arrOfCurrentPage.length - 3] + 1)\r\n        }\r\n        else if (currentPage === rightDots) {\r\n            setCurrentPage(arrOfCurrentPage[3] + 2)\r\n        }\r\n        else if (currentPage === leftDots) {\r\n            setCurrentPage(arrOfCurrentPage[3] - 2)\r\n        }\r\n        setArrOfCurrentPage(tempNumberOfPage)\r\n    }, [currentPage, pagination])\r\n\r\n    function handlePageChange(newPage) {\r\n        setCurrentPage(newPage)\r\n        if (newPage === midDots) {\r\n            newPage = arrOfCurrentPage[arrOfCurrentPage.length - 3] + 1\r\n        }\r\n        else if (newPage === rightDots) {\r\n            newPage = arrOfCurrentPage[3] + 2\r\n        }\r\n        else if (newPage === leftDots) {\r\n            newPage = arrOfCurrentPage[3] - 2\r\n        }\r\n        onPageChange(newPage)\r\n    }\r\n\r\n    function handleGo(event) {\r\n        if (event.key == 'Enter') {\r\n            let regex = /^[0-9]+$/\r\n            let value = event.target.value\r\n            if (value.match(regex)) {\r\n                if (value <= 0) {\r\n                    showToast(\"warning\", \"Cảnh báo\", \"Số trang phải lơn hơn 0!\")\r\n                } else if (value <= numberOfPages.length) {\r\n                    handlePageChange(Number(value))\r\n                }\r\n                else {\r\n                    showToast(\"warning\", \"Cảnh báo\", \"Số trang này không tồn tại!\")\r\n                }\r\n            }\r\n            else {\r\n                showToast(\"warning\", \"Cảnh báo\", \"Xin vui lòng nhập số!\")\r\n            }\r\n            setValueGo('')\r\n        }\r\n    }\r\n\r\n    function handleChangeInput(event) {\r\n        setValueGo(event.target.value)\r\n    }\r\n\r\n    function handleChangeNumberShow(_name, value) {\r\n        const numberTotalPage = totalItem/value\r\n        const numberTotalPageFixed = Math.floor(numberTotalPage) || 0\r\n        const newTotalPage = numberTotalPage > numberTotalPageFixed ? numberTotalPageFixed + 1 : numberTotalPageFixed\r\n        const newPage = page <= newTotalPage ? page: newTotalPage\r\n        setNumberShow(value)\r\n        onNumberItemChange(value, newPage || 1)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='paginition-container' ref={refContainer}>\r\n            <div className={`info ${showTotal ? null: \"paginition-container__info-view-small\"}`}>\r\n                {showTotal && <div className='info__item'>\r\n                    Hiển thị {totalItem > 0 ? (page - 1) * size + 1 : 0}-\r\n                    {((page - 1) * size + size) < totalItem ? ((page - 1) * size + size) : totalItem} của {totalItem}\r\n                </div>\r\n                }\r\n                <DropDown\r\n                    selected={numberShow}\r\n                    listItem={listNumberShow}\r\n                    onSelected={handleChangeNumberShow}\r\n                    placement={placement}\r\n\r\n                    className=\"info__drop-down info__item\"\r\n                ></DropDown>\r\n            </div>\r\n            <div className={`handle-box ${showTotal ? null: \"paginition-container__handle-box-view-small\"}`}>\r\n                <div className='buttons'>\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={currentPage === 1 || totalPage ===0? true : false}\r\n                        className='button btn-pre-page'\r\n                        onClick={() => handlePageChange(currentPage - 1)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faAngleLeft} />\r\n                    </button>\r\n                    {arrOfCurrentPage.map((pageItem, index) => {\r\n                        return (\r\n                            <button\r\n                                type=\"button\"\r\n                                key={index}\r\n                                className={'button' + ((pageItem === currentPage) ? ' button-active' : '')}\r\n                                onClick={() => handlePageChange(pageItem)}\r\n                            >{pageItem}\r\n                            </button>\r\n                        )\r\n                    })}\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={(currentPage === totalPage || totalPage === 0) ? true : false}\r\n                        className='button btn-next-page'\r\n                        onClick={() => handlePageChange(currentPage + 1)}>\r\n                        <FontAwesomeIcon icon={faAngleRight} />\r\n                    </button>\r\n                </div>\r\n                <div className='jump'>\r\n                    <span>Đến:</span>\r\n                    <input disabled={totalPage === 0} onKeyDown={handleGo} type=\"number\" min=\"1\" value={valueGo} onChange={handleChangeInput}></input>\r\n                </div>\r\n            </div>\r\n            <Toasts toastList={toastList} setList={setToastList}></Toasts>\r\n        </div>\r\n    )\r\n}\r\n\r\nPagination.propTypes = {\r\n    pagination: PropTypes.object.isRequired,\r\n    onPageChange: PropTypes.func,\r\n    onNumberItemChange: PropTypes.func,\r\n    placement: PropTypes.string\r\n}\r\n\r\nPagination.defaultProps = {\r\n    onPageChange: null,\r\n}\r\n\r\nexport default Pagination","F:\\do_an_frontend\\app\\src\\common\\http-commons.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\BookService.js",[],"F:\\do_an_frontend\\app\\src\\common\\constImage.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown\\DropDown.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\sidebar\\SideBar.js",[],["456","457"],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\menu\\Menu.js",[],["458","459"],"F:\\do_an_frontend\\app\\src\\components\\group\\GroupPage.js",["460","461"],"import React, { useEffect, useState } from 'react';\r\nimport DataTable from '../../share/ecm-base/components/data-table/DataTable';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ListButton, ListButtonUser } from '../../common/utils';\r\nimport './GroupPage.scss';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport GroupsAction from '../../redux/action/GroupsAction';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport Modal from '../../share/ecm-base/components/modal/Modal';\r\nimport CreateGroup from './create_group/CreateGroup';\r\nimport Button from '../../share/ecm-base/components/button/Button';\r\nimport UpdateGroup from './update_group/UpdateGroup';\r\nimport Confirm from '../../share/ecm-base/components/confirm/Confirm';\r\n\r\nvar initPagingFilter = {\r\n    page: 1,\r\n    size: 10,\r\n    order_by: \"created_time\",\r\n    order: -1,\r\n};\r\n\r\nconst GroupPage = ({ prefixPath }) => {\r\n\r\n    const columnGroup = [\r\n        {\r\n            title: \"Mã thể loại\",\r\n            dataIndex: \"group_code\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên thể loại\",\r\n            dataIndex: \"group_name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Mô tả thể loại\",\r\n            dataIndex: \"description\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Thao tác\",\r\n            dataIndex: \"group_code\",\r\n            render: (text, index) => {\r\n                return (\r\n                    <ListButton\r\n                        onRemoveAction={() => {handleDeleteGroup(text)}}\r\n                        removeButtonName=\"btnDeleteUser\"\r\n                        onEditAction={() => {handleOpenUpdate(index)}}\r\n                    ></ListButton>\r\n                );\r\n            },\r\n            width: \"15%\"\r\n        }\r\n    ]\r\n\r\n    const listGroup = useSelector(state => state.groupsReducer.listGroups)\r\n    const filter = useSelector(state => state.groupsReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.groupsReducer.pagination)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n\r\n    const [openModalCreate, setOpenModalCreate] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        let urlParams = { ...initPagingFilter }\r\n        if (searchParams.get('group_name')) {\r\n            urlParams[\"group_name\"] = searchParams.get('group_name')\r\n        }\r\n        if (searchParams.get('page')) {\r\n            urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        }\r\n        if (searchParams.get('size')) {\r\n            urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        }\r\n        if (searchParams.get('order_by')) {\r\n            urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        }\r\n        if (searchParams.get('order')) {\r\n            urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        }\r\n        setSearchParams(urlParams)\r\n        GroupsAction.updateGroupFilterAction(dispatch, urlParams)\r\n        GroupsAction.updateGroupPagination(dispatch, {\r\n            ...pagination,\r\n            page: urlParams.page,\r\n            size: urlParams.size\r\n        })\r\n        GroupsAction.getListGroupsAction(dispatch, urlParams)\r\n    }, [])\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        GroupsAction.updateGroupFilterAction(dispatch, newSearchFilter)\r\n        GroupsAction.updateGroupPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        GroupsAction.getListGroupsAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        GroupsAction.updateGroupFilterAction(dispatch, newSearchFilter)\r\n        GroupsAction.updateGroupPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        GroupsAction.getListGroupsAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter, [field]: value }\r\n\r\n        GroupsAction.updateGroupFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        GroupsAction.getListGroupsAction(dispatch, filter)\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            handleSearch()\r\n        }\r\n    }\r\n\r\n    const handleOpenCreate = () => {\r\n        setOpenModalCreate(true)\r\n    }\r\n\r\n    const handleCancelCreate = () => {\r\n        setOpenModalCreate(false)\r\n    }\r\n\r\n    const onSubmitFormCreate = () => {\r\n        document.getElementById(\"do-an-form-create-group-button\").click();\r\n    }\r\n\r\n    const [openModalUpdate, setOpenModalUpdate] = useState(false);\r\n    const [dataUpdate, setDataUpdate] = useState({});\r\n    \r\n    const handleOpenUpdate = (index) => {\r\n        setOpenModalUpdate(true)\r\n        setDataUpdate(index)\r\n    }\r\n\r\n    const handleCancelUpdate = () => {\r\n        setOpenModalUpdate(false)\r\n    }\r\n\r\n    const onSubmitFormUpdate = () => {\r\n        document.getElementById(\"do-an-form-update-group-button\").click();\r\n    }\r\n\r\n    const [isOpenConfirmDialog, setIsOpenConfirmDialog] = useState(false);\r\n    const [codeGroupDelete, setCodeGroupsDelete] = useState(null);\r\n\r\n    const handleDeleteGroup = (code) => {\r\n        console.log(code);\r\n        setCodeGroupsDelete(code)\r\n        setIsOpenConfirmDialog(true)\r\n    }\r\n\r\n    const handleCancelConfirmDialog = () => {\r\n        setCodeGroupsDelete(null)\r\n        setIsOpenConfirmDialog(false)\r\n    }\r\n\r\n    const handleDeleteConfirmDialog = () => {\r\n        GroupsAction.removeGroup(dispatch, codeGroupDelete, filter)\r\n        handleCancelConfirmDialog()\r\n    }\r\n    return (\r\n        <div className='do-an__group'>\r\n            <div className=\"do-an__group__header\">\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh sách thể loại</h3>\r\n            </div>\r\n\r\n            <div className=\"do-an__group__group-table\">\r\n                <div className=\"do-an__group__group-table__title\">\r\n                    <div className='do-an__group__group-table__title__group-search'>\r\n                        <div className='do-an__group__group-table__title__group-search__input-group'>\r\n                            <span className='do-an__group__group-table__title__group-search__input-group__span'>Tên thể loại:</span>\r\n                            <input className='do-an__group__group-table__title__group-search__input-group__input do-an__input'\r\n                                onChange={(event) => handleChangeInputSearch(\"group_name\", event.target.value)}\r\n                                onKeyDown={(event) => handleKeyDown(event)}\r\n                                value={filter?.group_name || \"\"}\r\n                            ></input>\r\n                        </div>\r\n                        <div className='button-search-group'>\r\n                            <FontAwesomeIcon icon={faSearch}\r\n                                onClick={(event) => handleSearch()}\r\n                            ></FontAwesomeIcon>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"button-create-new\" onClick={handleOpenCreate}>Thêm mới</button>\r\n                </div>\r\n                <div className=\"do-an__group__group-table__table-data\">\r\n                    <DataTable headerData={columnGroup}\r\n                        tableData={listGroup}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        pagination={pagination}\r\n                        onPageChange={handleNumberPagehange}\r\n                    >\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n\r\n            {openModalCreate &&\r\n                <Modal\r\n                    title=\"Tạo mới thể loại\"\r\n                    width=\"50%\"\r\n                    onCancel={handleCancelCreate}\r\n                    visible={openModalCreate}\r\n                    footer={\r\n                        <div className='do-an__modal__footer'>\r\n                            <Button\r\n                                type={\"normal-green\"}\r\n                                onClick={onSubmitFormCreate}\r\n                            >\r\n                                Tạo mới\r\n                            </Button>\r\n                            <Button\r\n                                type={\"normal-gray\"}\r\n                                onClick={handleCancelCreate}\r\n                            >\r\n                                Hủy bỏ\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <CreateGroup onCloseModal={handleCancelCreate}></CreateGroup>\r\n                </Modal>\r\n            }\r\n\r\n            {openModalUpdate &&\r\n                <Modal\r\n                    title=\"Cập nhật thể loại\"\r\n                    width=\"50%\"\r\n                    onCancel={handleCancelUpdate}\r\n                    visible={openModalUpdate}\r\n                    footer={\r\n                        <div className='do-an__modal__footer'>\r\n                            <Button\r\n                                type={\"normal-blue\"}\r\n                                onClick={onSubmitFormUpdate}\r\n                            >\r\n                                Tạo mới\r\n                            </Button>\r\n                            <Button\r\n                                type={\"normal-gray\"}\r\n                                onClick={handleCancelUpdate}\r\n                            >\r\n                                Hủy bỏ\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <UpdateGroup dataUpdate={dataUpdate} onCloseModal={handleCancelUpdate}></UpdateGroup>\r\n                </Modal>\r\n            }\r\n\r\n            <Confirm\r\n                title=\"Xoá thể loại\"\r\n                width=\"45%\"\r\n                visible={isOpenConfirmDialog}\r\n                onCancel={handleCancelConfirmDialog}\r\n                onOk={handleDeleteConfirmDialog}\r\n            >\r\n                <p>Xác nhận xóa thể loại {codeGroupDelete}?</p>\r\n            </Confirm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupPage;","F:\\do_an_frontend\\app\\src\\components\\group\\create_group\\CreateGroup.js",["462","463"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './CreateGroup.scss';\r\n\r\nimport GroupsAction from \"../../../redux/action/GroupsAction\";\r\nimport { openNotificationCommon } from \"../../../common/const\";\r\n\r\nconst CreateGroup = ({ onCloseModal }) => {\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n    const dispatch = useDispatch()\r\n    const filter = useSelector(state => state.groupsReducer.paginationFilter)\r\n\r\n    const [formCreate, setFormCreate] = useState(\r\n        {\r\n            group_code: \"\",\r\n            group_name: \"\",\r\n            description: \"\",\r\n        }\r\n    )\r\n\r\n\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        let newFormData = {}\r\n        newFormData = { ...formCreate, [field]: value };\r\n\r\n        setFormCreate(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        GroupsAction.createGroupAction(formCreate, dispatch, filter).then(response => {\r\n            if (response === true) {\r\n                onCloseModal()\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form id=\"do-an-form-create-group\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n            <div className=\"do-an-form-create-group__body\">\r\n                <div className=\"do-an-form-create-group__body__content\">\r\n                    <div className=\"do-an-form-create-group__body__content__info\">\r\n                        <div className=\"do-an-form-create-group__body__group-input\">\r\n                            <div className=\"do-an-form-create-group__body__group-input__key\">\r\n                                <span>Tên thể loại: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-group__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"group_name\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"group_name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.group_name?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên người dùng không được trống!</div>}\r\n                                {errors.group_name?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên người dùng không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-group__body__group-input\">\r\n                            <div className=\"do-an-form-create-group__body__group-input__key\">\r\n                                <span>Mô tả:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-group__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"description\",\r\n                                        {\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"description\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.description?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Mô tả không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <button id=\"do-an-form-create-group-button\" type=\"submit\" hidden={true}></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateGroup;","F:\\do_an_frontend\\app\\src\\components\\group\\update_group\\UpdateGroup.js",["464","465"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './UpdateGroup.scss';\r\n\r\nimport GroupsAction from \"../../../redux/action/GroupsAction\";\r\nimport { openNotificationCommon } from \"../../../common/const\";\r\n\r\nconst UpdateGroup = ({dataUpdate, onCloseModal }) => {\r\n\r\n    const { register, setValue,formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n    const dispatch = useDispatch()\r\n    const filter = useSelector(state => state.groupsReducer.paginationFilter)\r\n\r\n    useEffect(() => {\r\n        setValue(\"group_name\", dataUpdate?.group_name);\r\n        setValue(\"description\", dataUpdate?.description);\r\n    }, [])\r\n\r\n    const [formUpdate, setFormUpdate] = useState(dataUpdate)\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        let newFormData = {}\r\n        newFormData = { ...formUpdate, [field]: value };\r\n\r\n        setFormUpdate(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        GroupsAction.updateGroupAction(dispatch,formUpdate.group_code, formUpdate ,filter).then(response => {\r\n            if (response === true) {\r\n                onCloseModal()\r\n            }\r\n        })\r\n    }\r\n\r\n    console.log(formUpdate);\r\n\r\n    return (\r\n        <form id=\"do-an-form-update-group\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n            <div className=\"do-an-form-update-group__body\">\r\n                <div className=\"do-an-form-update-group__body__content\">\r\n                    <div className=\"do-an-form-update-group__body__content__info\">\r\n                        <div className=\"do-an-form-update-group__body__group-input\">\r\n                            <div className=\"do-an-form-update-group__body__group-input__key\">\r\n                                <span>Tên thể loại: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-group__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"group_name\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"group_name\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.name?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Tên người dùng không được trống!</div>}\r\n                                {errors.name?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Tên người dùng không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-group__body__group-input\">\r\n                            <div className=\"do-an-form-update-group__body__group-input__key\">\r\n                                <span>Mô tả:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-group__body__group-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"description\",\r\n                                        {\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"description\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                />\r\n                                {errors.description?.type === \"maxLength\" &&\r\n                                    <div className=\"input-value-error\">Mô tả không được vượt quá 100 ký tự!</div>}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <button id=\"do-an-form-update-group-button\" type=\"submit\" hidden={true}></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UpdateGroup;","F:\\do_an_frontend\\app\\src\\components\\chart\\ChartVoucher.js",["466"],"import React, { useEffect, useState } from 'react';\r\nimport DataTable from '../../share/ecm-base/components/data-table/DataTable';\r\nimport VoucherAction from '../../redux/action/VoucherAction';\r\nimport { Link } from 'react-router-dom';\r\nimport './ChartVoucher.scss';\r\nimport DropDown from '../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst ChartVoucher = ({ prefixPath }) => {\r\n\r\n    const columnGroup = [\r\n        {\r\n            title: \"Mã sách\",\r\n            dataIndex: \"code_books\",\r\n            render: (text) => {\r\n                return <Link to={`${prefixPath}/manager/books/${text}`}>{text}</Link>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên sách\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tên tác giả\",\r\n            dataIndex: \"author\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Số lượng mượn\",\r\n            dataIndex: \"count\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n    ]\r\n\r\n    let listMonth = [\r\n        {\r\n            title: \"Tháng 1\",\r\n            value: \"01\"\r\n        },\r\n        {\r\n            title: \"Tháng 2\",\r\n            value: \"02\"\r\n        },\r\n        {\r\n            title: \"Tháng 3\",\r\n            value: \"03\"\r\n        },\r\n        {\r\n            title: \"Tháng 4\",\r\n            value: \"04\"\r\n        },\r\n        {\r\n            title: \"Tháng 5\",\r\n            value: \"05\"\r\n        },\r\n        {\r\n            title: \"Tháng 6\",\r\n            value: \"06\"\r\n        },\r\n        {\r\n            title: \"Tháng 7\",\r\n            value: \"07\"\r\n        },\r\n        {\r\n            title: \"Tháng 8\",\r\n            value: \"08\"\r\n        },\r\n        {\r\n            title: \"Tháng 9\",\r\n            value: \"09\"\r\n        },\r\n        {\r\n            title: \"Tháng 10\",\r\n            value: \"10\"\r\n        },\r\n        {\r\n            title: \"Tháng 11\",\r\n            value: \"11\"\r\n        },\r\n        {\r\n            title: \"Tháng 12\",\r\n            value: \"12\"\r\n        },\r\n    ]\r\n\r\n    let listYear = [\r\n        {\r\n            title: \"2023\",\r\n            value: \"2023\"\r\n        }\r\n    ]\r\n\r\n    const detailChart = useSelector(state => state.voucherReducer.detailChart)\r\n\r\n    console.log(detailChart);\r\n\r\n\r\n    const [listChart, setListChart] = useState([])\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        setMonth(\"05\")\r\n        setYear(\"2023\")\r\n        VoucherAction.getChartVoucher(dispatch, \"05\", \"2023\").then(response => {\r\n            setListChart(response.list_books_count)\r\n        })\r\n    }, [])\r\n\r\n\r\n    const [month, setMonth] = useState(\"\")\r\n    const [year, setYear] = useState(\"\")\r\n\r\n    const handleSelectMonth = (field, value) => {\r\n        setMonth(value)\r\n        VoucherAction.getChartVoucher(dispatch, value, year).then(response => {\r\n            setListChart(response.list_books_count)\r\n        })\r\n    }\r\n\r\n    const handleSelectYear = (field, value) => {\r\n        setYear(value)\r\n        VoucherAction.getChartVoucher(dispatch, month, value).then(response => {\r\n            setListChart(response.list_books_count)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='do-an__chart-voucher'>\r\n            <div className=\"do-an__chart-voucher__header\">\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Thống kê phiếu mượn</h3>\r\n            </div>\r\n            <div className=\"do-an__chart-voucher__info-chart\">\r\n                <div className='do-an__chart-voucher__info-chart__group'>\r\n                    <div className='do-an__chart-voucher__info-chart__group__card card-total'>\r\n                        Tổng số phiếu: {detailChart.total_voucher}\r\n                    </div>\r\n                </div>\r\n                <div className='do-an__chart-voucher__info-chart__group'>\r\n                    <div className='do-an__chart-voucher__info-chart__group__card card-waiting'>\r\n                        Số phiếu đang chờ duyệt: {detailChart.total_waiting}\r\n                    </div>\r\n                    <div className='do-an__chart-voucher__info-chart__group__card card-confirm'>\r\n                        Số phiếu đã duyệt: {detailChart.total_confirm}\r\n                    </div>\r\n                    <div className='do-an__chart-voucher__info-chart__group__card card-payed'>\r\n                        Số phiếu đã trả: {detailChart.total_payed}\r\n                    </div>\r\n                    <div className='do-an__chart-voucher__info-chart__group__card card-expired'>\r\n                        Số phiếu đã quá hạn: {detailChart.total_expired}\r\n                    </div>\r\n                    <div className='do-an__chart-voucher__info-chart__group__card card-cancel'>\r\n                        Số phiếu đã hủy: {detailChart.total_cancel}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='do-an__chart-voucher__group-dropdown'>\r\n                <DropDown\r\n                    className={\"do-an-chart-dropdown\"}\r\n                    listItem={listMonth}\r\n                    selected={month}\r\n                    name={\"month\"}\r\n                    onSelected={handleSelectMonth}\r\n                >\r\n\r\n                </DropDown>\r\n\r\n                <DropDown\r\n                    className={\"do-an-chart-dropdown\"}\r\n                    listItem={listYear}\r\n                    selected={year}\r\n                    name={\"year\"}\r\n                    onSelected={handleSelectYear}\r\n                >\r\n\r\n                </DropDown>\r\n            </div>\r\n            <div className='do-an__chart-voucher__table'>\r\n                <DataTable\r\n                    tableData={listChart}\r\n                    headerData={columnGroup}\r\n                >\r\n\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartVoucher;","F:\\do_an_frontend\\app\\src\\components\\books\\components\\create_book_single\\CreateBook.js",["467","468"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './CreateBook.scss';\r\nimport { openNotificationCommon } from \"../../../../common/const\";\r\nimport BookAction from \"../../../../redux/action/BookAction\";\r\n\r\nconst CreateBook = ({ codeBooks,onCloseModal }) => {\r\n\r\n    const { register, formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n    const dispatch = useDispatch()\r\n    const filter = useSelector(state => state.booksReducer.paginationFilter)\r\n\r\n    const [formCreate, setFormCreate] = useState(\r\n        {\r\n            code_books: codeBooks,\r\n            amount: 0,\r\n            compartment: 0,\r\n        }\r\n    )\r\n\r\n\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        let newFormData = {}\r\n        newFormData = { ...formCreate, [field]: value };\r\n\r\n        setFormCreate(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        BookAction.createBookAction(dispatch, formCreate, filter)\r\n        onCloseModal()\r\n    }\r\n\r\n    console.log(errors);\r\n\r\n    return (\r\n        <form id=\"do-an-form-create-book\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n            <div className=\"do-an-form-create-book__body\">\r\n                <div className=\"do-an-form-create-book__body__content\">\r\n                    <div className=\"do-an-form-create-book__body__content__info\">\r\n                        <div className=\"do-an-form-create-book__body__book-input\">\r\n                            <div className=\"do-an-form-create-book__body__book-input__key\">\r\n                                <span>Mã sách: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-book__body__book-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name`}\r\n                                    value={codeBooks}\r\n                                    disabled={true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-create-book__body__book-input\">\r\n                            <div className=\"do-an-form-create-book__body__book-input__key\">\r\n                                <span>Số lượng:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-book__body__book-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name input-number ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"amount\",\r\n                                        {\r\n                                            max: 500,\r\n                                            min: 0,\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"amount\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                    type=\"number\"\r\n                                />\r\n                                {errors.amount?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Số lượng không được trống!</div>}\r\n                                {errors.amount?.type === \"min\" &&\r\n                                    <div className=\"input-value-error\">Số lượng không được âm!</div>}\r\n                                {errors.amount?.type === \"max\" &&\r\n                                    <div className=\"input-value-error\">Số lượng không được vượt quá 500!</div>}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"do-an-form-create-book__body__book-input\">\r\n                            <div className=\"do-an-form-create-book__body__book-input__key\">\r\n                                <span>Ngăn chứa số:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-create-book__body__book-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name input-number ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"compartment\",\r\n                                        {\r\n                                            max: 100,\r\n                                            min: 0,\r\n                                            required: true,\r\n                                            onChange: (e) => handleChangeInput(\"compartment\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                    type=\"number\"\r\n                                />\r\n                                {errors.compartment?.type === \"required\" &&\r\n                                    <div className=\"input-value-error\">Ngăn chứa sách không được trống!</div>}\r\n                                {errors.compartment?.type === \"min\" &&\r\n                                    <div className=\"input-value-error\">Ngăn chứa sách không được âm!</div>}\r\n                                {errors.compartment?.type === \"max\" &&\r\n                                    <div className=\"input-value-error\">Ngăn chứa sách không được vượt quá 100!</div>}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <button id=\"do-an-form-create-book-button\" type=\"submit\" hidden={true}></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateBook;","F:\\do_an_frontend\\app\\src\\components\\books\\components\\update_book_single\\UpdateBook.js",["469","470"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './UpdateBook.scss';\r\n\r\nimport { openNotificationCommon } from \"../../../../common/const\";\r\nimport DropDown from \"../../../../share/ecm-base/components/dropdown-v2/DropDown\";\r\nimport BookAction from \"../../../../redux/action/BookAction\";\r\n\r\nconst UpdateBook = ({codeBooks, dataBook , onCloseModal }) => {\r\n\r\n    let listStatusBook = [\r\n        {\r\n            title: \"Sách mới\",\r\n            value: \"NEW\"\r\n        },\r\n        {\r\n            title: \"Sách cũ\",\r\n            value: \"OLD\"\r\n        }\r\n    ]\r\n\r\n    const { register, setValue ,formState: { errors }, handleSubmit } = useForm({ mode: \"onChange\" });\r\n    const dispatch = useDispatch()\r\n    const filter = useSelector(state => state.bookReducer.paginationFilter)\r\n\r\n    const [formUpdate, setFormUpdate] = useState(\r\n        {\r\n            status_book: dataBook?.status_book,\r\n            status_borrow: dataBook?.status_borrow,\r\n            user_borrow: dataBook?.user_borrow,\r\n            compartment: dataBook?.compartment\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        setValue(\"compartment\", formUpdate?.compartment)\r\n    }, [])\r\n\r\n    const handleChangeInput = (field, value) => {\r\n        let newFormData = {}\r\n        newFormData = { ...formUpdate, [field]: value };\r\n\r\n        setFormUpdate(newFormData)\r\n    }\r\n\r\n    const handleSubmitForm = () => {\r\n        BookAction.updateBookAction(dispatch,codeBooks,dataBook.code_id, formUpdate ,filter).then(response => {\r\n            if (response === true) {\r\n                onCloseModal()\r\n            }\r\n        })\r\n    }\r\n\r\n    console.log(formUpdate);\r\n\r\n    return (\r\n        <form id=\"do-an-form-update-book\" onSubmit={handleSubmit(handleSubmitForm)}>\r\n            <div className=\"do-an-form-update-book__body\">\r\n                <div className=\"do-an-form-update-book__body__content\">\r\n                    <div className=\"do-an-form-update-book__body__content__info\">\r\n                        <div className=\"do-an-form-update-book__body__book-input\">\r\n                            <div className=\"do-an-form-update-book__body__book-input__key\">\r\n                                <span>Trạng thái sách: <i className=\"do-an__input-require\">*</i></span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-book__body__book-input__input\">\r\n                                {/* <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"status_book\",\r\n                                        {\r\n                                            required: true,\r\n                                            maxLength: 100,\r\n                                            onChange: (e) => handleChangeInput(\"status_book\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                /> */}\r\n                                <DropDown\r\n                                    className=\"do-an-dropdown-update\"\r\n                                    listItem={listStatusBook}\r\n                                    selected={formUpdate?.status_book || \"NEW\"}\r\n                                    name=\"status_book\"\r\n                                    onSelected={handleChangeInput}\r\n                                >\r\n                                </DropDown>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"do-an-form-update-book__body__book-input\">\r\n                            <div className=\"do-an-form-update-book__body__book-input__key\">\r\n                                <span>Ngăn số:</span>\r\n                            </div>\r\n                            <div className=\"do-an-form-update-book__body__book-input__input\">\r\n                                <input\r\n                                    className={`do-an__input do-an-input-name ${errors.name ? 'is-invalid' : ''}`}\r\n                                    {...register(\"compartment\",\r\n                                        {\r\n                                            max: 1000,\r\n                                            min:0,\r\n                                            required:true,\r\n                                            onChange: (e) => handleChangeInput(\"compartment\", e.target.value)\r\n                                        }\r\n                                    )}\r\n                                    type=\"number\"\r\n                                    style={{width:\"20%\"}}\r\n                                />\r\n                                {errors.compartment?.type === \"max\" &&\r\n                                    <div className=\"input-value-error\">Giới hạn ngăn tủ nhỏ hơn 1000!</div>}\r\n                                    {errors.compartment?.type === \"min\" &&\r\n                                    <div className=\"input-value-error\">Ngăn số không được âm!</div>}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <button id=\"do-an-form-update-book-button\" type=\"submit\" hidden={true}></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UpdateBook;",{"ruleId":"471","replacedBy":"472"},{"ruleId":"473","replacedBy":"474"},{"ruleId":"475","severity":1,"message":"476","line":1,"column":27,"nodeType":"477","messageId":"478","endLine":1,"endColumn":36},{"ruleId":"475","severity":1,"message":"479","line":9,"column":8,"nodeType":"477","messageId":"478","endLine":9,"endColumn":19},{"ruleId":"475","severity":1,"message":"480","line":3,"column":10,"nodeType":"477","messageId":"478","endLine":3,"endColumn":25},{"ruleId":"475","severity":1,"message":"481","line":4,"column":10,"nodeType":"477","messageId":"478","endLine":4,"endColumn":26},{"ruleId":"475","severity":1,"message":"482","line":4,"column":28,"nodeType":"477","messageId":"478","endLine":4,"endColumn":36},{"ruleId":"475","severity":1,"message":"483","line":4,"column":38,"nodeType":"477","messageId":"478","endLine":4,"endColumn":46},{"ruleId":"475","severity":1,"message":"484","line":8,"column":10,"nodeType":"477","messageId":"478","endLine":8,"endColumn":19},{"ruleId":"485","severity":1,"message":"486","line":60,"column":40,"nodeType":"487","endLine":60,"endColumn":112},{"ruleId":"488","severity":1,"message":"489","line":196,"column":8,"nodeType":"490","endLine":196,"endColumn":10,"suggestions":"491"},{"ruleId":"488","severity":1,"message":"492","line":200,"column":8,"nodeType":"490","endLine":200,"endColumn":10,"suggestions":"493"},{"ruleId":"488","severity":1,"message":"494","line":220,"column":8,"nodeType":"490","endLine":220,"endColumn":20,"suggestions":"495"},{"ruleId":"488","severity":1,"message":"496","line":32,"column":6,"nodeType":"490","endLine":32,"endColumn":8,"suggestions":"497"},{"ruleId":"498","severity":1,"message":"499","line":63,"column":13,"nodeType":"487","endLine":63,"endColumn":96},{"ruleId":"485","severity":1,"message":"486","line":68,"column":9,"nodeType":"487","endLine":68,"endColumn":120},{"ruleId":"475","severity":1,"message":"484","line":6,"column":10,"nodeType":"477","messageId":"478","endLine":6,"endColumn":19},{"ruleId":"475","severity":1,"message":"500","line":10,"column":10,"nodeType":"477","messageId":"478","endLine":10,"endColumn":20},{"ruleId":"475","severity":1,"message":"501","line":14,"column":10,"nodeType":"477","messageId":"478","endLine":14,"endColumn":15},{"ruleId":"485","severity":1,"message":"486","line":72,"column":40,"nodeType":"487","endLine":72,"endColumn":112},{"ruleId":"488","severity":1,"message":"489","line":184,"column":8,"nodeType":"490","endLine":184,"endColumn":10,"suggestions":"502"},{"ruleId":"475","severity":1,"message":"503","line":4,"column":10,"nodeType":"477","messageId":"478","endLine":4,"endColumn":15},{"ruleId":"475","severity":1,"message":"504","line":4,"column":17,"nodeType":"477","messageId":"478","endLine":4,"endColumn":23},{"ruleId":"475","severity":1,"message":"484","line":7,"column":10,"nodeType":"477","messageId":"478","endLine":7,"endColumn":19},{"ruleId":"475","severity":1,"message":"480","line":3,"column":10,"nodeType":"477","messageId":"478","endLine":3,"endColumn":25},{"ruleId":"475","severity":1,"message":"481","line":4,"column":10,"nodeType":"477","messageId":"478","endLine":4,"endColumn":26},{"ruleId":"475","severity":1,"message":"482","line":4,"column":28,"nodeType":"477","messageId":"478","endLine":4,"endColumn":36},{"ruleId":"475","severity":1,"message":"483","line":4,"column":38,"nodeType":"477","messageId":"478","endLine":4,"endColumn":46},{"ruleId":"475","severity":1,"message":"484","line":8,"column":10,"nodeType":"477","messageId":"478","endLine":8,"endColumn":19},{"ruleId":"475","severity":1,"message":"505","line":8,"column":38,"nodeType":"477","messageId":"478","endLine":8,"endColumn":42},{"ruleId":"475","severity":1,"message":"500","line":12,"column":10,"nodeType":"477","messageId":"478","endLine":12,"endColumn":20},{"ruleId":"475","severity":1,"message":"501","line":17,"column":10,"nodeType":"477","messageId":"478","endLine":17,"endColumn":15},{"ruleId":"485","severity":1,"message":"486","line":75,"column":40,"nodeType":"487","endLine":75,"endColumn":112},{"ruleId":"488","severity":1,"message":"489","line":166,"column":8,"nodeType":"490","endLine":166,"endColumn":10,"suggestions":"506"},{"ruleId":"475","severity":1,"message":"507","line":5,"column":23,"nodeType":"477","messageId":"478","endLine":5,"endColumn":29},{"ruleId":"475","severity":1,"message":"500","line":10,"column":10,"nodeType":"477","messageId":"478","endLine":10,"endColumn":20},{"ruleId":"485","severity":1,"message":"486","line":45,"column":40,"nodeType":"487","endLine":45,"endColumn":112},{"ruleId":"488","severity":1,"message":"508","line":112,"column":8,"nodeType":"490","endLine":112,"endColumn":30,"suggestions":"509"},{"ruleId":"475","severity":1,"message":"510","line":188,"column":11,"nodeType":"477","messageId":"478","endLine":188,"endColumn":23},{"ruleId":"475","severity":1,"message":"511","line":11,"column":8,"nodeType":"477","messageId":"478","endLine":11,"endColumn":14},{"ruleId":"475","severity":1,"message":"512","line":31,"column":33,"nodeType":"477","messageId":"478","endLine":31,"endColumn":55},{"ruleId":"488","severity":1,"message":"513","line":61,"column":8,"nodeType":"490","endLine":61,"endColumn":14,"suggestions":"514"},{"ruleId":"488","severity":1,"message":"508","line":82,"column":8,"nodeType":"490","endLine":82,"endColumn":23,"suggestions":"515"},{"ruleId":"485","severity":1,"message":"486","line":150,"column":25,"nodeType":"487","endLine":150,"endColumn":137},{"ruleId":"475","severity":1,"message":"516","line":2,"column":10,"nodeType":"477","messageId":"478","endLine":2,"endColumn":21},{"ruleId":"488","severity":1,"message":"517","line":91,"column":8,"nodeType":"490","endLine":91,"endColumn":16,"suggestions":"518"},{"ruleId":"488","severity":1,"message":"519","line":95,"column":8,"nodeType":"490","endLine":95,"endColumn":15,"suggestions":"520"},{"ruleId":"475","severity":1,"message":"480","line":3,"column":10,"nodeType":"477","messageId":"478","endLine":3,"endColumn":25},{"ruleId":"475","severity":1,"message":"481","line":4,"column":10,"nodeType":"477","messageId":"478","endLine":4,"endColumn":26},{"ruleId":"475","severity":1,"message":"482","line":4,"column":28,"nodeType":"477","messageId":"478","endLine":4,"endColumn":36},{"ruleId":"475","severity":1,"message":"483","line":4,"column":38,"nodeType":"477","messageId":"478","endLine":4,"endColumn":46},{"ruleId":"475","severity":1,"message":"484","line":8,"column":10,"nodeType":"477","messageId":"478","endLine":8,"endColumn":19},{"ruleId":"475","severity":1,"message":"521","line":12,"column":8,"nodeType":"477","messageId":"478","endLine":12,"endColumn":14},{"ruleId":"475","severity":1,"message":"522","line":166,"column":12,"nodeType":"477","messageId":"478","endLine":166,"endColumn":38},{"ruleId":"475","severity":1,"message":"523","line":166,"column":40,"nodeType":"477","messageId":"478","endLine":166,"endColumn":69},{"ruleId":"488","severity":1,"message":"489","line":205,"column":8,"nodeType":"490","endLine":205,"endColumn":10,"suggestions":"524"},{"ruleId":"475","severity":1,"message":"525","line":5,"column":23,"nodeType":"477","messageId":"478","endLine":5,"endColumn":35},{"ruleId":"475","severity":1,"message":"526","line":5,"column":37,"nodeType":"477","messageId":"478","endLine":5,"endColumn":48},{"ruleId":"475","severity":1,"message":"527","line":8,"column":21,"nodeType":"477","messageId":"478","endLine":8,"endColumn":36},{"ruleId":"475","severity":1,"message":"528","line":107,"column":11,"nodeType":"477","messageId":"478","endLine":107,"endColumn":21},{"ruleId":"488","severity":1,"message":"529","line":128,"column":8,"nodeType":"490","endLine":128,"endColumn":10,"suggestions":"530"},{"ruleId":"475","severity":1,"message":"531","line":178,"column":11,"nodeType":"477","messageId":"478","endLine":178,"endColumn":23},{"ruleId":"485","severity":1,"message":"486","line":306,"column":21,"nodeType":"487","endLine":306,"endColumn":149},{"ruleId":"475","severity":1,"message":"507","line":5,"column":23,"nodeType":"477","messageId":"478","endLine":5,"endColumn":29},{"ruleId":"475","severity":1,"message":"532","line":6,"column":8,"nodeType":"477","messageId":"478","endLine":6,"endColumn":13},{"ruleId":"475","severity":1,"message":"527","line":7,"column":21,"nodeType":"477","messageId":"478","endLine":7,"endColumn":36},{"ruleId":"475","severity":1,"message":"505","line":7,"column":38,"nodeType":"477","messageId":"478","endLine":7,"endColumn":42},{"ruleId":"475","severity":1,"message":"533","line":9,"column":8,"nodeType":"477","messageId":"478","endLine":9,"endColumn":16},{"ruleId":"485","severity":1,"message":"486","line":56,"column":40,"nodeType":"487","endLine":56,"endColumn":128},{"ruleId":"485","severity":1,"message":"486","line":64,"column":40,"nodeType":"487","endLine":64,"endColumn":112},{"ruleId":"488","severity":1,"message":"492","line":88,"column":8,"nodeType":"490","endLine":88,"endColumn":20,"suggestions":"534"},{"ruleId":"485","severity":1,"message":"486","line":222,"column":21,"nodeType":"487","endLine":222,"endColumn":123},{"ruleId":"475","severity":1,"message":"507","line":5,"column":23,"nodeType":"477","messageId":"478","endLine":5,"endColumn":29},{"ruleId":"475","severity":1,"message":"500","line":10,"column":10,"nodeType":"477","messageId":"478","endLine":10,"endColumn":20},{"ruleId":"485","severity":1,"message":"486","line":44,"column":40,"nodeType":"487","endLine":44,"endColumn":112},{"ruleId":"488","severity":1,"message":"535","line":99,"column":8,"nodeType":"490","endLine":99,"endColumn":20,"suggestions":"536"},{"ruleId":"488","severity":1,"message":"537","line":135,"column":8,"nodeType":"490","endLine":135,"endColumn":23,"suggestions":"538"},{"ruleId":"475","severity":1,"message":"539","line":138,"column":9,"nodeType":"477","messageId":"478","endLine":138,"endColumn":25},{"ruleId":"540","severity":1,"message":"541","line":206,"column":30,"nodeType":"542","messageId":"543","endLine":206,"endColumn":32},{"ruleId":"475","severity":1,"message":"525","line":5,"column":23,"nodeType":"477","messageId":"478","endLine":5,"endColumn":35},{"ruleId":"475","severity":1,"message":"526","line":5,"column":37,"nodeType":"477","messageId":"478","endLine":5,"endColumn":48},{"ruleId":"475","severity":1,"message":"532","line":6,"column":8,"nodeType":"477","messageId":"478","endLine":6,"endColumn":13},{"ruleId":"475","severity":1,"message":"527","line":8,"column":21,"nodeType":"477","messageId":"478","endLine":8,"endColumn":36},{"ruleId":"475","severity":1,"message":"505","line":8,"column":38,"nodeType":"477","messageId":"478","endLine":8,"endColumn":42},{"ruleId":"475","severity":1,"message":"544","line":18,"column":22,"nodeType":"477","messageId":"478","endLine":18,"endColumn":36},{"ruleId":"485","severity":1,"message":"486","line":81,"column":40,"nodeType":"487","endLine":81,"endColumn":112},{"ruleId":"488","severity":1,"message":"529","line":139,"column":8,"nodeType":"490","endLine":139,"endColumn":10,"suggestions":"545"},{"ruleId":"488","severity":1,"message":"546","line":157,"column":8,"nodeType":"490","endLine":157,"endColumn":10,"suggestions":"547"},{"ruleId":"485","severity":1,"message":"486","line":390,"column":21,"nodeType":"487","endLine":390,"endColumn":113},{"ruleId":"488","severity":1,"message":"548","line":11,"column":8,"nodeType":"490","endLine":11,"endColumn":10,"suggestions":"549"},{"ruleId":"475","severity":1,"message":"481","line":3,"column":10,"nodeType":"477","messageId":"478","endLine":3,"endColumn":26},{"ruleId":"475","severity":1,"message":"550","line":7,"column":8,"nodeType":"477","messageId":"478","endLine":7,"endColumn":13},{"ruleId":"475","severity":1,"message":"551","line":8,"column":8,"nodeType":"477","messageId":"478","endLine":8,"endColumn":9},{"ruleId":"552","severity":1,"message":"553","line":17,"column":108,"nodeType":"554","messageId":"555","endLine":17,"endColumn":118},{"ruleId":"552","severity":1,"message":"553","line":17,"column":141,"nodeType":"554","messageId":"555","endLine":17,"endColumn":151},{"ruleId":"552","severity":1,"message":"553","line":17,"column":166,"nodeType":"554","messageId":"555","endLine":17,"endColumn":176},{"ruleId":"488","severity":1,"message":"556","line":25,"column":7,"nodeType":"490","endLine":25,"endColumn":30,"suggestions":"557"},{"ruleId":"488","severity":1,"message":"558","line":37,"column":7,"nodeType":"490","endLine":37,"endColumn":24,"suggestions":"559"},{"ruleId":"560","severity":1,"message":"561","line":103,"column":61,"nodeType":"562","messageId":"563","endLine":103,"endColumn":63},{"ruleId":"475","severity":1,"message":"564","line":1,"column":34,"nodeType":"477","messageId":"478","endLine":1,"endColumn":46},{"ruleId":"475","severity":1,"message":"565","line":1,"column":48,"nodeType":"477","messageId":"478","endLine":1,"endColumn":59},{"ruleId":"475","severity":1,"message":"564","line":1,"column":34,"nodeType":"477","messageId":"478","endLine":1,"endColumn":46},{"ruleId":"475","severity":1,"message":"565","line":1,"column":48,"nodeType":"477","messageId":"478","endLine":1,"endColumn":59},{"ruleId":"475","severity":1,"message":"564","line":1,"column":34,"nodeType":"477","messageId":"478","endLine":1,"endColumn":46},{"ruleId":"475","severity":1,"message":"565","line":1,"column":48,"nodeType":"477","messageId":"478","endLine":1,"endColumn":59},{"ruleId":"475","severity":1,"message":"566","line":7,"column":8,"nodeType":"477","messageId":"478","endLine":7,"endColumn":16},{"ruleId":"488","severity":1,"message":"567","line":41,"column":8,"nodeType":"490","endLine":41,"endColumn":10,"suggestions":"568"},{"ruleId":"485","severity":1,"message":"486","line":329,"column":29,"nodeType":"487","endLine":329,"endColumn":79},{"ruleId":"560","severity":1,"message":"569","line":31,"column":55,"nodeType":"562","messageId":"563","endLine":31,"endColumn":57},{"ruleId":"560","severity":1,"message":"569","line":34,"column":115,"nodeType":"562","messageId":"563","endLine":34,"endColumn":117},{"ruleId":"475","severity":1,"message":"564","line":1,"column":34,"nodeType":"477","messageId":"478","endLine":1,"endColumn":46},{"ruleId":"475","severity":1,"message":"565","line":1,"column":48,"nodeType":"477","messageId":"478","endLine":1,"endColumn":59},{"ruleId":"475","severity":1,"message":"550","line":2,"column":8,"nodeType":"477","messageId":"478","endLine":2,"endColumn":13},{"ruleId":"475","severity":1,"message":"476","line":1,"column":17,"nodeType":"477","messageId":"478","endLine":1,"endColumn":26},{"ruleId":"475","severity":1,"message":"566","line":7,"column":8,"nodeType":"477","messageId":"478","endLine":7,"endColumn":16},{"ruleId":"475","severity":1,"message":"570","line":17,"column":12,"nodeType":"477","messageId":"478","endLine":17,"endColumn":17},{"ruleId":"475","severity":1,"message":"512","line":39,"column":33,"nodeType":"477","messageId":"478","endLine":39,"endColumn":55},{"ruleId":"475","severity":1,"message":"571","line":62,"column":11,"nodeType":"477","messageId":"478","endLine":62,"endColumn":30},{"ruleId":"475","severity":1,"message":"572","line":70,"column":11,"nodeType":"477","messageId":"478","endLine":70,"endColumn":30},{"ruleId":"475","severity":1,"message":"573","line":79,"column":11,"nodeType":"477","messageId":"478","endLine":79,"endColumn":24},{"ruleId":"475","severity":1,"message":"574","line":1,"column":28,"nodeType":"477","messageId":"478","endLine":1,"endColumn":36},{"ruleId":"475","severity":1,"message":"480","line":4,"column":10,"nodeType":"477","messageId":"478","endLine":4,"endColumn":25},{"ruleId":"475","severity":1,"message":"575","line":5,"column":10,"nodeType":"477","messageId":"478","endLine":5,"endColumn":21},{"ruleId":"475","severity":1,"message":"525","line":5,"column":23,"nodeType":"477","messageId":"478","endLine":5,"endColumn":35},{"ruleId":"475","severity":1,"message":"526","line":5,"column":37,"nodeType":"477","messageId":"478","endLine":5,"endColumn":48},{"ruleId":"488","severity":1,"message":"492","line":18,"column":8,"nodeType":"490","endLine":18,"endColumn":23,"suggestions":"576"},{"ruleId":"485","severity":1,"message":"486","line":110,"column":21,"nodeType":"487","endLine":110,"endColumn":116},{"ruleId":"475","severity":1,"message":"476","line":1,"column":17,"nodeType":"477","messageId":"478","endLine":1,"endColumn":26},{"ruleId":"475","severity":1,"message":"566","line":7,"column":8,"nodeType":"477","messageId":"478","endLine":7,"endColumn":16},{"ruleId":"475","severity":1,"message":"570","line":17,"column":12,"nodeType":"477","messageId":"478","endLine":17,"endColumn":17},{"ruleId":"475","severity":1,"message":"512","line":35,"column":33,"nodeType":"477","messageId":"478","endLine":35,"endColumn":55},{"ruleId":"475","severity":1,"message":"571","line":47,"column":11,"nodeType":"477","messageId":"478","endLine":47,"endColumn":30},{"ruleId":"475","severity":1,"message":"572","line":55,"column":11,"nodeType":"477","messageId":"478","endLine":55,"endColumn":30},{"ruleId":"475","severity":1,"message":"573","line":64,"column":11,"nodeType":"477","messageId":"478","endLine":64,"endColumn":24},{"ruleId":"488","severity":1,"message":"577","line":40,"column":8,"nodeType":"490","endLine":40,"endColumn":10,"suggestions":"578"},{"ruleId":"488","severity":1,"message":"508","line":64,"column":8,"nodeType":"490","endLine":64,"endColumn":21,"suggestions":"579"},{"ruleId":"485","severity":1,"message":"486","line":306,"column":29,"nodeType":"487","endLine":306,"endColumn":78},{"ruleId":"475","severity":1,"message":"574","line":1,"column":28,"nodeType":"477","messageId":"478","endLine":1,"endColumn":36},{"ruleId":"475","severity":1,"message":"480","line":3,"column":10,"nodeType":"477","messageId":"478","endLine":3,"endColumn":25},{"ruleId":"475","severity":1,"message":"481","line":4,"column":10,"nodeType":"477","messageId":"478","endLine":4,"endColumn":26},{"ruleId":"475","severity":1,"message":"482","line":4,"column":28,"nodeType":"477","messageId":"478","endLine":4,"endColumn":36},{"ruleId":"475","severity":1,"message":"483","line":4,"column":38,"nodeType":"477","messageId":"478","endLine":4,"endColumn":46},{"ruleId":"475","severity":1,"message":"484","line":8,"column":10,"nodeType":"477","messageId":"478","endLine":8,"endColumn":19},{"ruleId":"475","severity":1,"message":"505","line":8,"column":38,"nodeType":"477","messageId":"478","endLine":8,"endColumn":42},{"ruleId":"485","severity":1,"message":"486","line":70,"column":40,"nodeType":"487","endLine":70,"endColumn":112},{"ruleId":"475","severity":1,"message":"580","line":113,"column":12,"nodeType":"477","messageId":"478","endLine":113,"endColumn":24},{"ruleId":"488","severity":1,"message":"581","line":145,"column":8,"nodeType":"490","endLine":145,"endColumn":10,"suggestions":"582"},{"ruleId":"475","severity":1,"message":"583","line":1,"column":10,"nodeType":"477","messageId":"478","endLine":1,"endColumn":14},{"ruleId":"475","severity":1,"message":"584","line":1,"column":16,"nodeType":"477","messageId":"478","endLine":1,"endColumn":21},{"ruleId":"488","severity":1,"message":"585","line":110,"column":8,"nodeType":"490","endLine":110,"endColumn":33,"suggestions":"586"},{"ruleId":"560","severity":1,"message":"569","line":127,"column":23,"nodeType":"562","messageId":"563","endLine":127,"endColumn":25},{"ruleId":"471","replacedBy":"587"},{"ruleId":"473","replacedBy":"588"},{"ruleId":"471","replacedBy":"589"},{"ruleId":"473","replacedBy":"590"},{"ruleId":"475","severity":1,"message":"544","line":4,"column":22,"nodeType":"477","messageId":"478","endLine":4,"endColumn":36},{"ruleId":"488","severity":1,"message":"591","line":102,"column":8,"nodeType":"490","endLine":102,"endColumn":10,"suggestions":"592"},{"ruleId":"475","severity":1,"message":"476","line":1,"column":17,"nodeType":"477","messageId":"478","endLine":1,"endColumn":26},{"ruleId":"475","severity":1,"message":"593","line":8,"column":10,"nodeType":"477","messageId":"478","endLine":8,"endColumn":32},{"ruleId":"475","severity":1,"message":"593","line":8,"column":10,"nodeType":"477","messageId":"478","endLine":8,"endColumn":32},{"ruleId":"488","severity":1,"message":"594","line":19,"column":8,"nodeType":"490","endLine":19,"endColumn":10,"suggestions":"595"},{"ruleId":"488","severity":1,"message":"492","line":118,"column":8,"nodeType":"490","endLine":118,"endColumn":10,"suggestions":"596"},{"ruleId":"475","severity":1,"message":"476","line":1,"column":17,"nodeType":"477","messageId":"478","endLine":1,"endColumn":26},{"ruleId":"475","severity":1,"message":"593","line":6,"column":10,"nodeType":"477","messageId":"478","endLine":6,"endColumn":32},{"ruleId":"475","severity":1,"message":"593","line":7,"column":10,"nodeType":"477","messageId":"478","endLine":7,"endColumn":32},{"ruleId":"488","severity":1,"message":"597","line":39,"column":8,"nodeType":"490","endLine":39,"endColumn":10,"suggestions":"598"},"no-native-reassign",["599"],"no-negated-in-lhs",["600"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'MenuProject' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faFileCirclePlus' is defined but never used.","'faFilter' is defined but never used.","'faSearch' is defined but never used.","'useParams' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'initPagingFilter', 'pagination', 'searchParams', and 'setSearchParams'. Either include them or remove the dependency array.","ArrayExpression",["601"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["602"],"React Hook useEffect has a missing dependency: 'listDefault'. Either include it or remove the dependency array.",["603"],"React Hook useEffect has a missing dependency: 'checkRole'. Either include it or remove the dependency array.",["604"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'ListButton' is defined but never used.","'event' is defined but never used.",["605"],"'Input' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.",["606"],"'faBook' is defined but never used.","React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["607"],"'managerToken' is assigned a value but never used.","'image2' is defined but never used.","'setListDefaultDropDown' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ditpatch'. Either include it or remove the dependency array.",["608"],["609"],"'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'prefixPath'. Either include it or remove the dependency array. If 'setMenus' needs the current value of 'prefixPath', you can also switch to useReducer instead of useState and read 'prefixPath' in the reducer.",["610"],"React Hook useEffect has missing dependencies: 'location?.pathname' and 'prefixPath'. Either include them or remove the dependency array. If 'setIsActive' needs the current value of 'prefixPath', you can also switch to useReducer instead of useState and read 'prefixPath' in the reducer.",["611"],"'moment' is defined but never used.","'isHiddenModalCreateVoucher' is assigned a value but never used.","'setIsHiddenModalCreateVoucher' is assigned a value but never used.",["612"],"'faCircleInfo' is defined but never used.","'faFileLines' is defined but never used.","'useSearchParams' is defined but never used.","'pagination' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'code' and 'dispatch'. Either include them or remove the dependency array.",["613"],"'handleSearch' is assigned a value but never used.","'image' is defined but never used.","'DropDown' is defined but never used.",["614"],"React Hook useEffect has missing dependencies: 'detailVoucher' and 'dispatch'. Either include them or remove the dependency array.",["615"],"React Hook useEffect has missing dependencies: 'listBookTable', 'listBookUpdate', and 'setValue'. Either include them or remove the dependency array.",["616"],"'initPagingFilter' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ListButtonUser' is defined but never used.",["617"],"React Hook useEffect has missing dependencies: 'code', 'dispatch', and 'initPagingFilter'. Either include them or remove the dependency array.",["618"],"React Hook useCallback has missing dependencies: 'setList' and 'toastList'. Either include them or remove the dependency array. If 'setList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["619"],"'Utils' is defined but never used.","'$' is defined but never used.","no-new-func","The Function constructor is eval.","CallExpression","noFunctionConstructor","React Hook useEffect has a missing dependency: 'setPagination'. Either include it or remove the dependency array.",["620"],"React Hook useEffect has a missing dependency: 'tableData'. Either include it or remove the dependency array.",["621"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'startLoading' is defined but never used.","'stopLoading' is defined but never used.","'ConstAPI' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'formCreate.amount', and 'setValue'. Either include them or remove the dependency array.",["622"],"Expected '===' and instead saw '=='.","'image' is assigned a value but never used.","'checkFileTypeAvatar' is assigned a value but never used.","'checkFileSizeAvatar' is assigned a value but never used.","'onImageChange' is assigned a value but never used.","'useState' is defined but never used.","'faArrowLeft' is defined but never used.",["623"],"React Hook useEffect has missing dependencies: 'code', 'codeBooks', 'dispatch', and 'paginationFilter'. Either include them or remove the dependency array.",["624"],["625"],"'searchParams' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'initPagingFilter', and 'pagination'. Either include them or remove the dependency array.",["626"],"'data' is defined but never used.","'param' is defined but never used.","React Hook useEffect has missing dependencies: 'arrOfCurrentPage', 'numberOfPages', and 'showTotal'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentPage' needs the current value of 'arrOfCurrentPage'.",["627"],["599"],["600"],["599"],["600"],"React Hook useEffect has missing dependencies: 'dispatch', 'pagination', 'searchParams', and 'setSearchParams'. Either include them or remove the dependency array.",["628"],"'openNotificationCommon' is defined but never used.","React Hook useEffect has missing dependencies: 'dataUpdate?.description', 'dataUpdate?.group_name', and 'setValue'. Either include them or remove the dependency array.",["629"],["630"],"React Hook useEffect has missing dependencies: 'formUpdate?.compartment' and 'setValue'. Either include them or remove the dependency array.",["631"],"no-global-assign","no-unsafe-negation",{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"632","fix":"640"},{"desc":"632","fix":"641"},{"desc":"642","fix":"643"},{"desc":"644","fix":"645"},{"desc":"646","fix":"647"},{"desc":"648","fix":"649"},{"desc":"650","fix":"651"},{"desc":"632","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"653","fix":"661"},{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"672","fix":"673"},{"desc":"674","fix":"675"},{"desc":"676","fix":"677"},{"desc":"678","fix":"679"},{"desc":"680","fix":"681"},{"desc":"682","fix":"683"},{"desc":"684","fix":"685"},{"desc":"634","fix":"686"},{"desc":"687","fix":"688"},"Update the dependencies array to be: [dispatch, initPagingFilter, pagination, searchParams, setSearchParams]",{"range":"689","text":"690"},"Update the dependencies array to be: [dispatch]",{"range":"691","text":"692"},"Update the dependencies array to be: [listDefault, listGroups]",{"range":"693","text":"694"},"Update the dependencies array to be: [checkRole]",{"range":"695","text":"696"},{"range":"697","text":"690"},{"range":"698","text":"690"},"Update the dependencies array to be: [formCreate?.due_date, setValue]",{"range":"699","text":"700"},"Update the dependencies array to be: [code, ditpatch]",{"range":"701","text":"702"},"Update the dependencies array to be: [detailManager, setValue]",{"range":"703","text":"704"},"Update the dependencies array to be: [decode, prefixPath]",{"range":"705","text":"706"},"Update the dependencies array to be: [location?.pathname, menus, prefixPath]",{"range":"707","text":"708"},{"range":"709","text":"690"},"Update the dependencies array to be: [code, dispatch]",{"range":"710","text":"711"},"Update the dependencies array to be: [dispatch, voucher_id]",{"range":"712","text":"713"},"Update the dependencies array to be: [detailVoucher, dispatch, voucher_id]",{"range":"714","text":"715"},"Update the dependencies array to be: [detailVoucher, listBookTable, listBookUpdate, setValue]",{"range":"716","text":"717"},{"range":"718","text":"711"},"Update the dependencies array to be: [code, dispatch, initPagingFilter]",{"range":"719","text":"720"},"Update the dependencies array to be: [setList, toastList]",{"range":"721","text":"722"},"Update the dependencies array to be: [tableData, pagination, setPagination]",{"range":"723","text":"724"},"Update the dependencies array to be: [paginationTable, tableData]",{"range":"725","text":"726"},"Update the dependencies array to be: [dispatch, formCreate.amount, setValue]",{"range":"727","text":"728"},"Update the dependencies array to be: [detailManager, dispatch]",{"range":"729","text":"730"},"Update the dependencies array to be: [code, codeBooks, dispatch, paginationFilter]",{"range":"731","text":"732"},"Update the dependencies array to be: [booksDetail, setValue]",{"range":"733","text":"734"},"Update the dependencies array to be: [dispatch, initPagingFilter, pagination]",{"range":"735","text":"736"},"Update the dependencies array to be: [arrOfCurrentPage, currentPage, numberOfPages, pagination, showTotal]",{"range":"737","text":"738"},"Update the dependencies array to be: [dispatch, pagination, searchParams, setSearchParams]",{"range":"739","text":"740"},"Update the dependencies array to be: [dataUpdate?.description, dataUpdate?.group_name, setValue]",{"range":"741","text":"742"},{"range":"743","text":"692"},"Update the dependencies array to be: [formUpdate?.compartment, setValue]",{"range":"744","text":"745"},[6527,6529],"[dispatch, initPagingFilter, pagination, searchParams, setSearchParams]",[6616,6618],"[dispatch]",[7127,7139],"[listDefault, listGroups]",[1115,1117],"[checkRole]",[5737,5739],[5533,5535],[4239,4261],"[formCreate?.due_date, setValue]",[1912,1918],"[code, ditpatch]",[2720,2735],"[detailManager, setValue]",[3310,3318],"[decode, prefixPath]",[3412,3419],"[location?.pathname, menus, prefixPath]",[7176,7178],[4054,4056],"[code, dispatch]",[3132,3144],"[dispatch, voucher_id]",[3666,3678],"[detailVoucher, dispatch, voucher_id]",[4874,4889],"[detailVoucher, listBookTable, listBookUpdate, setValue]",[4551,4553],[5117,5119],"[code, dispatch, initPagingFilter]",[491,493],"[setList, toastList]",[984,1007],"[tableData, pagination, setPagination]",[1422,1439],"[paginationTable, tableData]",[1487,1489],"[dispatch, formCreate.amount, setValue]",[694,709],"[detailManager, dispatch]",[1581,1583],"[code, codeBooks, dispatch, paginationFilter]",[2635,2648],"[booksDetail, setValue]",[4638,4640],"[dispatch, initPagingFilter, pagination]",[4168,4193],"[arrOfCurrentPage, currentPage, numberOfPages, pagination, showTotal]",[3613,3615],"[dispatch, pagination, searchParams, setSearchParams]",[743,745],"[dataUpdate?.description, dataUpdate?.group_name, setValue]",[2897,2899],[1256,1258],"[formUpdate?.compartment, setValue]"]