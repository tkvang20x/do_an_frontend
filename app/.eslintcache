[{"F:\\do_an_frontend\\app\\src\\index.js":"1","F:\\do_an_frontend\\app\\src\\App.js":"2","F:\\do_an_frontend\\app\\src\\redux\\Store.js":"3","F:\\do_an_frontend\\app\\src\\layout\\Layout.js":"4","F:\\do_an_frontend\\app\\src\\redux\\slice\\BooksSlice.js":"5","F:\\do_an_frontend\\app\\src\\redux\\slice\\LoginSlice.js":"6","F:\\do_an_frontend\\app\\src\\layout\\layout-project\\LayoutProject.js":"7","F:\\do_an_frontend\\app\\src\\redux\\slice\\GroupsSlice.js":"8","F:\\do_an_frontend\\app\\src\\components\\books\\BooksPage.js":"9","F:\\do_an_frontend\\app\\src\\common\\menu-project\\MenuProject.js":"10","F:\\do_an_frontend\\app\\src\\components\\login\\Login.js":"11","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\loading\\Loading.js":"12","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\toasts\\Toasts.js":"13","F:\\do_an_frontend\\app\\src\\common\\const.js":"14","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\data-table\\DataTable.js":"15","F:\\do_an_frontend\\app\\src\\redux\\action\\BooksAction.js":"16","F:\\do_an_frontend\\app\\src\\redux\\action\\GroupsAction.js":"17","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\button\\Button.js":"18","F:\\do_an_frontend\\app\\src\\components\\books\\components\\CreateBooks.js":"19","F:\\do_an_frontend\\app\\src\\redux\\service\\LoginService.js":"20","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown-v2\\DropDown.js":"21","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\modal\\Modal.js":"22","F:\\do_an_frontend\\app\\src\\redux\\service\\GroupsService.js":"23","F:\\do_an_frontend\\app\\src\\redux\\service\\BooksService.js":"24","F:\\do_an_frontend\\app\\src\\redux\\service\\commonService.js":"25","F:\\do_an_frontend\\app\\src\\common\\utils.js":"26","F:\\do_an_frontend\\app\\src\\common\\http-commons.js":"27","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\pagination\\Pagination.js":"28","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown\\DropDown.js":"29","F:\\do_an_frontend\\app\\src\\common\\constImage.js":"30"},{"size":158,"mtime":1675852453602,"results":"31","hashOfConfig":"32"},{"size":443,"mtime":1675270513434,"results":"33","hashOfConfig":"32"},{"size":428,"mtime":1675609885891,"results":"34","hashOfConfig":"32"},{"size":2015,"mtime":1675353520366,"results":"35","hashOfConfig":"32"},{"size":1247,"mtime":1675609382758,"results":"36","hashOfConfig":"32"},{"size":427,"mtime":1675181771077,"results":"37","hashOfConfig":"32"},{"size":641,"mtime":1675352380193,"results":"38","hashOfConfig":"32"},{"size":1007,"mtime":1675609438166,"results":"39","hashOfConfig":"32"},{"size":14148,"mtime":1675864150055,"results":"40","hashOfConfig":"32"},{"size":3194,"mtime":1675352977298,"results":"41","hashOfConfig":"32"},{"size":3607,"mtime":1675348494063,"results":"42","hashOfConfig":"32"},{"size":495,"mtime":1675350796891,"results":"43","hashOfConfig":"32"},{"size":2581,"mtime":1662523171668,"results":"44","hashOfConfig":"32"},{"size":439,"mtime":1675786029546,"results":"45","hashOfConfig":"32"},{"size":7384,"mtime":1675618414731,"results":"46","hashOfConfig":"32"},{"size":3322,"mtime":1675789949177,"results":"47","hashOfConfig":"32"},{"size":1450,"mtime":1675618048971,"results":"48","hashOfConfig":"32"},{"size":384,"mtime":1669951847820,"results":"49","hashOfConfig":"32"},{"size":15856,"mtime":1675866214161,"results":"50","hashOfConfig":"32"},{"size":674,"mtime":1675440060865,"results":"51","hashOfConfig":"32"},{"size":2600,"mtime":1675051138368,"results":"52","hashOfConfig":"32"},{"size":1442,"mtime":1675051138370,"results":"53","hashOfConfig":"32"},{"size":464,"mtime":1675609799319,"results":"54","hashOfConfig":"32"},{"size":1889,"mtime":1675865555004,"results":"55","hashOfConfig":"32"},{"size":543,"mtime":1675610247675,"results":"56","hashOfConfig":"32"},{"size":4205,"mtime":1675438151079,"results":"57","hashOfConfig":"32"},{"size":1334,"mtime":1675439852952,"results":"58","hashOfConfig":"32"},{"size":8928,"mtime":1675048204544,"results":"59","hashOfConfig":"32"},{"size":2459,"mtime":1670490531900,"results":"60","hashOfConfig":"32"},{"size":368,"mtime":1669282370572,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1fs13sb",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"F:\\do_an_frontend\\app\\src\\index.js",[],["135","136"],"F:\\do_an_frontend\\app\\src\\App.js",[],"F:\\do_an_frontend\\app\\src\\redux\\Store.js",[],"F:\\do_an_frontend\\app\\src\\layout\\Layout.js",["137"],"import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport \"../share/shared.scss\";\r\nimport Login from '../components/login/Login';\r\nimport './Layout.scss';\r\nimport BooksPage from \"../components/books/BooksPage\";\r\nimport Toasts from \"../share/ecm-base/components/toasts/Toasts\";\r\nimport Loading from \"../share/ecm-base/components/loading/Loading\";\r\nimport MenuProject from \"../common/menu-project/MenuProject\";\r\nimport LayoutProject from \"./layout-project/LayoutProject\";\r\n\r\nexport let openNotification = null\r\nexport let openLoading = null\r\nexport let addLoading = null\r\nexport let subLoading = null\r\nexport let numberLoading = 0\r\n\r\nconst Layout = ({ prefixPath }) => {\r\n  const [toastList, setToastList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(0)\r\n  const showToast = (type, title, message) => {\r\n      const toastProperties = {\r\n          id: Date.now().toString(),\r\n          type: type,\r\n          title: title,\r\n          message: message,\r\n      };\r\n      setToastList([...toastList, toastProperties]);\r\n  };\r\n  openNotification = showToast\r\n\r\n  const _addLoading = () => {\r\n    setIsLoading(isLoading + 1)\r\n  }\r\n\r\n  const _subLoading = () => {\r\n    setIsLoading(isLoading - 1)\r\n  }\r\n\r\n   //setLoading\r\n  addLoading = _addLoading\r\n  subLoading = _subLoading\r\n  numberLoading = isLoading\r\n\r\n  return (\r\n    <div className=\"do-an-container\">\r\n      <Router>\r\n        <Routes>\r\n          <Route exact path={`${prefixPath}/`} element={<Login prefixPath={prefixPath} showToast={showToast} />} />\r\n          <Route exact path={`${prefixPath}/homepage`} element={<LayoutProject prefixPath={prefixPath}/>} >\r\n              <Route exact path={`book/list`} element={<BooksPage prefixPath={prefixPath} />} />\r\n          </Route>\r\n        </Routes>\r\n      </Router>\r\n      <Toasts toastList={toastList} setList={setToastList}></Toasts>\r\n      {(isLoading > 0) && <Loading></Loading>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","F:\\do_an_frontend\\app\\src\\redux\\slice\\BooksSlice.js",[],"F:\\do_an_frontend\\app\\src\\redux\\slice\\LoginSlice.js",[],"F:\\do_an_frontend\\app\\src\\layout\\layout-project\\LayoutProject.js",[],"F:\\do_an_frontend\\app\\src\\redux\\slice\\GroupsSlice.js",[],"F:\\do_an_frontend\\app\\src\\components\\books\\BooksPage.js",["138","139","140","141","142","143","144","145","146"],"import React, { useEffect, useState } from 'react';\r\nimport './BooksPage.scss';\r\nimport imageCover from '../../share/image/1.png';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFileCirclePlus, faFilter, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataTable from \"../../share/ecm-base/components/data-table/DataTable\";\r\nimport BooksAction from \"../../redux/action/BooksAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useSearchParams } from 'react-router-dom';\r\nimport GroupsAction from \"../../redux/action/GroupsAction\";\r\nimport DropDown from '../../share/ecm-base/components/dropdown-v2/DropDown';\r\nimport Modal from '../../share/ecm-base/components/modal/Modal';\r\nimport Button from '../../share/ecm-base/components/button/Button';\r\nimport CreateBooks from './components/CreateBooks';\r\n\r\n\r\nconst BooksPage = ({ prefixPath }) => {\r\n\r\n    const columnBook = [\r\n        {\r\n            title: \"Tên sách\",\r\n            dataIndex: \"name\",\r\n            render: (text) => {\r\n                return <span>{text}</span>\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Mã sách\",\r\n            dataIndex: \"code\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Tác giả\",\r\n            dataIndex: \"author\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"15%\"\r\n        },\r\n        {\r\n            title: \"Ảnh\",\r\n            dataIndex: \"avatar\",\r\n            render: (text) => {\r\n                return text !== null ? <span>{text}</span> : <span>Không có avatar</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Tiêu đề\",\r\n            dataIndex: \"title\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Thể loại\",\r\n            dataIndex: \"group_code\",\r\n            render: (text, index) => {\r\n                return <span>{index?.groups?.group_name}</span>;\r\n            },\r\n            width: \"10%\"\r\n        },\r\n        {\r\n            title: \"Số lượng\",\r\n            dataIndex: \"total_books\",\r\n            render: (text) => {\r\n                return <span>{text}</span>;\r\n            },\r\n            width: \"10%\"\r\n        }\r\n    ]\r\n\r\n    let listOrder = [\r\n        {\r\n            title: \"Tăng dần\",\r\n            value: 1\r\n        },\r\n        {\r\n            title: \"Giảm dần\",\r\n            value: -1\r\n        },\r\n    ]\r\n\r\n    let listOrderBy = [\r\n        {\r\n            title: \"Thời gian tạo\",\r\n            value: \"created_time\"\r\n        },\r\n        {\r\n            title: \"Thời gian sửa\",\r\n            value: \"modified_time\"\r\n        },\r\n    ]\r\n\r\n    var initPagingFilter = {\r\n        page: 1,\r\n        size: 10,\r\n        order_by: \"created_time\",\r\n        order: -1,\r\n    };\r\n\r\n    const listBooks = useSelector(state => state.booksReducer.listBooks)\r\n    const filter = useSelector(state => state.booksReducer.paginationFilter)\r\n    const pagination = useSelector(state => state.booksReducer.pagination)\r\n\r\n    const listGroups = useSelector(state => state.groupsReducer.listGroups)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams({});\r\n    const dispatch = useDispatch();\r\n\r\n    const [isHiddenModalCreateBooks, setIsHiddenModalCreateBooks] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let urlParams = { ...initPagingFilter }\r\n        if (searchParams.get('name')) {\r\n            urlParams[\"name\"] = searchParams.get('name')\r\n        }\r\n        if (searchParams.get('code')) {\r\n            urlParams[\"code\"] = searchParams.get('code')\r\n        }\r\n        if (searchParams.get('author')) {\r\n            urlParams[\"author\"] = searchParams.get('author')\r\n        }\r\n        if (searchParams.get('group_code')) {\r\n            urlParams[\"group_code\"] = searchParams.get('group_code')\r\n        }\r\n        if (searchParams.get('page')) {\r\n            urlParams[\"page\"] = parseInt(searchParams.get('page'))\r\n        }\r\n        if (searchParams.get('size')) {\r\n            urlParams[\"size\"] = parseInt(searchParams.get('size'))\r\n        }\r\n        if (searchParams.get('order_by')) {\r\n            urlParams[\"order_by\"] = searchParams.get('order_by')\r\n        }\r\n        if (searchParams.get('order')) {\r\n            urlParams[\"order\"] = parseInt(searchParams.get('order'))\r\n        }\r\n\r\n        setSearchParams(urlParams)\r\n        BooksAction.updateBooksFilterAction(dispatch, urlParams)\r\n        BooksAction.updateBooksPagination(dispatch, {\r\n            ...pagination,\r\n            page: urlParams.page,\r\n            size: urlParams.size\r\n        })\r\n        BooksAction.getListBooksAction(dispatch, urlParams)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        GroupsAction.getListGroupsAction(dispatch)\r\n    }, [])\r\n\r\n    let listDefault = [\r\n        {\r\n            title: \"Tất cả thể loại\",\r\n            value: \"ALL\"\r\n        }\r\n    ]\r\n\r\n    const [listDefaultDropDown, setListDefaultDropDown] = useState(listDefault)\r\n\r\n\r\n    useEffect(() => {\r\n        let listGrgoupsDropDown = listGroups.map((item) => {\r\n            return {\r\n                title: item?.group_name,\r\n                value: item?.group_code\r\n            }\r\n        })\r\n        setListDefaultDropDown([...listDefault, ...listGrgoupsDropDown])\r\n    }, [listGroups])\r\n\r\n    const onCancel = () => {\r\n        setIsHiddenModalCreateBooks(!isHiddenModalCreateBooks)\r\n    }\r\n\r\n\r\n    const handleChangeInputSearch = (field, value) => {\r\n        let newSearchFilter = { ...filter }\r\n        if (field === \"group_code\" && value === \"ALL\") {\r\n            delete newSearchFilter.group_code\r\n        } else {\r\n            newSearchFilter = { ...filter, [field]: value }\r\n        }\r\n        // const newSearchFilter = { ...filter, [field]: value }\r\n\r\n        BooksAction.updateBooksFilterAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        setSearchParams(filter)\r\n        BooksAction.getListBooksAction(dispatch, filter)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        console.log(newSize);\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            size: newSize,\r\n            page: 1\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        BooksAction.updateBooksFilterAction(dispatch, newSearchFilter)\r\n        BooksAction.updateBooksPagination(dispatch, {\r\n            ...pagination,\r\n            size: newSize,\r\n            page: 1\r\n        })\r\n        BooksAction.getListBooksAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleNumberPagehange = (newPage) => {\r\n        let newSearchFilter = {\r\n            ...filter,\r\n            page: newPage\r\n        }\r\n        setSearchParams(newSearchFilter)\r\n        BooksAction.updateBooksFilterAction(dispatch, newSearchFilter)\r\n        BooksAction.updateBooksPagination(dispatch, {\r\n            ...pagination,\r\n            page: newPage\r\n        })\r\n        BooksAction.getListBooksAction(dispatch, newSearchFilter)\r\n    }\r\n\r\n    const handleOpenModalCreate = () => {\r\n        setIsHiddenModalCreateBooks(true)\r\n    }\r\n\r\n    const onSubmitFormCreate = () => {\r\n        document.getElementById(\"do-an-form-create-books-button\").click();\r\n    }\r\n\r\n    return (\r\n        <div className=\"do-an__home-page\">\r\n            <div className=\"do-an__home-page__image-cover\">\r\n                {/* <img className=\"image-cover\" src={imageCover}></img> */}\r\n                <h3 style={{ margin: \"10px 0px 10px 10px\" }}>Danh mục sách</h3>\r\n            </div>\r\n            <div className=\"do-an__home-page__group-search\">\r\n                <div className=\"do-an__home-page__group-search__filter\">\r\n                    <div className=\"do-an__home-page__group-search__item\">\r\n                        <div className=\"do-an__home-page__group-search__item__title\">\r\n                            Tên sách:\r\n                        </div>\r\n                        <div className=\"do-an__home-page__group-search__item__input-container\">\r\n                            <input className=\"do-an__home-page__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"name\", event.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__home-page__group-search__item\">\r\n                        <div className=\"do-an__home-page__group-search__item__title\">\r\n                            Mã sách:\r\n                        </div>\r\n                        <div className=\"do-an__home-page__group-search__item__input-container\">\r\n                            <input className=\"do-an__home-page__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"code\", event.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__home-page__group-search__item\">\r\n                        <div className=\"do-an__home-page__group-search__item__title\">\r\n                            Tác giả:\r\n                        </div>\r\n                        <div className=\"do-an__home-page__group-search__item__input-container\">\r\n                            <input className=\"do-an__home-page__group-search__item__input\"\r\n                                onChange={(event) => handleChangeInputSearch(\"author\", event.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"do-an__home-page__group-search__filter\">\r\n                    <div className=\"do-an__home-page__group-search__item\">\r\n                        <div className=\"do-an__home-page__group-search__item__title\">\r\n                            Thể loại:\r\n                        </div>\r\n                        <div className=\"do-an__home-page__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__home-page__group-search__item__input\"\r\n                                listItem={listDefaultDropDown}\r\n                                selected={filter?.group_code || \"ALL\"}\r\n                                name=\"group_code\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__home-page__group-search__item\">\r\n                        <div className=\"do-an__home-page__group-search__item__title\">\r\n                            Sắp xếp theo:\r\n                        </div>\r\n                        <div className=\"do-an__home-page__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__home-page__group-search__item__input\"\r\n                                listItem={listOrderBy}\r\n                                selected={filter?.order_by || \"created_time\"}\r\n                                name=\"order_by\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"do-an__home-page__group-search__item\">\r\n                        <div className=\"do-an__home-page__group-search__item__title\">\r\n                            Thứ tự:\r\n                        </div>\r\n                        <div className=\"do-an__home-page__group-search__item__input-container\">\r\n                            <DropDown className=\"do-an__home-page__group-search__item__input\"\r\n                                listItem={listOrder}\r\n                                selected={filter?.order || -1}\r\n                                name=\"order\"\r\n                                onSelected={handleChangeInputSearch}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"do-an__home-page__group-search__button-search\">\r\n                    <button className=\"button-search\" onClick={handleSearch}>Tìm kiếm</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"do-an__home-page__group-table\">\r\n                <div className=\"do-an__home-page__group-table__title\">\r\n                    <button className=\"button-create-new\" onClick={handleOpenModalCreate}>Thêm mới</button>\r\n                </div>\r\n                <div className=\"do-an__home-page__group-table__table-data\">\r\n                    <DataTable headerData={columnBook}\r\n                        tableData={listBooks}\r\n                        onNumberItemChange={handleNumberItemChange}\r\n                        pagination={pagination}\r\n                        onPageChange={handleNumberPagehange}\r\n                    >\r\n\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                title=\"Tạo mới sách\"\r\n                width=\"70%\"\r\n                onCancel={onCancel}\r\n                visible={isHiddenModalCreateBooks}\r\n                footer={\r\n                    <div className='do-an__modal__footer'>\r\n                        <Button\r\n                            type={\"normal-green\"}\r\n                            onClick={onSubmitFormCreate}\r\n                        >\r\n                            Tạo mới\r\n                        </Button>\r\n                        <Button\r\n                            type={\"normal-gray\"}\r\n                            onClick={onCancel}\r\n                        >\r\n                            Hủy bỏ\r\n                        </Button>\r\n                    </div>\r\n                }\r\n            >\r\n                {isHiddenModalCreateBooks && <CreateBooks onCloseModal={onCancel}></CreateBooks>}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BooksPage;","F:\\do_an_frontend\\app\\src\\common\\menu-project\\MenuProject.js",["147","148","149","150","151"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport './MenuProject.scss'\r\n\r\nconst MenuProject = ({ prefixPath }) => {\r\n\r\n    const [isActive, setIsActive] = useState()\r\n    const menus = [\r\n        {\r\n            title: \"Quản lý sách\",\r\n            url: `${prefixPath}/homepage/book/list`,\r\n            children: [\r\n                // {\r\n                //     title: \"Thêm sách\",\r\n                //     url: `${prefixPath}/project/${projectRowId}/detail`,\r\n                //     children: null\r\n                // },\r\n                // {\r\n                //     title: \"Dataset\",\r\n                //     url: `${prefixPath}/project/${projectRowId}/list-dataset`,\r\n                //     children: null\r\n                // },\r\n            ]\r\n        },\r\n        {\r\n            title: \"Quản lý khách hàng\",\r\n            url: `${prefixPath}/user/list`,\r\n            children: [\r\n                // {\r\n                //     title: \"Thêm sách\",\r\n                //     url: `${prefixPath}/project/${projectRowId}/detail`,\r\n                //     children: null\r\n                // },\r\n                // {\r\n                //     title: \"Dataset\",\r\n                //     url: `${prefixPath}/project/${projectRowId}/list-dataset`,\r\n                //     children: null\r\n                // },\r\n            ]\r\n        },\r\n    ]\r\n\r\n\r\n    const handleChangeURL = (url) => {\r\n        setIsActive(url)\r\n        }\r\n\r\n    const createMenu = (listMenu) => {\r\n        return (\r\n            <ul className=\"ocr-designer__menu-project__ul-type-square\">\r\n                {listMenu?.map((menuItem, index) => {\r\n                    let dataHtml = \"\"\r\n                    if (menuItem.children && menuItem.children.length > 0) {\r\n                        dataHtml = createMenu(menuItem.children)\r\n                    }\r\n                    return <div key={index}>\r\n                        <li className={`ocr-designer__menu-project__li ${isActive === menuItem.url ? \"ocr-designer__menu-project__active\" : \"\"}`}>\r\n                            {menuItem.url ? <Link to={menuItem.url}\r\n                                onClick={(event) => handleChangeURL(menuItem.url)}\r\n                            >\r\n                                {menuItem.title}\r\n                            </Link> : menuItem.title}\r\n                        </li>\r\n                        {dataHtml}\r\n                    </div>\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const beautifyName = (nameProject) => {\r\n        if (nameProject?.length > 40) {\r\n            return nameProject.slice(0, 40).trim() + \"...\"\r\n        }\r\n\r\n        return nameProject\r\n    }\r\n\r\n    return (\r\n        <div className='ocr-designer__menu-project'>\r\n            {/* <div className='ocr-designer__menu-project__title'>\r\n                {beautifyName(projectDetail?.name)}\r\n            </div> */}\r\n            <div className='ocr-designer__menu-project__menu'>\r\n                {\r\n                    createMenu(menus)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuProject","F:\\do_an_frontend\\app\\src\\components\\login\\Login.js",["152","153","154"],"import React, { useState } from \"react\";\r\nimport image from '../../share/image/DRBS.jpg';\r\nimport \"./Login.scss\";\r\nimport { Input, Button } from 'antd';\r\nimport LoginService from '../../redux/service/LoginService';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { startLoading, stopLoading } from \"../../common/const\";\r\n\r\nconst Login = ({prefixPath, showToast}) => {\r\n\r\n  const { register, formState: { errors }, handleSubmit } = useForm();\r\n  const navigate = useNavigate();\r\n  const [formLogin, setFormLogin] = useState({})\r\n\r\n  const handleChangeInput = (name, value) => {\r\n    setFormLogin({\r\n      ...formLogin,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const handleSubmitLogin = () => {\r\n    startLoading();\r\n    LoginService.login(formLogin).then(response => {\r\n      console.log(response);\r\n      if (response.data.status === 200){\r\n        window.localStorage.setItem(\"token\", response.data.data.token)\r\n        showToast(\"success\", \"Thông báo\", \"Đăng nhập thành công!\");\r\n        navigate(`${prefixPath}/homepage`);\r\n        stopLoading();\r\n      } else if(response.data.status === 400) {\r\n        stopLoading();\r\n        showToast(\"error\", \"Thông báo\", \"Mật khẩu không chính xác, vui lòng thử lại!\");\r\n      }\r\n      else{\r\n        stopLoading();\r\n        showToast(\"error\", \"Thông báo\", \"Tài khoản không tồn tại, vui lòng thử lại!\");\r\n      }\r\n    })\r\n  }\r\n\r\n  console.log(formLogin);\r\n\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(handleSubmitLogin)}>\r\n      <div className='do-an-login__container' id=\"do-an-login\" style={{ backgroundImage: `url(${image})` }}>\r\n        <div className=\"do-an-login__container__form-login\">\r\n          <div className=\"do-an-login__container__form-login__title\">\r\n            <span className=\"do-an-title\">ĐĂNG NHẬP</span>\r\n          </div>\r\n          <div className=\"do-an-login__container__form-login__group-input\">\r\n            {/* <Input className=\"do-an-input\" placeholder=\"Tài khoản\" />\r\n              <Input className=\"do-an-input\" placeholder=\"Mật khẩu\" type=\"password\" /> */}\r\n\r\n            <input className={`form-control do-an-input ${errors.name ? 'is-invalid' : ''}`} placeholder=\"Tài khoản\"\r\n              {...register(\"username\",\r\n                {\r\n                  required: true,\r\n                  maxLength: 100,\r\n                  validate: value => value.trim().length > 0,\r\n                  onChange: (e) => handleChangeInput(\"username\", e.target.value),\r\n                }\r\n              )} />\r\n            {errors.username?.type === 'required' &&\r\n              <div className=\"input-value-error\">Tên Username không được để trống!</div>}\r\n\r\n            <input className={`form-control do-an-input ${errors.name ? 'is-invalid' : ''}`} placeholder=\"Mật khẩu\"\r\n              {...register(\"password\",\r\n                {\r\n                  required: true,\r\n                  maxLength: 100,\r\n                  validate: value => value.trim().length > 0,\r\n                  onChange: (e) => handleChangeInput(\"password\",e.target.value),\r\n                }\r\n              )} />\r\n            {errors.username?.type === 'required' &&\r\n              <div className=\"input-value-error\">Mật khẩu không được để trống!</div>}\r\n          </div>\r\n          <div className=\"do-an-login__container__form-login__button-login\">\r\n            <button className=\"do-an-button\" type=\"submit\">Đăng nhập</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\loading\\Loading.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\toasts\\Toasts.js",["155"],"import React, { useCallback, useEffect } from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleCheck, faTriangleExclamation, faCircleInfo, faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\"\r\nimport './Toasts.scss'\r\n\r\nconst Toasts = ({toastList, setList}) => {\r\n    const deleteToast = useCallback(id => {\r\n        const toastListItem = toastList.filter(e => e.id !== id)\r\n        setList(toastListItem)\r\n    }, [])\r\n\r\n    const dataToast = {\r\n        success: {\r\n            icon: <FontAwesomeIcon icon={faCircleCheck} />,\r\n            background: \"#1fb266\",\r\n        },\r\n        warning: {\r\n            icon: <FontAwesomeIcon icon={faTriangleExclamation} />,\r\n            background: \"#f1b627\",\r\n        },\r\n        info: {\r\n            icon: <FontAwesomeIcon icon={faCircleInfo} />,\r\n            background: \"#141ed2\",\r\n        },\r\n        error: {\r\n            icon: <FontAwesomeIcon icon={faTriangleExclamation} />,\r\n            background: \"#eb2d4b\",\r\n        },\r\n    }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if(toastList.length){\r\n                deleteToast(toastList[0].id)\r\n            }\r\n        }, 4000)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [toastList, deleteToast])\r\n\r\n    return (\r\n        <div className='toasts-container bottom-right'>\r\n            {\r\n                toastList.map((toast) => {\r\n                    return(\r\n                        <div\r\n                            key={toast.id}\r\n                            className='notification toast bottom-right'\r\n                        >\r\n                            <div \r\n                                className='logo'\r\n                                style={{color: dataToast[toast.type].background}}\r\n                            >{dataToast[toast.type].icon}</div>\r\n                            <div className='info'>\r\n                                <div className='title'>{toast.title}</div>\r\n                                <div className='message'> {toast.message}</div>\r\n                            </div>\r\n                            <div className='button'><button onClick={() => deleteToast(toast.id)}><FontAwesomeIcon icon={faXmark} /></button></div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nToasts.prototype = {\r\n    toastList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setList: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Toasts","F:\\do_an_frontend\\app\\src\\common\\const.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\data-table\\DataTable.js",["156","157","158","159","160","161","162","163"],"import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faAngleDown, faAngleUp} from \"@fortawesome/free-solid-svg-icons\";\r\nimport './DataTable.scss'\r\nimport Pagination from \"../pagination/Pagination\"\r\nimport Utils from '../../../../common/utils';\r\nimport $ from \"jquery\"\r\n\r\nconst defaulPagination =  {\r\n    page: 1,\r\n    size: 5,\r\n    totalPage: 0,\r\n    totalItem: 0,\r\n  }\r\n\r\nconst DataTable = ({tableData, headerData, pagination, sort, onSort, showPagination = true, onPageChange = Function(), onNumberItemChange = Function(), onClickRow = Function(), rowClassName}) => {\r\n    const [isDecrement, setIsDecrement] = useState(false)\r\n    const [dataView, setDataView] = useState([])\r\n    const [paginationTable, setPaginationTable] = useState(defaulPagination)\r\n\r\n    useEffect(() => {\r\n        let newPagination = setPagination();\r\n        setPaginationTable(newPagination)\r\n    },[tableData, pagination])\r\n\r\n    // $(document).ready(function () {\r\n    //     Utils.showTooltip()\r\n    // })\r\n\r\n    useEffect(() => {\r\n        let newDataView = [...tableData]\r\n        if(tableData && tableData.length > paginationTable.size ) {\r\n            newDataView = tableData?.slice((paginationTable.page - 1)* paginationTable.size, paginationTable.size * paginationTable.page);\r\n        }\r\n        setDataView(newDataView)\r\n    },[paginationTable])\r\n\r\n\r\n    const setPagination = () => {\r\n        if(pagination) {\r\n            return pagination\r\n        }\r\n        const numberTotalPage = tableData?.length > 0 ? tableData?.length/paginationTable.size : 0\r\n        const numberTotalPageFixed = Math.floor(numberTotalPage)\r\n        return {\r\n            ...paginationTable,\r\n            totalPage: numberTotalPage > numberTotalPageFixed ? numberTotalPageFixed + 1 : numberTotalPageFixed,\r\n            totalItem: tableData?.length || 0,\r\n        }\r\n    }\r\n\r\n    const handleOnPageChange = (newPage) => {\r\n        setPaginationTable({...paginationTable, page: newPage})\r\n        onPageChange(newPage)\r\n    }\r\n\r\n    const handleNumberItemChange = (newSize, newPage) => {\r\n        const numberTotalPage = tableData?.length > 0 ? tableData?.length/newSize : 0\r\n        const numberTotalPageFixed = Math.floor(numberTotalPage)\r\n        const totalPage = numberTotalPage > numberTotalPageFixed ? numberTotalPageFixed + 1 : numberTotalPageFixed\r\n        setPaginationTable({...paginationTable, size: newSize, page: newPage, totalPage: totalPage})\r\n        onNumberItemChange(newSize, newPage)\r\n    }\r\n\r\n    const data = dataView?.map((row, index) => {\r\n        let rowData = [];\r\n        for (let header of headerData) {\r\n            rowData.push({\r\n                key: header.dataIndex,\r\n                value: header.render ? header.render(row[header.dataIndex], row): row[header.dataIndex],\r\n                className: header?.className ? header?.className : \"\",\r\n                titleClassName: header?.titleClassName ? header?.titleClassName : \"\",\r\n                properties: header?.propertiesRow ? header?.propertiesRow(row) : {}\r\n            });\r\n        }\r\n        return (\r\n            <tr className={(rowClassName) ? rowClassName(row) : \"\"} key={index} onClick={(e) => {onClickRow(row, e)}}\r\n            >\r\n                {paginationTable ? <td>{(paginationTable.page - 1) * paginationTable.size + index + 1}</td>:\r\n                              <td>{index + 1}</td>}\r\n                {rowData.map((item, indexItem) => {\r\n                        return (<td key={indexItem} className={item.className} {...item.properties}>\r\n                            {item.value}\r\n                        </td>)\r\n                    }\r\n                )}\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    // Show a spinner while the profile is loading\r\n\r\n    const handleSort = (field, value) => {\r\n        if (sort && field === \"Ngày tạo\") {\r\n            setIsDecrement(value)\r\n\r\n            const elements = document.getElementsByClassName(\"table-container__table__header\");\r\n            for (let element of elements) {\r\n                const title = element.childNodes[0]\r\n                const buttonSort = element.childNodes[1]\r\n                buttonSort.classList.add(\"table-container__hidden\")\r\n                if (title.textContent === field && title.id != \"table-container-no\") {\r\n                    buttonSort.classList.remove(\"table-container__hidden\")\r\n                    if (onSort) {\r\n                        onSort(field, value ? \"desc\" : \"asc\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='table-container'>\r\n            <div className='table-container__content'>\r\n            <table className='table-container__table'>\r\n                <thead>\r\n                <tr>\r\n                    <th style={{width:\"5%\"}}>\r\n                        <div className='table-container__table__header'>\r\n                            <div id=\"table-container-no\" className='table-container__table__header__title'>STT</div>\r\n                            <div className='table-container__table__header__btn-sort table-container__hidden'>\r\n                                <FontAwesomeIcon icon={isDecrement ? faAngleDown : faAngleUp}/>\r\n                            </div>\r\n                        </div>\r\n                    </th>\r\n                    {headerData.map((col, index) => (\r\n                        <th style={{width: col.width}} key={index}>\r\n                            <div className={`table-container__table__header ${col.titleClassName ? col.titleClassName : \"\"}`}\r\n                                 onClick={() => handleSort(col.title, !isDecrement)}>\r\n                                <div className='table-container__table__header__title'>{col.title}</div>\r\n                                {<div className='table-container__table__header__btn-sort table-container__hidden'>\r\n                                    <FontAwesomeIcon icon={isDecrement ? faAngleDown : faAngleUp}/>\r\n                                </div>}\r\n                            </div>\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n                </thead>\r\n                <React.Suspense fallback={<div>Loading...</div>}>\r\n                    <tbody>\r\n                    {(tableData && tableData.length >= 1) && data}\r\n                    </tbody>\r\n                </React.Suspense>\r\n\r\n            </table>\r\n            </div>\r\n            {(!tableData || tableData.length < 1) &&\r\n            <div className='empty'>\r\n                <div className='logo'></div>\r\n                <div className='text'>Không có dữ liệu</div>\r\n            </div>\r\n            }\r\n            {showPagination && <Pagination\r\n                pagination={paginationTable}\r\n                onPageChange={handleOnPageChange}\r\n                onNumberItemChange={handleNumberItemChange}\r\n            ></Pagination>}\r\n        </div>\r\n    )\r\n}\r\n\r\nDataTable.propTypes = {\r\n    tableData: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    headerData: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onPageChange: PropTypes.func,\r\n    onNumberItemChange: PropTypes.func,\r\n    pagination: PropTypes.object,\r\n    sort: PropTypes.bool,\r\n    onSort: PropTypes.func,\r\n    showPagination: PropTypes.bool,\r\n}\r\n\r\nexport default DataTable","F:\\do_an_frontend\\app\\src\\redux\\action\\BooksAction.js",["164","165"],"import { openNotificationCommon, startLoading, stopLoading } from \"../../common/const\";\r\nimport Utils from \"../../common/utils\";\r\nimport BooksService from \"../../redux/service/BooksService\";\r\nimport { BooksSlice } from \"../../redux/slice/BooksSlice\";\r\n\r\n/**\r\n *[LiST] - Get list Project Action\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\n const getListBooksAction = async (dispatch, paging) => {\r\n    try {\r\n      // get response from api\r\n      const response = await BooksService.getList(paging);\r\n      console.log(paging);\r\n      if (\r\n        Utils.isNotNullOrUndefined(response) &&\r\n        Utils.isNotNullOrUndefined(response.data) &&\r\n        Utils.isNotNullOrUndefined(response.data.data) &&\r\n        Utils.isNotNullOrUndefined(response.data.data.result) &&\r\n        Utils.isNotNullOrUndefined(response.data.data.pagination)\r\n      ) {\r\n        var listResults = response.data.data.result;\r\n        var pagingResult = response.data.data.pagination;\r\n  \r\n        // dispath data to reducer\r\n        dispatch(\r\n          BooksSlice.actions.loadListBooksReducer(\r\n            listResults\r\n          )\r\n        );\r\n  \r\n        // dispatch paging\r\n        dispatch(\r\n          BooksSlice.actions.setPagination({\r\n            page: pagingResult.page,\r\n            size: pagingResult.limit,\r\n            totalPage: pagingResult.total_page,\r\n            totalItem: pagingResult.total_records,\r\n          })\r\n        );\r\n      } else {\r\n        // dispath data to reducer - empty\r\n        dispatch(\r\n          BooksSlice.actions.loadListBooksReducer([])\r\n        );\r\n        dispatch(\r\n            BooksSlice.actions.setPagination({\r\n            page: 1,\r\n            size: paging.size,\r\n            totalPage: 0,\r\n            totalItem: 0,\r\n          })\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.log(\"getListBooksAction - error: \", err);\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  /**\r\n   *[LiST] - Load Filter Data\r\n   *\r\n   * @param {*} dispatch\r\n   * @param {*} params\r\n   */\r\n  const updateBooksFilterAction = (dispatch, filter, newFilter) => {\r\n    // dispath data to reducer\r\n    dispatch(\r\n      BooksSlice.actions.loadPaginationFilter(filter)\r\n    );\r\n  };\r\n\r\n  const updateBooksPagination = (dispatch, pagination) => {\r\n    dispatch(\r\n        BooksSlice.actions.setPagination(pagination)\r\n      );\r\n  }\r\n\r\n/**\r\n * [CREATE] - Create Project data\r\n * @param {*} formData\r\n */\r\nexport const createBooksAction = async (formData, dispatch, filter) => {\r\n  try {\r\n    const response = await BooksService.create(\r\n      formData\r\n    );\r\n\r\n    if (response.data.status === 201) {\r\n      openNotificationCommon(\"success\", \"Thông báo\", \"Thêm mới sách thành công!\")\r\n      getListBooksAction(dispatch, filter)\r\n      return true\r\n  } else {\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Thêm mới sách thất bại!\")\r\n  }\r\n    return response\r\n  } catch (err) {\r\n    console.log(\"createBooksAction - error: \", err);\r\n    openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\n const BooksAction = {\r\n    getListBooksAction,\r\n    updateBooksFilterAction,\r\n    updateBooksPagination,\r\n    createBooksAction\r\n } \r\n\r\n export default BooksAction;\r\n","F:\\do_an_frontend\\app\\src\\redux\\action\\GroupsAction.js",["166","167"],"import { openNotificationCommon, startLoading, stopLoading } from \"../../common/const\";\r\nimport Utils from \"../../common/utils\";\r\nimport GroupsService from \"../../redux/service/GroupsService\";\r\nimport { GroupsSlice } from \"../../redux/slice/GroupsSlice\";\r\n\r\n/**\r\n *[LiST] - Get list Project Action\r\n *\r\n * @param {*} dispatch\r\n * @param {*} params\r\n */\r\n const getListGroupsAction = async (dispatch) => {\r\n    try {\r\n      // get response from api\r\n      const response = await GroupsService.getList();\r\n      console.log(response);\r\n      if (\r\n        Utils.isNotNullOrUndefined(response) &&\r\n        Utils.isNotNullOrUndefined(response.data) &&\r\n        Utils.isNotNullOrUndefined(response.data.data) &&\r\n        Utils.isNotNullOrUndefined(response.data.data.result)\r\n      ) {\r\n        var listResults = response.data.data.result;\r\n    \r\n        // dispath data to reducer\r\n        dispatch(\r\n          GroupsSlice.actions.loadListGroupsReducer(\r\n            listResults\r\n          )\r\n        );\r\n  \r\n      } else {\r\n        // dispath data to reducer - empty\r\n        dispatch(\r\n            GroupsSlice.actions.loadListGroupsReducer([])\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.log(\"getListGroupsAction - error: \", err);\r\n      openNotificationCommon(\"error\", \"Thông báo\", \"Đã có lỗi xảy ra!\")\r\n      return null;\r\n    }\r\n  };\r\n\r\n\r\n const GroupsAction = {\r\n    getListGroupsAction\r\n } \r\n\r\n export default GroupsAction;\r\n","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\button\\Button.js",[],"F:\\do_an_frontend\\app\\src\\components\\books\\components\\CreateBooks.js",["168","169","170"],"F:\\do_an_frontend\\app\\src\\redux\\service\\LoginService.js",["171"],"import { httpAccess, JSON_CONTENT_TYPE } from \"../../common/http-commons\";\r\nimport Utils from \"../../common/utils\";\r\nimport CommonService from \"./commonService\";\r\n\r\nconst login = async (dataLogin) => {\r\n    var loginResponse = null;\r\n    try {\r\n        const loginPath = process.env.REACT_APP_LOGIN_MANAGER_PATH;\r\n        loginResponse = await httpAccess(JSON_CONTENT_TYPE).post(\r\n            loginPath, JSON.stringify(dataLogin));\r\n        return loginResponse;\r\n    } catch (error) {\r\n        console.log(\"[Login]- Fail\", error);\r\n        return CommonService.errorServiceHandle(error);\r\n    }\r\n\r\n}\r\n\r\n\r\nconst LoginService = {\r\n    login\r\n}\r\n\r\nexport default LoginService;","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown-v2\\DropDown.js",["172","173"],"import React, { useState } from 'react'\r\nimport './DropDown.scss'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst DropDown = ({ className, name, selected, listItem, onSelected, placeholder, placement = \"bottom\", disable = false , indexTable}) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    return (\r\n        <div className={`${className ? className : \"\"} dropdown-container ${disable === true ? \"dropdown-container__no-drop\" : \"\"}`}>\r\n            <div\r\n                className={`dropdown-container__overlay ${isOpen ? \"dropdown-container__overlay__active\" : \"\"}`}\r\n                onClick={() => setIsOpen(!isOpen)}\r\n            ></div>\r\n            <div className={`dropdown-container__header`}\r\n                onClick={() => {\r\n                    if (disable === false ) {\r\n                        setIsOpen(!isOpen)\r\n                    } else {\r\n                        setIsOpen(false)\r\n                    }\r\n                }\r\n                }\r\n            >\r\n                <div className='dropdown-container__header__text'>\r\n                    {(selected !== \"undefine\" && selected !== \"\") ? listItem?.find(item => item.value === selected)?.title : placeholder}\r\n                </div>\r\n                <div\r\n                    className='dropdown-container__header__icon'\r\n                >\r\n                    <FontAwesomeIcon icon={(placement == \"top\") ? faAngleUp : faAngleDown} />\r\n                </div>\r\n            </div>\r\n            <div className={`ecm-base__scroll dropdown-container__select-box ${isOpen ? \"open\" : \"\"} ${(placement == \"top\") ? \"dropdown-container__select-box__top\" : \"\"}`}>\r\n                {\r\n                    listItem.map((item, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className='dropdown-container__select-box__item'\r\n                            onClick={() => {\r\n                                onSelected(name, item.value, indexTable)\r\n                                setIsOpen(!isOpen)\r\n                            }}\r\n                        >{item.title}</div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nDropDown.propTypes = {\r\n    className: PropTypes.string,\r\n    name: PropTypes.string,\r\n    selected: PropTypes.string,\r\n    listItem: PropTypes.arrayOf(PropTypes.any),\r\n    onSelected: PropTypes.func,\r\n    placement: PropTypes.string\r\n}\r\n\r\nexport default DropDown","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\modal\\Modal.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\GroupsService.js",["174"],"import {axiosClient} from '../../common/http-commons';\r\nimport Utils from '../../common/utils';\r\n\r\nconst groupsService = {\r\n    getList : () => {\r\n        try {\r\n            // Get data with default\r\n                return axiosClient.get(\r\n                    process.env.REACT_APP_GET_ALL_AND_CREATE_GROUP\r\n                );\r\n        } catch (error) {\r\n            console.log(\"[Groups - Get list]\", error);\r\n        }\r\n    }\r\n}\r\n\r\nexport default groupsService;","F:\\do_an_frontend\\app\\src\\redux\\service\\BooksService.js",[],"F:\\do_an_frontend\\app\\src\\redux\\service\\commonService.js",[],"F:\\do_an_frontend\\app\\src\\common\\utils.js",[],"F:\\do_an_frontend\\app\\src\\common\\http-commons.js",[],"F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\pagination\\Pagination.js",["175","176"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Pagination.scss'\r\nimport Toasts from '../toasts/Toasts';\r\nimport DropDown from '../dropdown/DropDown';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Pagination = ({ pagination, onPageChange, onNumberItemChange, placement =\"top\" }) => {\r\n\r\n    const refContainer = useRef(null)\r\n    if (!pagination) {\r\n        pagination = {\r\n            page: 0,\r\n            size: 0,\r\n            totalPage: 0,\r\n            totalItem: 0,\r\n        }\r\n    }\r\n    const { page, size, totalPage, totalItem } = pagination;\r\n\r\n    const numberOfPages = []\r\n    for (let i = 1; i <= totalPage; i++) {\r\n        numberOfPages.push(i)\r\n    }\r\n\r\n    const [valueGo, setValueGo] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(page)\r\n    const [arrOfCurrentPage, setArrOfCurrentPage] = useState([])\r\n    const [toastList, setToastList] = useState([])\r\n    const [numberShow, setNumberShow] = useState(size)\r\n    const [showTotal, setShowTotal] = useState(true)\r\n    let toastProperties = null\r\n\r\n    useEffect(() => {\r\n        const widthPagination = refContainer.current.clientWidth\r\n        if(widthPagination && widthPagination <= 600){\r\n            setShowTotal(false)\r\n        }else {\r\n            setShowTotal(true)\r\n        }\r\n      }, [refContainer])\r\n\r\n    useEffect(() => {\r\n        setNumberShow(size)\r\n    }, [size])\r\n\r\n    const showToast = (type, title, message) => {\r\n        toastProperties = {\r\n            id: toastList.length + 1,\r\n            type: type,\r\n            title: title,\r\n            message: message\r\n        }\r\n        setToastList([...toastList, toastProperties])\r\n    }\r\n\r\n    const listNumberShow = [\r\n       5, 10, 20, 50\r\n    ]\r\n\r\n    const leftDots = '... '\r\n    const midDots = '...'\r\n    const rightDots = ' ...'\r\n\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(pagination.page)\r\n        let tempNumberOfPage = [...arrOfCurrentPage]\r\n\r\n        if (numberOfPages.length <= 4 && !showTotal) {\r\n            tempNumberOfPage = numberOfPages\r\n        }else\r\n        if (numberOfPages.length <= 8 && showTotal) {\r\n            tempNumberOfPage = numberOfPages\r\n        }\r\n        else if (currentPage >= 1 && currentPage <= 4 && showTotal) {\r\n            tempNumberOfPage = [1, 2, 3, 4 , 5, midDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage >= 1 && currentPage <= 3 && !showTotal) {\r\n            tempNumberOfPage = [1, 2, 3, midDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage > 4 && currentPage < numberOfPages.length - 2 && showTotal) {\r\n            const sliceLeft = numberOfPages.slice(currentPage - 2, currentPage)\r\n            const sliceRight = numberOfPages.slice(currentPage, currentPage + 1)\r\n            tempNumberOfPage = [1, leftDots, ...sliceLeft, ...sliceRight, rightDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage >= 4 && currentPage < numberOfPages.length - 2 && !showTotal) {\r\n            const sliceLeft = numberOfPages.slice(currentPage - 2, currentPage)\r\n            tempNumberOfPage = [1, leftDots, ...sliceLeft, rightDots, numberOfPages.length]\r\n        }\r\n        else if (currentPage > numberOfPages.length - 3 && showTotal) {\r\n            const slice = numberOfPages.slice(numberOfPages.length - 5, numberOfPages.length)\r\n            tempNumberOfPage = [1, leftDots, ...slice]\r\n        }\r\n        else if (currentPage > numberOfPages.length - 3 && !showTotal) {\r\n            const slice = numberOfPages.slice(numberOfPages.length - 3, numberOfPages.length)\r\n            tempNumberOfPage = [1, leftDots, ...slice]\r\n        }\r\n        else if (currentPage === midDots) {\r\n            setCurrentPage(arrOfCurrentPage[arrOfCurrentPage.length - 3] + 1)\r\n        }\r\n        else if (currentPage === rightDots) {\r\n            setCurrentPage(arrOfCurrentPage[3] + 2)\r\n        }\r\n        else if (currentPage === leftDots) {\r\n            setCurrentPage(arrOfCurrentPage[3] - 2)\r\n        }\r\n        setArrOfCurrentPage(tempNumberOfPage)\r\n    }, [currentPage, pagination])\r\n\r\n    function handlePageChange(newPage) {\r\n        setCurrentPage(newPage)\r\n        if (newPage === midDots) {\r\n            newPage = arrOfCurrentPage[arrOfCurrentPage.length - 3] + 1\r\n        }\r\n        else if (newPage === rightDots) {\r\n            newPage = arrOfCurrentPage[3] + 2\r\n        }\r\n        else if (newPage === leftDots) {\r\n            newPage = arrOfCurrentPage[3] - 2\r\n        }\r\n        onPageChange(newPage)\r\n    }\r\n\r\n    function handleGo(event) {\r\n        if (event.key == 'Enter') {\r\n            let regex = /^[0-9]+$/\r\n            let value = event.target.value\r\n            if (value.match(regex)) {\r\n                if (value <= 0) {\r\n                    showToast(\"warning\", \"Cảnh báo\", \"Số trang phải lơn hơn 0!\")\r\n                } else if (value <= numberOfPages.length) {\r\n                    handlePageChange(Number(value))\r\n                }\r\n                else {\r\n                    showToast(\"warning\", \"Cảnh báo\", \"Số trang này không tồn tại!\")\r\n                }\r\n            }\r\n            else {\r\n                showToast(\"warning\", \"Cảnh báo\", \"Xin vui lòng nhập số!\")\r\n            }\r\n            setValueGo('')\r\n        }\r\n    }\r\n\r\n    function handleChangeInput(event) {\r\n        setValueGo(event.target.value)\r\n    }\r\n\r\n    function handleChangeNumberShow(_name, value) {\r\n        const numberTotalPage = totalItem/value\r\n        const numberTotalPageFixed = Math.floor(numberTotalPage) || 0\r\n        const newTotalPage = numberTotalPage > numberTotalPageFixed ? numberTotalPageFixed + 1 : numberTotalPageFixed\r\n        const newPage = page <= newTotalPage ? page: newTotalPage\r\n        setNumberShow(value)\r\n        onNumberItemChange(value, newPage || 1)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='paginition-container' ref={refContainer}>\r\n            <div className={`info ${showTotal ? null: \"paginition-container__info-view-small\"}`}>\r\n                {showTotal && <div className='info__item'>\r\n                    Hiển thị {totalItem > 0 ? (page - 1) * size + 1 : 0}-\r\n                    {((page - 1) * size + size) < totalItem ? ((page - 1) * size + size) : totalItem} của {totalItem}\r\n                </div>\r\n                }\r\n                <DropDown\r\n                    selected={numberShow}\r\n                    listItem={listNumberShow}\r\n                    onSelected={handleChangeNumberShow}\r\n                    placement={placement}\r\n\r\n                    className=\"info__drop-down info__item\"\r\n                ></DropDown>\r\n            </div>\r\n            <div className={`handle-box ${showTotal ? null: \"paginition-container__handle-box-view-small\"}`}>\r\n                <div className='buttons'>\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={currentPage === 1 || totalPage ===0? true : false}\r\n                        className='button btn-pre-page'\r\n                        onClick={() => handlePageChange(currentPage - 1)}\r\n                    >\r\n                        <FontAwesomeIcon icon={faAngleLeft} />\r\n                    </button>\r\n                    {arrOfCurrentPage.map((pageItem, index) => {\r\n                        return (\r\n                            <button\r\n                                type=\"button\"\r\n                                key={index}\r\n                                className={'button' + ((pageItem === currentPage) ? ' button-active' : '')}\r\n                                onClick={() => handlePageChange(pageItem)}\r\n                            >{pageItem}\r\n                            </button>\r\n                        )\r\n                    })}\r\n                    <button\r\n                        type=\"button\"\r\n                        disabled={(currentPage === totalPage || totalPage === 0) ? true : false}\r\n                        className='button btn-next-page'\r\n                        onClick={() => handlePageChange(currentPage + 1)}>\r\n                        <FontAwesomeIcon icon={faAngleRight} />\r\n                    </button>\r\n                </div>\r\n                <div className='jump'>\r\n                    <span>Đến:</span>\r\n                    <input disabled={totalPage === 0} onKeyDown={handleGo} type=\"number\" min=\"1\" value={valueGo} onChange={handleChangeInput}></input>\r\n                </div>\r\n            </div>\r\n            <Toasts toastList={toastList} setList={setToastList}></Toasts>\r\n        </div>\r\n    )\r\n}\r\n\r\nPagination.propTypes = {\r\n    pagination: PropTypes.object.isRequired,\r\n    onPageChange: PropTypes.func,\r\n    onNumberItemChange: PropTypes.func,\r\n    placement: PropTypes.string\r\n}\r\n\r\nPagination.defaultProps = {\r\n    onPageChange: null,\r\n}\r\n\r\nexport default Pagination","F:\\do_an_frontend\\app\\src\\share\\ecm-base\\components\\dropdown\\DropDown.js",[],"F:\\do_an_frontend\\app\\src\\common\\constImage.js",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":19},{"ruleId":"181","severity":1,"message":"185","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":18},{"ruleId":"181","severity":1,"message":"186","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":25},{"ruleId":"181","severity":1,"message":"187","line":5,"column":10,"nodeType":"183","messageId":"184","endLine":5,"endColumn":26},{"ruleId":"181","severity":1,"message":"188","line":5,"column":28,"nodeType":"183","messageId":"184","endLine":5,"endColumn":36},{"ruleId":"181","severity":1,"message":"189","line":5,"column":38,"nodeType":"183","messageId":"184","endLine":5,"endColumn":46},{"ruleId":"181","severity":1,"message":"190","line":9,"column":10,"nodeType":"183","messageId":"184","endLine":9,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":153,"column":8,"nodeType":"193","endLine":153,"endColumn":10,"suggestions":"194"},{"ruleId":"191","severity":1,"message":"195","line":157,"column":8,"nodeType":"193","endLine":157,"endColumn":10,"suggestions":"196"},{"ruleId":"191","severity":1,"message":"197","line":177,"column":8,"nodeType":"193","endLine":177,"endColumn":20,"suggestions":"198"},{"ruleId":"181","severity":1,"message":"199","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":26},{"ruleId":"181","severity":1,"message":"200","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":21},{"ruleId":"181","severity":1,"message":"201","line":2,"column":23,"nodeType":"183","messageId":"184","endLine":2,"endColumn":34},{"ruleId":"181","severity":1,"message":"190","line":3,"column":16,"nodeType":"183","messageId":"184","endLine":3,"endColumn":25},{"ruleId":"181","severity":1,"message":"202","line":72,"column":11,"nodeType":"183","messageId":"184","endLine":72,"endColumn":23},{"ruleId":"181","severity":1,"message":"203","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":15},{"ruleId":"181","severity":1,"message":"204","line":4,"column":17,"nodeType":"183","messageId":"184","endLine":4,"endColumn":23},{"ruleId":"181","severity":1,"message":"190","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":19},{"ruleId":"191","severity":1,"message":"205","line":11,"column":8,"nodeType":"193","endLine":11,"endColumn":10,"suggestions":"206"},{"ruleId":"181","severity":1,"message":"207","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":13},{"ruleId":"181","severity":1,"message":"208","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":9},{"ruleId":"209","severity":1,"message":"210","line":17,"column":108,"nodeType":"211","messageId":"212","endLine":17,"endColumn":118},{"ruleId":"209","severity":1,"message":"210","line":17,"column":141,"nodeType":"211","messageId":"212","endLine":17,"endColumn":151},{"ruleId":"209","severity":1,"message":"210","line":17,"column":166,"nodeType":"211","messageId":"212","endLine":17,"endColumn":176},{"ruleId":"191","severity":1,"message":"213","line":25,"column":7,"nodeType":"193","endLine":25,"endColumn":30,"suggestions":"214"},{"ruleId":"191","severity":1,"message":"215","line":37,"column":7,"nodeType":"193","endLine":37,"endColumn":24,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":103,"column":61,"nodeType":"219","messageId":"220","endLine":103,"endColumn":63},{"ruleId":"181","severity":1,"message":"221","line":1,"column":34,"nodeType":"183","messageId":"184","endLine":1,"endColumn":46},{"ruleId":"181","severity":1,"message":"222","line":1,"column":48,"nodeType":"183","messageId":"184","endLine":1,"endColumn":59},{"ruleId":"181","severity":1,"message":"221","line":1,"column":34,"nodeType":"183","messageId":"184","endLine":1,"endColumn":46},{"ruleId":"181","severity":1,"message":"222","line":1,"column":48,"nodeType":"183","messageId":"184","endLine":1,"endColumn":59},{"ruleId":"181","severity":1,"message":"223","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":16},{"ruleId":"191","severity":1,"message":"195","line":39,"column":8,"nodeType":"193","endLine":39,"endColumn":10,"suggestions":"224"},{"ruleId":"225","severity":1,"message":"226","line":282,"column":29,"nodeType":"227","endLine":282,"endColumn":78},{"ruleId":"181","severity":1,"message":"207","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":13},{"ruleId":"217","severity":1,"message":"228","line":31,"column":55,"nodeType":"219","messageId":"220","endLine":31,"endColumn":57},{"ruleId":"217","severity":1,"message":"228","line":34,"column":115,"nodeType":"219","messageId":"220","endLine":34,"endColumn":117},{"ruleId":"181","severity":1,"message":"207","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":13},{"ruleId":"191","severity":1,"message":"229","line":110,"column":8,"nodeType":"193","endLine":110,"endColumn":33,"suggestions":"230"},{"ruleId":"217","severity":1,"message":"228","line":127,"column":23,"nodeType":"219","messageId":"220","endLine":127,"endColumn":25},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'MenuProject' is defined but never used.","Identifier","unusedVar","'imageCover' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faFileCirclePlus' is defined but never used.","'faFilter' is defined but never used.","'faSearch' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'initPagingFilter', 'pagination', 'searchParams', and 'setSearchParams'. Either include them or remove the dependency array.","ArrayExpression",["233"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["234"],"React Hook useEffect has a missing dependency: 'listDefault'. Either include it or remove the dependency array.",["235"],"'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'beautifyName' is assigned a value but never used.","'Input' is defined but never used.","'Button' is defined but never used.","React Hook useCallback has missing dependencies: 'setList' and 'toastList'. Either include them or remove the dependency array. If 'setList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["236"],"'Utils' is defined but never used.","'$' is defined but never used.","no-new-func","The Function constructor is eval.","CallExpression","noFunctionConstructor","React Hook useEffect has a missing dependency: 'setPagination'. Either include it or remove the dependency array.",["237"],"React Hook useEffect has a missing dependency: 'tableData'. Either include it or remove the dependency array.",["238"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'startLoading' is defined but never used.","'stopLoading' is defined but never used.","'ConstAPI' is defined but never used.",["239"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'arrOfCurrentPage', 'numberOfPages', and 'showTotal'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentPage' needs the current value of 'arrOfCurrentPage'.",["240"],"no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"243","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [dispatch, initPagingFilter, pagination, searchParams, setSearchParams]",{"range":"256","text":"257"},"Update the dependencies array to be: [dispatch]",{"range":"258","text":"259"},"Update the dependencies array to be: [listDefault, listGroups]",{"range":"260","text":"261"},"Update the dependencies array to be: [setList, toastList]",{"range":"262","text":"263"},"Update the dependencies array to be: [tableData, pagination, setPagination]",{"range":"264","text":"265"},"Update the dependencies array to be: [paginationTable, tableData]",{"range":"266","text":"267"},{"range":"268","text":"259"},"Update the dependencies array to be: [arrOfCurrentPage, currentPage, numberOfPages, pagination, showTotal]",{"range":"269","text":"270"},[4892,4894],"[dispatch, initPagingFilter, pagination, searchParams, setSearchParams]",[4981,4983],"[dispatch]",[5492,5504],"[listDefault, listGroups]",[491,493],"[setList, toastList]",[984,1007],"[tableData, pagination, setPagination]",[1422,1439],"[paginationTable, tableData]",[1387,1389],[4168,4193],"[arrOfCurrentPage, currentPage, numberOfPages, pagination, showTotal]"]